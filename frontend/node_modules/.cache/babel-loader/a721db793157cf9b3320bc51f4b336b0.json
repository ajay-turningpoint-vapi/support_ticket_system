{"ast":null,"code":"/**\r\n * DevExtreme (ui/draggable.js)\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n\n    if (\"value\" in descriptor) {\n      descriptor.writable = true;\n    }\n\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) {\n    _defineProperties(Constructor.prototype, protoProps);\n  }\n\n  if (staticProps) {\n    _defineProperties(Constructor, staticProps);\n  }\n\n  return Constructor;\n}\n\nvar $ = require(\"../core/renderer\");\n\nvar window = require(\"../core/utils/window\").getWindow();\n\nvar eventsEngine = require(\"../events/core/events_engine\");\n\nvar stringUtils = require(\"../core/utils/string\");\n\nvar registerComponent = require(\"../core/component_registrator\");\n\nvar translator = require(\"../animation/translator\");\n\nvar Animator = require(\"./scroll_view/animator\");\n\nvar browser = require(\"../core/utils/browser\");\n\nvar dasherize = require(\"../core/utils/inflector\").dasherize;\n\nvar extend = require(\"../core/utils/extend\").extend;\n\nvar DOMComponent = require(\"../core/dom_component\");\n\nvar getPublicElement = require(\"../core/utils/dom\").getPublicElement;\n\nvar eventUtils = require(\"../events/utils\");\n\nvar pointerEvents = require(\"../events/pointer\");\n\nvar dragEvents = require(\"../events/drag\");\n\nvar positionUtils = require(\"../animation/position\");\n\nvar typeUtils = require(\"../core/utils/type\");\n\nvar noop = require(\"../core/utils/common\").noop;\n\nvar viewPortUtils = require(\"../core/utils/view_port\");\n\nvar commonUtils = require(\"../core/utils/common\");\n\nvar EmptyTemplate = require(\"../core/templates/empty_template\").EmptyTemplate;\n\nvar deferredUtils = require(\"../core/utils/deferred\");\n\nvar getBoundingRect = require(\"../core/utils/position\").getBoundingRect;\n\nvar when = deferredUtils.when;\nvar fromPromise = deferredUtils.fromPromise;\nvar Deferred = deferredUtils.Deferred;\nvar DRAGGABLE = \"dxDraggable\";\nvar DRAGSTART_EVENT_NAME = eventUtils.addNamespace(dragEvents.start, DRAGGABLE);\nvar DRAG_EVENT_NAME = eventUtils.addNamespace(dragEvents.move, DRAGGABLE);\nvar DRAGEND_EVENT_NAME = eventUtils.addNamespace(dragEvents.end, DRAGGABLE);\nvar DRAG_ENTER_EVENT_NAME = eventUtils.addNamespace(dragEvents.enter, DRAGGABLE);\nvar DRAGEND_LEAVE_EVENT_NAME = eventUtils.addNamespace(dragEvents.leave, DRAGGABLE);\nvar POINTERDOWN_EVENT_NAME = eventUtils.addNamespace(pointerEvents.down, DRAGGABLE);\nvar CLONE_CLASS = \"clone\";\nvar targetDraggable;\nvar sourceDraggable;\nvar ANONYMOUS_TEMPLATE_NAME = \"content\";\n\nvar getMousePosition = function (event) {\n  return {\n    x: event.pageX - $(window).scrollLeft(),\n    y: event.pageY - $(window).scrollTop()\n  };\n};\n\nvar ScrollHelper = function () {\n  function ScrollHelper(orientation, component) {\n    _classCallCheck(this, ScrollHelper);\n\n    this._preventScroll = true;\n    this._component = component;\n\n    if (\"vertical\" === orientation) {\n      this._scrollValue = \"scrollTop\";\n      this._overFlowAttr = \"overflowY\";\n      this._sizeAttr = \"height\";\n      this._scrollSizeProp = \"scrollHeight\";\n      this._limitProps = {\n        start: \"top\",\n        end: \"bottom\"\n      };\n    } else {\n      this._scrollValue = \"scrollLeft\";\n      this._overFlowAttr = \"overflowX\";\n      this._sizeAttr = \"width\";\n      this._scrollSizeProp = \"scrollWidth\";\n      this._limitProps = {\n        start: \"left\",\n        end: \"right\"\n      };\n    }\n  }\n\n  _createClass(ScrollHelper, [{\n    key: \"updateScrollable\",\n    value: function (elements, mousePosition) {\n      var that = this;\n\n      if (!elements.some(function (element) {\n        return that._trySetScrollable(element, mousePosition);\n      })) {\n        that._$scrollableAtPointer = null;\n        that._scrollSpeed = 0;\n      }\n    }\n  }, {\n    key: \"isScrolling\",\n    value: function () {\n      return !!this._scrollSpeed;\n    }\n  }, {\n    key: \"isScrollable\",\n    value: function ($element) {\n      var that = this;\n      return (\"auto\" === $element.css(that._overFlowAttr) || $element.hasClass(\"dx-scrollable-container\")) && $element.prop(that._scrollSizeProp) > $element[that._sizeAttr]();\n    }\n  }, {\n    key: \"_trySetScrollable\",\n    value: function (element, mousePosition) {\n      var that = this;\n      var $element = $(element);\n      var distanceToBorders;\n\n      var sensitivity = that._component.option(\"scrollSensitivity\");\n\n      var isScrollable = that.isScrollable($element);\n\n      if (isScrollable) {\n        distanceToBorders = that._calculateDistanceToBorders($element, mousePosition);\n\n        if (sensitivity > distanceToBorders[that._limitProps.start]) {\n          if (!that._preventScroll) {\n            that._scrollSpeed = -that._calculateScrollSpeed(distanceToBorders[that._limitProps.start]);\n            that._$scrollableAtPointer = $element;\n          }\n        } else {\n          if (sensitivity > distanceToBorders[that._limitProps.end]) {\n            if (!that._preventScroll) {\n              that._scrollSpeed = that._calculateScrollSpeed(distanceToBorders[that._limitProps.end]);\n              that._$scrollableAtPointer = $element;\n            }\n          } else {\n            isScrollable = false;\n            that._preventScroll = false;\n          }\n        }\n      }\n\n      return isScrollable;\n    }\n  }, {\n    key: \"_calculateDistanceToBorders\",\n    value: function ($area, mousePosition) {\n      var area = $area.get(0);\n      var areaBoundingRect;\n\n      if (area) {\n        areaBoundingRect = getBoundingRect(area);\n        return {\n          left: mousePosition.x - areaBoundingRect.left,\n          top: mousePosition.y - areaBoundingRect.top,\n          right: areaBoundingRect.right - mousePosition.x,\n          bottom: areaBoundingRect.bottom - mousePosition.y\n        };\n      } else {\n        return {};\n      }\n    }\n  }, {\n    key: \"_calculateScrollSpeed\",\n    value: function (distance) {\n      var component = this._component;\n      var sensitivity = component.option(\"scrollSensitivity\");\n      var maxSpeed = component.option(\"scrollSpeed\");\n      return Math.ceil(Math.pow((sensitivity - distance) / sensitivity, 2) * maxSpeed);\n    }\n  }, {\n    key: \"scrollByStep\",\n    value: function () {\n      var that = this;\n      var nextScrollPosition;\n\n      if (that._$scrollableAtPointer && that._scrollSpeed) {\n        if (that._$scrollableAtPointer.hasClass(\"dx-scrollable-container\")) {\n          var $scrollable = that._$scrollableAtPointer.closest(\".dx-scrollable\");\n\n          var scrollableInstance = $scrollable.data(\"dxScrollable\") || $scrollable.data(\"dxScrollView\");\n\n          if (scrollableInstance) {\n            nextScrollPosition = scrollableInstance.scrollOffset();\n            nextScrollPosition[that._limitProps.start] += that._scrollSpeed;\n            scrollableInstance.scrollTo(nextScrollPosition);\n          }\n        } else {\n          nextScrollPosition = that._$scrollableAtPointer[that._scrollValue]() + that._scrollSpeed;\n\n          that._$scrollableAtPointer[that._scrollValue](nextScrollPosition);\n        }\n\n        var dragMoveArgs = that._component._dragMoveArgs;\n\n        if (dragMoveArgs) {\n          that._component._dragMoveHandler(dragMoveArgs);\n        }\n      }\n    }\n  }, {\n    key: \"reset\",\n    value: function () {\n      this._$scrollableAtPointer = null;\n      this._scrollSpeed = 0;\n      this._preventScroll = true;\n    }\n  }, {\n    key: \"isOutsideScrollable\",\n    value: function ($scrollable, event) {\n      if (!$scrollable) {\n        return false;\n      }\n\n      var scrollableSize = getBoundingRect($scrollable.get(0));\n      var start = scrollableSize[this._limitProps.start];\n      var size = scrollableSize[this._sizeAttr];\n      var mousePosition = getMousePosition(event);\n      var location = \"width\" === this._sizeAttr ? mousePosition.x : mousePosition.y;\n      return location < start || location > start + size;\n    }\n  }]);\n\n  return ScrollHelper;\n}();\n\nvar ScrollAnimator = Animator.inherit({\n  ctor: function (strategy) {\n    this.callBase();\n    this._strategy = strategy;\n  },\n  _step: function () {\n    var horizontalScrollHelper = this._strategy._horizontalScrollHelper;\n    var verticalScrollHelper = this._strategy._verticalScrollHelper;\n    horizontalScrollHelper && horizontalScrollHelper.scrollByStep();\n    verticalScrollHelper && verticalScrollHelper.scrollByStep();\n  }\n});\nvar Draggable = DOMComponent.inherit({\n  reset: noop,\n  dragMove: noop,\n  dragEnter: noop,\n  dragLeave: noop,\n  dragEnd: function (sourceEvent) {\n    var sourceDraggable = this._getSourceDraggable();\n\n    sourceDraggable._fireRemoveEvent(sourceEvent);\n\n    return new Deferred().resolve();\n  },\n  _fireRemoveEvent: noop,\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      onDragStart: null,\n      onDragMove: null,\n      onDragEnd: null,\n      onDrop: null,\n      immediate: true,\n      dragDirection: \"both\",\n      boundary: void 0,\n      boundOffset: 0,\n      allowMoveByClick: false,\n      itemData: null,\n      container: void 0,\n      dragTemplate: void 0,\n      contentTemplate: \"content\",\n      handle: \"\",\n      filter: \"\",\n      clone: false,\n      autoScroll: true,\n      scrollSpeed: 30,\n      scrollSensitivity: 60,\n      group: void 0,\n      data: void 0\n    });\n  },\n  _setOptionsByReference: function () {\n    this.callBase.apply(this, arguments);\n    extend(this._optionsByReference, {\n      component: true,\n      group: true,\n      itemData: true,\n      data: true\n    });\n  },\n  _init: function () {\n    this.callBase();\n\n    this._attachEventHandlers();\n\n    this._scrollAnimator = new ScrollAnimator(this);\n    this._horizontalScrollHelper = new ScrollHelper(\"horizontal\", this);\n    this._verticalScrollHelper = new ScrollHelper(\"vertical\", this);\n  },\n  _normalizeCursorOffset: function (offset) {\n    if (typeUtils.isObject(offset)) {\n      offset = {\n        h: offset.x,\n        v: offset.y\n      };\n    }\n\n    offset = commonUtils.splitPair(offset).map(function (value) {\n      return parseFloat(value);\n    });\n    return {\n      left: offset[0],\n      top: 1 === offset.length ? offset[0] : offset[1]\n    };\n  },\n  _getNormalizedCursorOffset: function (offset, options) {\n    if (typeUtils.isFunction(offset)) {\n      offset = offset.call(this, options);\n    }\n\n    return this._normalizeCursorOffset(offset);\n  },\n  _calculateElementOffset: function (options) {\n    var elementOffset;\n    var dragElementOffset;\n    var event = options.event;\n    var $element = $(options.itemElement);\n    var $dragElement = $(options.dragElement);\n\n    var isCloned = this._dragElementIsCloned();\n\n    var cursorOffset = this.option(\"cursorOffset\");\n    var normalizedCursorOffset = {\n      left: 0,\n      top: 0\n    };\n    var currentLocate = this._initialLocate = translator.locate($dragElement);\n\n    if (isCloned || options.initialOffset || cursorOffset) {\n      elementOffset = options.initialOffset || $element.offset();\n\n      if (cursorOffset) {\n        normalizedCursorOffset = this._getNormalizedCursorOffset(cursorOffset, options);\n\n        if (isFinite(normalizedCursorOffset.left)) {\n          elementOffset.left = event.pageX;\n        }\n\n        if (isFinite(normalizedCursorOffset.top)) {\n          elementOffset.top = event.pageY;\n        }\n      }\n\n      dragElementOffset = $dragElement.offset();\n      elementOffset.top -= dragElementOffset.top + (normalizedCursorOffset.top || 0) - currentLocate.top;\n      elementOffset.left -= dragElementOffset.left + (normalizedCursorOffset.left || 0) - currentLocate.left;\n    }\n\n    return elementOffset;\n  },\n  _initPosition: function (options) {\n    var $dragElement = $(options.dragElement);\n\n    var elementOffset = this._calculateElementOffset(options);\n\n    if (elementOffset) {\n      this._move(elementOffset, $dragElement);\n    }\n\n    this._startPosition = translator.locate($dragElement);\n  },\n  _startAnimator: function () {\n    if (!this._scrollAnimator.inProgress()) {\n      this._scrollAnimator.start();\n    }\n  },\n  _stopAnimator: function () {\n    this._scrollAnimator.stop();\n  },\n  _addWidgetPrefix: function (className) {\n    var componentName = this.NAME;\n    return dasherize(componentName) + (className ? \"-\" + className : \"\");\n  },\n  _getItemsSelector: function () {\n    return this.option(\"filter\") || \"\";\n  },\n  _$content: function () {\n    var $element = this.$element();\n    var $wrapper = $element.children(\".dx-template-wrapper\");\n    return $wrapper.length ? $wrapper : $element;\n  },\n  _attachEventHandlers: function () {\n    var _this = this;\n\n    if (this.option(\"disabled\")) {\n      return;\n    }\n\n    var $element = this._$content();\n\n    var itemsSelector = this._getItemsSelector();\n\n    var allowMoveByClick = this.option(\"allowMoveByClick\");\n    var data = {\n      direction: this.option(\"dragDirection\"),\n      immediate: this.option(\"immediate\"),\n      checkDropTarget: function ($target, event) {\n        var targetGroup = _this.option(\"group\");\n\n        var sourceGroup = _this._getSourceDraggable().option(\"group\");\n\n        var $scrollable = _this._getScrollable($target);\n\n        if (_this._verticalScrollHelper.isOutsideScrollable($scrollable, event) || _this._horizontalScrollHelper.isOutsideScrollable($scrollable, event)) {\n          return false;\n        }\n\n        return sourceGroup && sourceGroup === targetGroup;\n      }\n    };\n\n    if (allowMoveByClick) {\n      $element = this._getArea();\n      eventsEngine.on($element, POINTERDOWN_EVENT_NAME, data, this._pointerDownHandler.bind(this));\n    }\n\n    if (\">\" === itemsSelector[0]) {\n      itemsSelector = itemsSelector.slice(1);\n    }\n\n    eventsEngine.on($element, DRAGSTART_EVENT_NAME, itemsSelector, data, this._dragStartHandler.bind(this));\n    eventsEngine.on($element, DRAG_EVENT_NAME, data, this._dragMoveHandler.bind(this));\n    eventsEngine.on($element, DRAGEND_EVENT_NAME, data, this._dragEndHandler.bind(this));\n    eventsEngine.on($element, DRAG_ENTER_EVENT_NAME, data, this._dragEnterHandler.bind(this));\n    eventsEngine.on($element, DRAGEND_LEAVE_EVENT_NAME, data, this._dragLeaveHandler.bind(this));\n  },\n  _dragElementIsCloned: function () {\n    return this._$dragElement && this._$dragElement.hasClass(this._addWidgetPrefix(CLONE_CLASS));\n  },\n  _getDragTemplateArgs: function ($element, $container) {\n    return {\n      container: getPublicElement($container),\n      model: {\n        itemData: this.option(\"itemData\"),\n        itemElement: getPublicElement($element)\n      }\n    };\n  },\n  _createDragElement: function ($element) {\n    var result = $element;\n    var clone = this.option(\"clone\");\n\n    var $container = this._getContainer();\n\n    var template = this.option(\"dragTemplate\");\n\n    if (template) {\n      template = this._getTemplate(template);\n      result = $(\"<div>\").appendTo($container);\n      template.render(this._getDragTemplateArgs($element, result));\n    } else {\n      if (clone) {\n        result = $(\"<div>\").appendTo($container);\n        $element.clone().css({\n          width: $element.css(\"width\"),\n          height: $element.css(\"height\")\n        }).appendTo(result);\n      }\n    }\n\n    return result.toggleClass(this._addWidgetPrefix(CLONE_CLASS), result.get(0) !== $element.get(0)).toggleClass(\"dx-rtl\", this.option(\"rtlEnabled\"));\n  },\n  _resetDragElement: function () {\n    if (this._dragElementIsCloned()) {\n      this._$dragElement.remove();\n    } else {\n      this._toggleDraggingClass(false);\n    }\n\n    this._$dragElement = null;\n  },\n  _resetSourceElement: function () {\n    this._toggleDragSourceClass(false);\n\n    this._$sourceElement = null;\n  },\n  _detachEventHandlers: function () {\n    eventsEngine.off(this._$content(), \".\" + DRAGGABLE);\n    eventsEngine.off(this._getArea(), \".\" + DRAGGABLE);\n  },\n  _move: function (position, $element) {\n    translator.move($element || this._$dragElement, position);\n  },\n  _getDraggableElement: function (e) {\n    var $sourceElement = this._getSourceElement();\n\n    if ($sourceElement) {\n      return $sourceElement;\n    }\n\n    var allowMoveByClick = this.option(\"allowMoveByClick\");\n\n    if (allowMoveByClick) {\n      return this.$element();\n    }\n\n    var $target = $(e && e.target);\n\n    var itemsSelector = this._getItemsSelector();\n\n    if (\">\" === itemsSelector[0]) {\n      var $items = this._$content().find(itemsSelector);\n\n      if (!$items.is($target)) {\n        $target = $target.closest($items);\n      }\n    }\n\n    return $target;\n  },\n  _getSourceElement: function () {\n    var draggable = this._getSourceDraggable();\n\n    return draggable._$sourceElement;\n  },\n  _pointerDownHandler: function (e) {\n    if (eventUtils.needSkipEvent(e)) {\n      return;\n    }\n\n    var position = {};\n    var $element = this.$element();\n    var dragDirection = this.option(\"dragDirection\");\n\n    if (\"horizontal\" === dragDirection || \"both\" === dragDirection) {\n      position.left = e.pageX - $element.offset().left + translator.locate($element).left - $element.width() / 2;\n    }\n\n    if (\"vertical\" === dragDirection || \"both\" === dragDirection) {\n      position.top = e.pageY - $element.offset().top + translator.locate($element).top - $element.height() / 2;\n    }\n\n    this._move(position, $element);\n\n    this._getAction(\"onDragMove\")(this._getEventArgs(e));\n  },\n  _isValidElement: function (event, $element) {\n    var handle = this.option(\"handle\");\n    var $target = $(event.originalEvent && event.originalEvent.target);\n\n    if (handle && !$target.closest(handle).length) {\n      return false;\n    }\n\n    if (!$element.length) {\n      return false;\n    }\n\n    return !$element.is(\".dx-state-disabled, .dx-state-disabled *\");\n  },\n  _dragStartHandler: function (e) {\n    var $element = this._getDraggableElement(e);\n\n    if (this._$sourceElement) {\n      return;\n    }\n\n    if (!this._isValidElement(e, $element)) {\n      e.cancel = true;\n      return;\n    }\n\n    var dragStartArgs = this._getDragStartArgs(e, $element);\n\n    this._getAction(\"onDragStart\")(dragStartArgs);\n\n    if (dragStartArgs.cancel) {\n      e.cancel = true;\n      return;\n    }\n\n    this.option(\"itemData\", dragStartArgs.itemData);\n\n    this._setSourceDraggable();\n\n    this._$sourceElement = $element;\n    var initialOffset = $element.offset();\n\n    var $dragElement = this._$dragElement = this._createDragElement($element);\n\n    this._toggleDraggingClass(true);\n\n    this._toggleDragSourceClass(true);\n\n    var isFixedPosition = \"fixed\" === $dragElement.css(\"position\");\n\n    this._initPosition(extend({}, dragStartArgs, {\n      dragElement: $dragElement.get(0),\n      initialOffset: isFixedPosition && initialOffset\n    }));\n\n    var $area = this._getArea();\n\n    var areaOffset = this._getAreaOffset($area);\n\n    var boundOffset = this._getBoundOffset();\n\n    var areaWidth = $area.outerWidth();\n    var areaHeight = $area.outerHeight();\n    var elementWidth = $dragElement.width();\n    var elementHeight = $dragElement.height();\n    var startOffset = {\n      left: $dragElement.offset().left - areaOffset.left,\n      top: $dragElement.offset().top - areaOffset.top\n    };\n\n    if ($area.length) {\n      e.maxLeftOffset = startOffset.left - boundOffset.left;\n      e.maxRightOffset = areaWidth - startOffset.left - elementWidth - boundOffset.right;\n      e.maxTopOffset = startOffset.top - boundOffset.top;\n      e.maxBottomOffset = areaHeight - startOffset.top - elementHeight - boundOffset.bottom;\n    }\n\n    if (this.option(\"autoScroll\")) {\n      this._startAnimator();\n    }\n  },\n  _getAreaOffset: function ($area) {\n    var offset = $area && positionUtils.offset($area);\n    return offset ? offset : {\n      left: 0,\n      top: 0\n    };\n  },\n  _toggleDraggingClass: function (value) {\n    this._$dragElement && this._$dragElement.toggleClass(this._addWidgetPrefix(\"dragging\"), value);\n  },\n  _toggleDragSourceClass: function (value, $element) {\n    var $sourceElement = $element || this._$sourceElement;\n    $sourceElement && $sourceElement.toggleClass(this._addWidgetPrefix(\"source\"), value);\n  },\n  _getBoundOffset: function () {\n    var boundOffset = this.option(\"boundOffset\");\n\n    if (typeUtils.isFunction(boundOffset)) {\n      boundOffset = boundOffset.call(this);\n    }\n\n    return stringUtils.quadToObject(boundOffset);\n  },\n  _getArea: function () {\n    var area = this.option(\"boundary\");\n\n    if (typeUtils.isFunction(area)) {\n      area = area.call(this);\n    }\n\n    return $(area);\n  },\n  _getContainer: function () {\n    var container = this.option(\"container\");\n\n    if (void 0 === container) {\n      container = viewPortUtils.value();\n    }\n\n    return $(container);\n  },\n  _dragMoveHandler: function (e) {\n    this._dragMoveArgs = e;\n\n    if (!this._$dragElement) {\n      e.cancel = true;\n      return;\n    }\n\n    var offset = e.offset;\n    var startPosition = this._startPosition;\n\n    this._move({\n      left: startPosition.left + offset.x,\n      top: startPosition.top + offset.y\n    });\n\n    this._updateScrollable(e);\n\n    var eventArgs = this._getEventArgs(e);\n\n    this._getAction(\"onDragMove\")(eventArgs);\n\n    if (true === eventArgs.cancel) {\n      return;\n    }\n\n    var targetDraggable = this._getTargetDraggable();\n\n    targetDraggable.dragMove(e);\n  },\n  _updateScrollable: function (e) {\n    var that = this;\n\n    if (that.option(\"autoScroll\")) {\n      var mousePosition = getMousePosition(e);\n      var allObjects = that.getElementsFromPoint(mousePosition);\n\n      that._verticalScrollHelper.updateScrollable(allObjects, mousePosition);\n\n      that._horizontalScrollHelper.updateScrollable(allObjects, mousePosition);\n    }\n  },\n  getElementsFromPoint: function (position, dragElement) {\n    var ownerDocument = (dragElement || this._$dragElement.get(0)).ownerDocument;\n\n    if (browser.msie) {\n      var msElements = ownerDocument.msElementsFromPoint(position.x, position.y);\n\n      if (msElements) {\n        return Array.prototype.slice.call(msElements);\n      }\n\n      return [];\n    }\n\n    return ownerDocument.elementsFromPoint(position.x, position.y);\n  },\n  _getScrollable: function ($element) {\n    var _this2 = this;\n\n    var $scrollable;\n    $element.parents().toArray().some(function (parent) {\n      var $parent = $(parent);\n\n      if (_this2._horizontalScrollHelper.isScrollable($parent) || _this2._verticalScrollHelper.isScrollable($parent)) {\n        $scrollable = $parent;\n        return true;\n      }\n    });\n    return $scrollable;\n  },\n  _defaultActionArgs: function () {\n    var args = this.callBase.apply(this, arguments);\n    var component = this.option(\"component\");\n\n    if (component) {\n      args.component = component;\n      args.element = component.element();\n    }\n\n    return args;\n  },\n  _getEventArgs: function (e) {\n    var sourceDraggable = this._getSourceDraggable();\n\n    var targetDraggable = this._getTargetDraggable();\n\n    return {\n      event: e,\n      itemData: sourceDraggable.option(\"itemData\"),\n      itemElement: getPublicElement(sourceDraggable._$sourceElement),\n      fromComponent: sourceDraggable.option(\"component\") || sourceDraggable,\n      toComponent: targetDraggable.option(\"component\") || targetDraggable,\n      fromData: sourceDraggable.option(\"data\"),\n      toData: targetDraggable.option(\"data\")\n    };\n  },\n  _getDragStartArgs: function (e, $itemElement) {\n    var args = this._getEventArgs(e);\n\n    return {\n      event: args.event,\n      itemData: args.itemData,\n      itemElement: $itemElement,\n      fromData: args.fromData\n    };\n  },\n  _revertItemToInitialPosition: function () {\n    !this._dragElementIsCloned() && this._move(this._initialLocate, this._$sourceElement);\n  },\n  _dragEndHandler: function (e) {\n    var _this3 = this;\n\n    var d = new Deferred();\n\n    var dragEndEventArgs = this._getEventArgs(e);\n\n    var dropEventArgs = this._getEventArgs(e);\n\n    var targetDraggable = this._getTargetDraggable();\n\n    var needRevertPosition = true;\n\n    try {\n      this._getAction(\"onDragEnd\")(dragEndEventArgs);\n    } finally {\n      when(fromPromise(dragEndEventArgs.cancel)).done(function (cancel) {\n        if (!cancel) {\n          if (targetDraggable !== _this3) {\n            targetDraggable._getAction(\"onDrop\")(dropEventArgs);\n          }\n\n          if (!dropEventArgs.cancel) {\n            needRevertPosition = false;\n            when(fromPromise(targetDraggable.dragEnd(dragEndEventArgs))).always(d.resolve);\n            return;\n          }\n        }\n\n        d.resolve();\n      }).fail(d.resolve);\n      d.done(function () {\n        if (needRevertPosition) {\n          _this3._revertItemToInitialPosition();\n        }\n\n        _this3.reset();\n\n        targetDraggable.reset();\n\n        _this3._stopAnimator();\n\n        _this3._horizontalScrollHelper.reset();\n\n        _this3._verticalScrollHelper.reset();\n\n        _this3._resetDragElement();\n\n        _this3._resetSourceElement();\n\n        _this3._resetTargetDraggable();\n\n        _this3._resetSourceDraggable();\n      });\n    }\n  },\n  _isTargetOverAnotherDraggable: function (e) {\n    var _this4 = this;\n\n    var sourceDraggable = this._getSourceDraggable();\n\n    if (this === sourceDraggable) {\n      return false;\n    }\n\n    var $dragElement = sourceDraggable._$dragElement;\n    var $sourceDraggableElement = sourceDraggable.$element();\n    var $targetDraggableElement = this.$element();\n    var mousePosition = getMousePosition(e);\n    var elements = this.getElementsFromPoint(mousePosition, e.target);\n    var firstWidgetElement = elements.filter(function (element) {\n      var $element = $(element);\n\n      if ($element.hasClass(_this4._addWidgetPrefix())) {\n        return !$element.closest($dragElement).length;\n      }\n    })[0];\n\n    var $sourceElement = this._getSourceElement();\n\n    var isTargetOverItself = firstWidgetElement === $sourceDraggableElement.get(0);\n    var isTargetOverNestedDraggable = $(firstWidgetElement).closest($sourceElement).length;\n    return !firstWidgetElement || firstWidgetElement === $targetDraggableElement.get(0) && !isTargetOverItself && !isTargetOverNestedDraggable;\n  },\n  _dragEnterHandler: function (e) {\n    if (this._isTargetOverAnotherDraggable(e)) {\n      this._setTargetDraggable();\n    }\n\n    var sourceDraggable = this._getSourceDraggable();\n\n    sourceDraggable.dragEnter(e);\n  },\n  _dragLeaveHandler: function (e) {\n    this._resetTargetDraggable();\n\n    if (this !== this._getSourceDraggable()) {\n      this.reset();\n    }\n\n    var sourceDraggable = this._getSourceDraggable();\n\n    sourceDraggable.dragLeave(e);\n  },\n  _getAction: function (name) {\n    return this[\"_\" + name + \"Action\"] || this._createActionByOption(name);\n  },\n  _getAnonymousTemplateName: function () {\n    return ANONYMOUS_TEMPLATE_NAME;\n  },\n  _initTemplates: function () {\n    if (!this.option(\"contentTemplate\")) {\n      return;\n    }\n\n    this._templateManager.addDefaultTemplates({\n      content: new EmptyTemplate()\n    });\n\n    this.callBase.apply(this, arguments);\n  },\n  _render: function () {\n    this.callBase();\n    this.$element().addClass(this._addWidgetPrefix());\n    var transclude = this._templateManager.anonymousTemplateName === this.option(\"contentTemplate\");\n\n    var template = this._getTemplateByOption(\"contentTemplate\");\n\n    if (template) {\n      $(template.render({\n        container: this.element(),\n        transclude: transclude\n      }));\n    }\n  },\n  _optionChanged: function (args) {\n    var name = args.name;\n\n    switch (name) {\n      case \"onDragStart\":\n      case \"onDragMove\":\n      case \"onDragEnd\":\n      case \"onDrop\":\n        this[\"_\" + name + \"Action\"] = this._createActionByOption(name);\n        break;\n\n      case \"dragTemplate\":\n      case \"contentTemplate\":\n      case \"container\":\n      case \"clone\":\n        break;\n\n      case \"allowMoveByClick\":\n      case \"dragDirection\":\n      case \"disabled\":\n      case \"boundary\":\n      case \"filter\":\n      case \"immediate\":\n        this._resetDragElement();\n\n        this._detachEventHandlers();\n\n        this._attachEventHandlers();\n\n        break;\n\n      case \"autoScroll\":\n        this._verticalScrollHelper.reset();\n\n        this._horizontalScrollHelper.reset();\n\n        break;\n\n      case \"scrollSensitivity\":\n      case \"scrollSpeed\":\n      case \"boundOffset\":\n      case \"handle\":\n      case \"group\":\n      case \"data\":\n      case \"itemData\":\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _getTargetDraggable: function () {\n    return targetDraggable || this;\n  },\n  _getSourceDraggable: function () {\n    return sourceDraggable || this;\n  },\n  _setTargetDraggable: function () {\n    var currentGroup = this.option(\"group\");\n\n    var sourceDraggable = this._getSourceDraggable();\n\n    if (currentGroup && currentGroup === sourceDraggable.option(\"group\")) {\n      targetDraggable = this;\n    }\n  },\n  _setSourceDraggable: function () {\n    sourceDraggable = this;\n  },\n  _resetSourceDraggable: function () {\n    sourceDraggable = null;\n  },\n  _resetTargetDraggable: function () {\n    targetDraggable = null;\n  },\n  _dispose: function () {\n    this.callBase();\n\n    this._detachEventHandlers();\n\n    this._resetDragElement();\n\n    this._resetTargetDraggable();\n\n    this._resetSourceDraggable();\n\n    this._$sourceElement = null;\n\n    this._stopAnimator();\n  }\n});\nregisterComponent(DRAGGABLE, Draggable);\nmodule.exports = Draggable;\nmodule.exports.default = module.exports;","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/ticketSystem/frontend/node_modules/devextreme/ui/draggable.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","$","require","window","getWindow","eventsEngine","stringUtils","registerComponent","translator","Animator","browser","dasherize","extend","DOMComponent","getPublicElement","eventUtils","pointerEvents","dragEvents","positionUtils","typeUtils","noop","viewPortUtils","commonUtils","EmptyTemplate","deferredUtils","getBoundingRect","when","fromPromise","Deferred","DRAGGABLE","DRAGSTART_EVENT_NAME","addNamespace","start","DRAG_EVENT_NAME","move","DRAGEND_EVENT_NAME","end","DRAG_ENTER_EVENT_NAME","enter","DRAGEND_LEAVE_EVENT_NAME","leave","POINTERDOWN_EVENT_NAME","down","CLONE_CLASS","targetDraggable","sourceDraggable","ANONYMOUS_TEMPLATE_NAME","getMousePosition","event","x","pageX","scrollLeft","y","pageY","scrollTop","ScrollHelper","orientation","component","_preventScroll","_component","_scrollValue","_overFlowAttr","_sizeAttr","_scrollSizeProp","_limitProps","value","elements","mousePosition","that","some","element","_trySetScrollable","_$scrollableAtPointer","_scrollSpeed","$element","css","hasClass","prop","distanceToBorders","sensitivity","option","isScrollable","_calculateDistanceToBorders","_calculateScrollSpeed","$area","area","get","areaBoundingRect","left","top","right","bottom","distance","maxSpeed","Math","ceil","pow","nextScrollPosition","$scrollable","closest","scrollableInstance","data","scrollOffset","scrollTo","dragMoveArgs","_dragMoveArgs","_dragMoveHandler","scrollableSize","size","location","ScrollAnimator","inherit","ctor","strategy","callBase","_strategy","_step","horizontalScrollHelper","_horizontalScrollHelper","verticalScrollHelper","_verticalScrollHelper","scrollByStep","Draggable","reset","dragMove","dragEnter","dragLeave","dragEnd","sourceEvent","_getSourceDraggable","_fireRemoveEvent","resolve","_getDefaultOptions","onDragStart","onDragMove","onDragEnd","onDrop","immediate","dragDirection","boundary","boundOffset","allowMoveByClick","itemData","container","dragTemplate","contentTemplate","handle","filter","clone","autoScroll","scrollSpeed","scrollSensitivity","group","_setOptionsByReference","apply","arguments","_optionsByReference","_init","_attachEventHandlers","_scrollAnimator","_normalizeCursorOffset","offset","isObject","h","v","splitPair","map","parseFloat","_getNormalizedCursorOffset","options","isFunction","call","_calculateElementOffset","elementOffset","dragElementOffset","itemElement","$dragElement","dragElement","isCloned","_dragElementIsCloned","cursorOffset","normalizedCursorOffset","currentLocate","_initialLocate","locate","initialOffset","isFinite","_initPosition","_move","_startPosition","_startAnimator","inProgress","_stopAnimator","stop","_addWidgetPrefix","className","componentName","NAME","_getItemsSelector","_$content","$wrapper","children","_this","itemsSelector","direction","checkDropTarget","$target","targetGroup","sourceGroup","_getScrollable","isOutsideScrollable","_getArea","on","_pointerDownHandler","bind","slice","_dragStartHandler","_dragEndHandler","_dragEnterHandler","_dragLeaveHandler","_$dragElement","_getDragTemplateArgs","$container","model","_createDragElement","result","_getContainer","template","_getTemplate","appendTo","render","width","height","toggleClass","_resetDragElement","remove","_toggleDraggingClass","_resetSourceElement","_toggleDragSourceClass","_$sourceElement","_detachEventHandlers","off","position","_getDraggableElement","e","$sourceElement","_getSourceElement","$items","find","is","draggable","needSkipEvent","_getAction","_getEventArgs","_isValidElement","originalEvent","cancel","dragStartArgs","_getDragStartArgs","_setSourceDraggable","isFixedPosition","areaOffset","_getAreaOffset","_getBoundOffset","areaWidth","outerWidth","areaHeight","outerHeight","elementWidth","elementHeight","startOffset","maxLeftOffset","maxRightOffset","maxTopOffset","maxBottomOffset","quadToObject","startPosition","_updateScrollable","eventArgs","_getTargetDraggable","allObjects","getElementsFromPoint","updateScrollable","ownerDocument","msie","msElements","msElementsFromPoint","Array","elementsFromPoint","_this2","parents","toArray","parent","$parent","_defaultActionArgs","args","fromComponent","toComponent","fromData","toData","$itemElement","_revertItemToInitialPosition","_this3","d","dragEndEventArgs","dropEventArgs","needRevertPosition","done","always","fail","_resetTargetDraggable","_resetSourceDraggable","_isTargetOverAnotherDraggable","_this4","$sourceDraggableElement","$targetDraggableElement","firstWidgetElement","isTargetOverItself","isTargetOverNestedDraggable","_setTargetDraggable","name","_createActionByOption","_getAnonymousTemplateName","_initTemplates","_templateManager","addDefaultTemplates","content","_render","addClass","transclude","anonymousTemplateName","_getTemplateByOption","_optionChanged","currentGroup","_dispose","module","exports","default"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/draggable.js)\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\n\r\nfunction _classCallCheck(instance, Constructor) {\r\n    if (!(instance instanceof Constructor)) {\r\n        throw new TypeError(\"Cannot call a class as a function\")\r\n    }\r\n}\r\n\r\nfunction _defineProperties(target, props) {\r\n    for (var i = 0; i < props.length; i++) {\r\n        var descriptor = props[i];\r\n        descriptor.enumerable = descriptor.enumerable || false;\r\n        descriptor.configurable = true;\r\n        if (\"value\" in descriptor) {\r\n            descriptor.writable = true\r\n        }\r\n        Object.defineProperty(target, descriptor.key, descriptor)\r\n    }\r\n}\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) {\r\n    if (protoProps) {\r\n        _defineProperties(Constructor.prototype, protoProps)\r\n    }\r\n    if (staticProps) {\r\n        _defineProperties(Constructor, staticProps)\r\n    }\r\n    return Constructor\r\n}\r\nvar $ = require(\"../core/renderer\");\r\nvar window = require(\"../core/utils/window\").getWindow();\r\nvar eventsEngine = require(\"../events/core/events_engine\");\r\nvar stringUtils = require(\"../core/utils/string\");\r\nvar registerComponent = require(\"../core/component_registrator\");\r\nvar translator = require(\"../animation/translator\");\r\nvar Animator = require(\"./scroll_view/animator\");\r\nvar browser = require(\"../core/utils/browser\");\r\nvar dasherize = require(\"../core/utils/inflector\").dasherize;\r\nvar extend = require(\"../core/utils/extend\").extend;\r\nvar DOMComponent = require(\"../core/dom_component\");\r\nvar getPublicElement = require(\"../core/utils/dom\").getPublicElement;\r\nvar eventUtils = require(\"../events/utils\");\r\nvar pointerEvents = require(\"../events/pointer\");\r\nvar dragEvents = require(\"../events/drag\");\r\nvar positionUtils = require(\"../animation/position\");\r\nvar typeUtils = require(\"../core/utils/type\");\r\nvar noop = require(\"../core/utils/common\").noop;\r\nvar viewPortUtils = require(\"../core/utils/view_port\");\r\nvar commonUtils = require(\"../core/utils/common\");\r\nvar EmptyTemplate = require(\"../core/templates/empty_template\").EmptyTemplate;\r\nvar deferredUtils = require(\"../core/utils/deferred\");\r\nvar getBoundingRect = require(\"../core/utils/position\").getBoundingRect;\r\nvar when = deferredUtils.when;\r\nvar fromPromise = deferredUtils.fromPromise;\r\nvar Deferred = deferredUtils.Deferred;\r\nvar DRAGGABLE = \"dxDraggable\";\r\nvar DRAGSTART_EVENT_NAME = eventUtils.addNamespace(dragEvents.start, DRAGGABLE);\r\nvar DRAG_EVENT_NAME = eventUtils.addNamespace(dragEvents.move, DRAGGABLE);\r\nvar DRAGEND_EVENT_NAME = eventUtils.addNamespace(dragEvents.end, DRAGGABLE);\r\nvar DRAG_ENTER_EVENT_NAME = eventUtils.addNamespace(dragEvents.enter, DRAGGABLE);\r\nvar DRAGEND_LEAVE_EVENT_NAME = eventUtils.addNamespace(dragEvents.leave, DRAGGABLE);\r\nvar POINTERDOWN_EVENT_NAME = eventUtils.addNamespace(pointerEvents.down, DRAGGABLE);\r\nvar CLONE_CLASS = \"clone\";\r\nvar targetDraggable;\r\nvar sourceDraggable;\r\nvar ANONYMOUS_TEMPLATE_NAME = \"content\";\r\nvar getMousePosition = function(event) {\r\n    return {\r\n        x: event.pageX - $(window).scrollLeft(),\r\n        y: event.pageY - $(window).scrollTop()\r\n    }\r\n};\r\nvar ScrollHelper = function() {\r\n    function ScrollHelper(orientation, component) {\r\n        _classCallCheck(this, ScrollHelper);\r\n        this._preventScroll = true;\r\n        this._component = component;\r\n        if (\"vertical\" === orientation) {\r\n            this._scrollValue = \"scrollTop\";\r\n            this._overFlowAttr = \"overflowY\";\r\n            this._sizeAttr = \"height\";\r\n            this._scrollSizeProp = \"scrollHeight\";\r\n            this._limitProps = {\r\n                start: \"top\",\r\n                end: \"bottom\"\r\n            }\r\n        } else {\r\n            this._scrollValue = \"scrollLeft\";\r\n            this._overFlowAttr = \"overflowX\";\r\n            this._sizeAttr = \"width\";\r\n            this._scrollSizeProp = \"scrollWidth\";\r\n            this._limitProps = {\r\n                start: \"left\",\r\n                end: \"right\"\r\n            }\r\n        }\r\n    }\r\n    _createClass(ScrollHelper, [{\r\n        key: \"updateScrollable\",\r\n        value: function(elements, mousePosition) {\r\n            var that = this;\r\n            if (!elements.some(function(element) {\r\n                    return that._trySetScrollable(element, mousePosition)\r\n                })) {\r\n                that._$scrollableAtPointer = null;\r\n                that._scrollSpeed = 0\r\n            }\r\n        }\r\n    }, {\r\n        key: \"isScrolling\",\r\n        value: function() {\r\n            return !!this._scrollSpeed\r\n        }\r\n    }, {\r\n        key: \"isScrollable\",\r\n        value: function($element) {\r\n            var that = this;\r\n            return (\"auto\" === $element.css(that._overFlowAttr) || $element.hasClass(\"dx-scrollable-container\")) && $element.prop(that._scrollSizeProp) > $element[that._sizeAttr]()\r\n        }\r\n    }, {\r\n        key: \"_trySetScrollable\",\r\n        value: function(element, mousePosition) {\r\n            var that = this;\r\n            var $element = $(element);\r\n            var distanceToBorders;\r\n            var sensitivity = that._component.option(\"scrollSensitivity\");\r\n            var isScrollable = that.isScrollable($element);\r\n            if (isScrollable) {\r\n                distanceToBorders = that._calculateDistanceToBorders($element, mousePosition);\r\n                if (sensitivity > distanceToBorders[that._limitProps.start]) {\r\n                    if (!that._preventScroll) {\r\n                        that._scrollSpeed = -that._calculateScrollSpeed(distanceToBorders[that._limitProps.start]);\r\n                        that._$scrollableAtPointer = $element\r\n                    }\r\n                } else {\r\n                    if (sensitivity > distanceToBorders[that._limitProps.end]) {\r\n                        if (!that._preventScroll) {\r\n                            that._scrollSpeed = that._calculateScrollSpeed(distanceToBorders[that._limitProps.end]);\r\n                            that._$scrollableAtPointer = $element\r\n                        }\r\n                    } else {\r\n                        isScrollable = false;\r\n                        that._preventScroll = false\r\n                    }\r\n                }\r\n            }\r\n            return isScrollable\r\n        }\r\n    }, {\r\n        key: \"_calculateDistanceToBorders\",\r\n        value: function($area, mousePosition) {\r\n            var area = $area.get(0);\r\n            var areaBoundingRect;\r\n            if (area) {\r\n                areaBoundingRect = getBoundingRect(area);\r\n                return {\r\n                    left: mousePosition.x - areaBoundingRect.left,\r\n                    top: mousePosition.y - areaBoundingRect.top,\r\n                    right: areaBoundingRect.right - mousePosition.x,\r\n                    bottom: areaBoundingRect.bottom - mousePosition.y\r\n                }\r\n            } else {\r\n                return {}\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_calculateScrollSpeed\",\r\n        value: function(distance) {\r\n            var component = this._component;\r\n            var sensitivity = component.option(\"scrollSensitivity\");\r\n            var maxSpeed = component.option(\"scrollSpeed\");\r\n            return Math.ceil(Math.pow((sensitivity - distance) / sensitivity, 2) * maxSpeed)\r\n        }\r\n    }, {\r\n        key: \"scrollByStep\",\r\n        value: function() {\r\n            var that = this;\r\n            var nextScrollPosition;\r\n            if (that._$scrollableAtPointer && that._scrollSpeed) {\r\n                if (that._$scrollableAtPointer.hasClass(\"dx-scrollable-container\")) {\r\n                    var $scrollable = that._$scrollableAtPointer.closest(\".dx-scrollable\");\r\n                    var scrollableInstance = $scrollable.data(\"dxScrollable\") || $scrollable.data(\"dxScrollView\");\r\n                    if (scrollableInstance) {\r\n                        nextScrollPosition = scrollableInstance.scrollOffset();\r\n                        nextScrollPosition[that._limitProps.start] += that._scrollSpeed;\r\n                        scrollableInstance.scrollTo(nextScrollPosition)\r\n                    }\r\n                } else {\r\n                    nextScrollPosition = that._$scrollableAtPointer[that._scrollValue]() + that._scrollSpeed;\r\n                    that._$scrollableAtPointer[that._scrollValue](nextScrollPosition)\r\n                }\r\n                var dragMoveArgs = that._component._dragMoveArgs;\r\n                if (dragMoveArgs) {\r\n                    that._component._dragMoveHandler(dragMoveArgs)\r\n                }\r\n            }\r\n        }\r\n    }, {\r\n        key: \"reset\",\r\n        value: function() {\r\n            this._$scrollableAtPointer = null;\r\n            this._scrollSpeed = 0;\r\n            this._preventScroll = true\r\n        }\r\n    }, {\r\n        key: \"isOutsideScrollable\",\r\n        value: function($scrollable, event) {\r\n            if (!$scrollable) {\r\n                return false\r\n            }\r\n            var scrollableSize = getBoundingRect($scrollable.get(0));\r\n            var start = scrollableSize[this._limitProps.start];\r\n            var size = scrollableSize[this._sizeAttr];\r\n            var mousePosition = getMousePosition(event);\r\n            var location = \"width\" === this._sizeAttr ? mousePosition.x : mousePosition.y;\r\n            return location < start || location > start + size\r\n        }\r\n    }]);\r\n    return ScrollHelper\r\n}();\r\nvar ScrollAnimator = Animator.inherit({\r\n    ctor: function(strategy) {\r\n        this.callBase();\r\n        this._strategy = strategy\r\n    },\r\n    _step: function() {\r\n        var horizontalScrollHelper = this._strategy._horizontalScrollHelper;\r\n        var verticalScrollHelper = this._strategy._verticalScrollHelper;\r\n        horizontalScrollHelper && horizontalScrollHelper.scrollByStep();\r\n        verticalScrollHelper && verticalScrollHelper.scrollByStep()\r\n    }\r\n});\r\nvar Draggable = DOMComponent.inherit({\r\n    reset: noop,\r\n    dragMove: noop,\r\n    dragEnter: noop,\r\n    dragLeave: noop,\r\n    dragEnd: function(sourceEvent) {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        sourceDraggable._fireRemoveEvent(sourceEvent);\r\n        return (new Deferred).resolve()\r\n    },\r\n    _fireRemoveEvent: noop,\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            onDragStart: null,\r\n            onDragMove: null,\r\n            onDragEnd: null,\r\n            onDrop: null,\r\n            immediate: true,\r\n            dragDirection: \"both\",\r\n            boundary: void 0,\r\n            boundOffset: 0,\r\n            allowMoveByClick: false,\r\n            itemData: null,\r\n            container: void 0,\r\n            dragTemplate: void 0,\r\n            contentTemplate: \"content\",\r\n            handle: \"\",\r\n            filter: \"\",\r\n            clone: false,\r\n            autoScroll: true,\r\n            scrollSpeed: 30,\r\n            scrollSensitivity: 60,\r\n            group: void 0,\r\n            data: void 0\r\n        })\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase.apply(this, arguments);\r\n        extend(this._optionsByReference, {\r\n            component: true,\r\n            group: true,\r\n            itemData: true,\r\n            data: true\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._attachEventHandlers();\r\n        this._scrollAnimator = new ScrollAnimator(this);\r\n        this._horizontalScrollHelper = new ScrollHelper(\"horizontal\", this);\r\n        this._verticalScrollHelper = new ScrollHelper(\"vertical\", this)\r\n    },\r\n    _normalizeCursorOffset: function(offset) {\r\n        if (typeUtils.isObject(offset)) {\r\n            offset = {\r\n                h: offset.x,\r\n                v: offset.y\r\n            }\r\n        }\r\n        offset = commonUtils.splitPair(offset).map(function(value) {\r\n            return parseFloat(value)\r\n        });\r\n        return {\r\n            left: offset[0],\r\n            top: 1 === offset.length ? offset[0] : offset[1]\r\n        }\r\n    },\r\n    _getNormalizedCursorOffset: function(offset, options) {\r\n        if (typeUtils.isFunction(offset)) {\r\n            offset = offset.call(this, options)\r\n        }\r\n        return this._normalizeCursorOffset(offset)\r\n    },\r\n    _calculateElementOffset: function(options) {\r\n        var elementOffset;\r\n        var dragElementOffset;\r\n        var event = options.event;\r\n        var $element = $(options.itemElement);\r\n        var $dragElement = $(options.dragElement);\r\n        var isCloned = this._dragElementIsCloned();\r\n        var cursorOffset = this.option(\"cursorOffset\");\r\n        var normalizedCursorOffset = {\r\n            left: 0,\r\n            top: 0\r\n        };\r\n        var currentLocate = this._initialLocate = translator.locate($dragElement);\r\n        if (isCloned || options.initialOffset || cursorOffset) {\r\n            elementOffset = options.initialOffset || $element.offset();\r\n            if (cursorOffset) {\r\n                normalizedCursorOffset = this._getNormalizedCursorOffset(cursorOffset, options);\r\n                if (isFinite(normalizedCursorOffset.left)) {\r\n                    elementOffset.left = event.pageX\r\n                }\r\n                if (isFinite(normalizedCursorOffset.top)) {\r\n                    elementOffset.top = event.pageY\r\n                }\r\n            }\r\n            dragElementOffset = $dragElement.offset();\r\n            elementOffset.top -= dragElementOffset.top + (normalizedCursorOffset.top || 0) - currentLocate.top;\r\n            elementOffset.left -= dragElementOffset.left + (normalizedCursorOffset.left || 0) - currentLocate.left\r\n        }\r\n        return elementOffset\r\n    },\r\n    _initPosition: function(options) {\r\n        var $dragElement = $(options.dragElement);\r\n        var elementOffset = this._calculateElementOffset(options);\r\n        if (elementOffset) {\r\n            this._move(elementOffset, $dragElement)\r\n        }\r\n        this._startPosition = translator.locate($dragElement)\r\n    },\r\n    _startAnimator: function() {\r\n        if (!this._scrollAnimator.inProgress()) {\r\n            this._scrollAnimator.start()\r\n        }\r\n    },\r\n    _stopAnimator: function() {\r\n        this._scrollAnimator.stop()\r\n    },\r\n    _addWidgetPrefix: function(className) {\r\n        var componentName = this.NAME;\r\n        return dasherize(componentName) + (className ? \"-\" + className : \"\")\r\n    },\r\n    _getItemsSelector: function() {\r\n        return this.option(\"filter\") || \"\"\r\n    },\r\n    _$content: function() {\r\n        var $element = this.$element();\r\n        var $wrapper = $element.children(\".dx-template-wrapper\");\r\n        return $wrapper.length ? $wrapper : $element\r\n    },\r\n    _attachEventHandlers: function() {\r\n        var _this = this;\r\n        if (this.option(\"disabled\")) {\r\n            return\r\n        }\r\n        var $element = this._$content();\r\n        var itemsSelector = this._getItemsSelector();\r\n        var allowMoveByClick = this.option(\"allowMoveByClick\");\r\n        var data = {\r\n            direction: this.option(\"dragDirection\"),\r\n            immediate: this.option(\"immediate\"),\r\n            checkDropTarget: function($target, event) {\r\n                var targetGroup = _this.option(\"group\");\r\n                var sourceGroup = _this._getSourceDraggable().option(\"group\");\r\n                var $scrollable = _this._getScrollable($target);\r\n                if (_this._verticalScrollHelper.isOutsideScrollable($scrollable, event) || _this._horizontalScrollHelper.isOutsideScrollable($scrollable, event)) {\r\n                    return false\r\n                }\r\n                return sourceGroup && sourceGroup === targetGroup\r\n            }\r\n        };\r\n        if (allowMoveByClick) {\r\n            $element = this._getArea();\r\n            eventsEngine.on($element, POINTERDOWN_EVENT_NAME, data, this._pointerDownHandler.bind(this))\r\n        }\r\n        if (\">\" === itemsSelector[0]) {\r\n            itemsSelector = itemsSelector.slice(1)\r\n        }\r\n        eventsEngine.on($element, DRAGSTART_EVENT_NAME, itemsSelector, data, this._dragStartHandler.bind(this));\r\n        eventsEngine.on($element, DRAG_EVENT_NAME, data, this._dragMoveHandler.bind(this));\r\n        eventsEngine.on($element, DRAGEND_EVENT_NAME, data, this._dragEndHandler.bind(this));\r\n        eventsEngine.on($element, DRAG_ENTER_EVENT_NAME, data, this._dragEnterHandler.bind(this));\r\n        eventsEngine.on($element, DRAGEND_LEAVE_EVENT_NAME, data, this._dragLeaveHandler.bind(this))\r\n    },\r\n    _dragElementIsCloned: function() {\r\n        return this._$dragElement && this._$dragElement.hasClass(this._addWidgetPrefix(CLONE_CLASS))\r\n    },\r\n    _getDragTemplateArgs: function($element, $container) {\r\n        return {\r\n            container: getPublicElement($container),\r\n            model: {\r\n                itemData: this.option(\"itemData\"),\r\n                itemElement: getPublicElement($element)\r\n            }\r\n        }\r\n    },\r\n    _createDragElement: function($element) {\r\n        var result = $element;\r\n        var clone = this.option(\"clone\");\r\n        var $container = this._getContainer();\r\n        var template = this.option(\"dragTemplate\");\r\n        if (template) {\r\n            template = this._getTemplate(template);\r\n            result = $(\"<div>\").appendTo($container);\r\n            template.render(this._getDragTemplateArgs($element, result))\r\n        } else {\r\n            if (clone) {\r\n                result = $(\"<div>\").appendTo($container);\r\n                $element.clone().css({\r\n                    width: $element.css(\"width\"),\r\n                    height: $element.css(\"height\")\r\n                }).appendTo(result)\r\n            }\r\n        }\r\n        return result.toggleClass(this._addWidgetPrefix(CLONE_CLASS), result.get(0) !== $element.get(0)).toggleClass(\"dx-rtl\", this.option(\"rtlEnabled\"))\r\n    },\r\n    _resetDragElement: function() {\r\n        if (this._dragElementIsCloned()) {\r\n            this._$dragElement.remove()\r\n        } else {\r\n            this._toggleDraggingClass(false)\r\n        }\r\n        this._$dragElement = null\r\n    },\r\n    _resetSourceElement: function() {\r\n        this._toggleDragSourceClass(false);\r\n        this._$sourceElement = null\r\n    },\r\n    _detachEventHandlers: function() {\r\n        eventsEngine.off(this._$content(), \".\" + DRAGGABLE);\r\n        eventsEngine.off(this._getArea(), \".\" + DRAGGABLE)\r\n    },\r\n    _move: function(position, $element) {\r\n        translator.move($element || this._$dragElement, position)\r\n    },\r\n    _getDraggableElement: function(e) {\r\n        var $sourceElement = this._getSourceElement();\r\n        if ($sourceElement) {\r\n            return $sourceElement\r\n        }\r\n        var allowMoveByClick = this.option(\"allowMoveByClick\");\r\n        if (allowMoveByClick) {\r\n            return this.$element()\r\n        }\r\n        var $target = $(e && e.target);\r\n        var itemsSelector = this._getItemsSelector();\r\n        if (\">\" === itemsSelector[0]) {\r\n            var $items = this._$content().find(itemsSelector);\r\n            if (!$items.is($target)) {\r\n                $target = $target.closest($items)\r\n            }\r\n        }\r\n        return $target\r\n    },\r\n    _getSourceElement: function() {\r\n        var draggable = this._getSourceDraggable();\r\n        return draggable._$sourceElement\r\n    },\r\n    _pointerDownHandler: function(e) {\r\n        if (eventUtils.needSkipEvent(e)) {\r\n            return\r\n        }\r\n        var position = {};\r\n        var $element = this.$element();\r\n        var dragDirection = this.option(\"dragDirection\");\r\n        if (\"horizontal\" === dragDirection || \"both\" === dragDirection) {\r\n            position.left = e.pageX - $element.offset().left + translator.locate($element).left - $element.width() / 2\r\n        }\r\n        if (\"vertical\" === dragDirection || \"both\" === dragDirection) {\r\n            position.top = e.pageY - $element.offset().top + translator.locate($element).top - $element.height() / 2\r\n        }\r\n        this._move(position, $element);\r\n        this._getAction(\"onDragMove\")(this._getEventArgs(e))\r\n    },\r\n    _isValidElement: function(event, $element) {\r\n        var handle = this.option(\"handle\");\r\n        var $target = $(event.originalEvent && event.originalEvent.target);\r\n        if (handle && !$target.closest(handle).length) {\r\n            return false\r\n        }\r\n        if (!$element.length) {\r\n            return false\r\n        }\r\n        return !$element.is(\".dx-state-disabled, .dx-state-disabled *\")\r\n    },\r\n    _dragStartHandler: function(e) {\r\n        var $element = this._getDraggableElement(e);\r\n        if (this._$sourceElement) {\r\n            return\r\n        }\r\n        if (!this._isValidElement(e, $element)) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n        var dragStartArgs = this._getDragStartArgs(e, $element);\r\n        this._getAction(\"onDragStart\")(dragStartArgs);\r\n        if (dragStartArgs.cancel) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n        this.option(\"itemData\", dragStartArgs.itemData);\r\n        this._setSourceDraggable();\r\n        this._$sourceElement = $element;\r\n        var initialOffset = $element.offset();\r\n        var $dragElement = this._$dragElement = this._createDragElement($element);\r\n        this._toggleDraggingClass(true);\r\n        this._toggleDragSourceClass(true);\r\n        var isFixedPosition = \"fixed\" === $dragElement.css(\"position\");\r\n        this._initPosition(extend({}, dragStartArgs, {\r\n            dragElement: $dragElement.get(0),\r\n            initialOffset: isFixedPosition && initialOffset\r\n        }));\r\n        var $area = this._getArea();\r\n        var areaOffset = this._getAreaOffset($area);\r\n        var boundOffset = this._getBoundOffset();\r\n        var areaWidth = $area.outerWidth();\r\n        var areaHeight = $area.outerHeight();\r\n        var elementWidth = $dragElement.width();\r\n        var elementHeight = $dragElement.height();\r\n        var startOffset = {\r\n            left: $dragElement.offset().left - areaOffset.left,\r\n            top: $dragElement.offset().top - areaOffset.top\r\n        };\r\n        if ($area.length) {\r\n            e.maxLeftOffset = startOffset.left - boundOffset.left;\r\n            e.maxRightOffset = areaWidth - startOffset.left - elementWidth - boundOffset.right;\r\n            e.maxTopOffset = startOffset.top - boundOffset.top;\r\n            e.maxBottomOffset = areaHeight - startOffset.top - elementHeight - boundOffset.bottom\r\n        }\r\n        if (this.option(\"autoScroll\")) {\r\n            this._startAnimator()\r\n        }\r\n    },\r\n    _getAreaOffset: function($area) {\r\n        var offset = $area && positionUtils.offset($area);\r\n        return offset ? offset : {\r\n            left: 0,\r\n            top: 0\r\n        }\r\n    },\r\n    _toggleDraggingClass: function(value) {\r\n        this._$dragElement && this._$dragElement.toggleClass(this._addWidgetPrefix(\"dragging\"), value)\r\n    },\r\n    _toggleDragSourceClass: function(value, $element) {\r\n        var $sourceElement = $element || this._$sourceElement;\r\n        $sourceElement && $sourceElement.toggleClass(this._addWidgetPrefix(\"source\"), value)\r\n    },\r\n    _getBoundOffset: function() {\r\n        var boundOffset = this.option(\"boundOffset\");\r\n        if (typeUtils.isFunction(boundOffset)) {\r\n            boundOffset = boundOffset.call(this)\r\n        }\r\n        return stringUtils.quadToObject(boundOffset)\r\n    },\r\n    _getArea: function() {\r\n        var area = this.option(\"boundary\");\r\n        if (typeUtils.isFunction(area)) {\r\n            area = area.call(this)\r\n        }\r\n        return $(area)\r\n    },\r\n    _getContainer: function() {\r\n        var container = this.option(\"container\");\r\n        if (void 0 === container) {\r\n            container = viewPortUtils.value()\r\n        }\r\n        return $(container)\r\n    },\r\n    _dragMoveHandler: function(e) {\r\n        this._dragMoveArgs = e;\r\n        if (!this._$dragElement) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n        var offset = e.offset;\r\n        var startPosition = this._startPosition;\r\n        this._move({\r\n            left: startPosition.left + offset.x,\r\n            top: startPosition.top + offset.y\r\n        });\r\n        this._updateScrollable(e);\r\n        var eventArgs = this._getEventArgs(e);\r\n        this._getAction(\"onDragMove\")(eventArgs);\r\n        if (true === eventArgs.cancel) {\r\n            return\r\n        }\r\n        var targetDraggable = this._getTargetDraggable();\r\n        targetDraggable.dragMove(e)\r\n    },\r\n    _updateScrollable: function(e) {\r\n        var that = this;\r\n        if (that.option(\"autoScroll\")) {\r\n            var mousePosition = getMousePosition(e);\r\n            var allObjects = that.getElementsFromPoint(mousePosition);\r\n            that._verticalScrollHelper.updateScrollable(allObjects, mousePosition);\r\n            that._horizontalScrollHelper.updateScrollable(allObjects, mousePosition)\r\n        }\r\n    },\r\n    getElementsFromPoint: function(position, dragElement) {\r\n        var ownerDocument = (dragElement || this._$dragElement.get(0)).ownerDocument;\r\n        if (browser.msie) {\r\n            var msElements = ownerDocument.msElementsFromPoint(position.x, position.y);\r\n            if (msElements) {\r\n                return Array.prototype.slice.call(msElements)\r\n            }\r\n            return []\r\n        }\r\n        return ownerDocument.elementsFromPoint(position.x, position.y)\r\n    },\r\n    _getScrollable: function($element) {\r\n        var _this2 = this;\r\n        var $scrollable;\r\n        $element.parents().toArray().some(function(parent) {\r\n            var $parent = $(parent);\r\n            if (_this2._horizontalScrollHelper.isScrollable($parent) || _this2._verticalScrollHelper.isScrollable($parent)) {\r\n                $scrollable = $parent;\r\n                return true\r\n            }\r\n        });\r\n        return $scrollable\r\n    },\r\n    _defaultActionArgs: function() {\r\n        var args = this.callBase.apply(this, arguments);\r\n        var component = this.option(\"component\");\r\n        if (component) {\r\n            args.component = component;\r\n            args.element = component.element()\r\n        }\r\n        return args\r\n    },\r\n    _getEventArgs: function(e) {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var targetDraggable = this._getTargetDraggable();\r\n        return {\r\n            event: e,\r\n            itemData: sourceDraggable.option(\"itemData\"),\r\n            itemElement: getPublicElement(sourceDraggable._$sourceElement),\r\n            fromComponent: sourceDraggable.option(\"component\") || sourceDraggable,\r\n            toComponent: targetDraggable.option(\"component\") || targetDraggable,\r\n            fromData: sourceDraggable.option(\"data\"),\r\n            toData: targetDraggable.option(\"data\")\r\n        }\r\n    },\r\n    _getDragStartArgs: function(e, $itemElement) {\r\n        var args = this._getEventArgs(e);\r\n        return {\r\n            event: args.event,\r\n            itemData: args.itemData,\r\n            itemElement: $itemElement,\r\n            fromData: args.fromData\r\n        }\r\n    },\r\n    _revertItemToInitialPosition: function() {\r\n        !this._dragElementIsCloned() && this._move(this._initialLocate, this._$sourceElement)\r\n    },\r\n    _dragEndHandler: function(e) {\r\n        var _this3 = this;\r\n        var d = new Deferred;\r\n        var dragEndEventArgs = this._getEventArgs(e);\r\n        var dropEventArgs = this._getEventArgs(e);\r\n        var targetDraggable = this._getTargetDraggable();\r\n        var needRevertPosition = true;\r\n        try {\r\n            this._getAction(\"onDragEnd\")(dragEndEventArgs)\r\n        } finally {\r\n            when(fromPromise(dragEndEventArgs.cancel)).done(function(cancel) {\r\n                if (!cancel) {\r\n                    if (targetDraggable !== _this3) {\r\n                        targetDraggable._getAction(\"onDrop\")(dropEventArgs)\r\n                    }\r\n                    if (!dropEventArgs.cancel) {\r\n                        needRevertPosition = false;\r\n                        when(fromPromise(targetDraggable.dragEnd(dragEndEventArgs))).always(d.resolve);\r\n                        return\r\n                    }\r\n                }\r\n                d.resolve()\r\n            }).fail(d.resolve);\r\n            d.done(function() {\r\n                if (needRevertPosition) {\r\n                    _this3._revertItemToInitialPosition()\r\n                }\r\n                _this3.reset();\r\n                targetDraggable.reset();\r\n                _this3._stopAnimator();\r\n                _this3._horizontalScrollHelper.reset();\r\n                _this3._verticalScrollHelper.reset();\r\n                _this3._resetDragElement();\r\n                _this3._resetSourceElement();\r\n                _this3._resetTargetDraggable();\r\n                _this3._resetSourceDraggable()\r\n            })\r\n        }\r\n    },\r\n    _isTargetOverAnotherDraggable: function(e) {\r\n        var _this4 = this;\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        if (this === sourceDraggable) {\r\n            return false\r\n        }\r\n        var $dragElement = sourceDraggable._$dragElement;\r\n        var $sourceDraggableElement = sourceDraggable.$element();\r\n        var $targetDraggableElement = this.$element();\r\n        var mousePosition = getMousePosition(e);\r\n        var elements = this.getElementsFromPoint(mousePosition, e.target);\r\n        var firstWidgetElement = elements.filter(function(element) {\r\n            var $element = $(element);\r\n            if ($element.hasClass(_this4._addWidgetPrefix())) {\r\n                return !$element.closest($dragElement).length\r\n            }\r\n        })[0];\r\n        var $sourceElement = this._getSourceElement();\r\n        var isTargetOverItself = firstWidgetElement === $sourceDraggableElement.get(0);\r\n        var isTargetOverNestedDraggable = $(firstWidgetElement).closest($sourceElement).length;\r\n        return !firstWidgetElement || firstWidgetElement === $targetDraggableElement.get(0) && !isTargetOverItself && !isTargetOverNestedDraggable\r\n    },\r\n    _dragEnterHandler: function(e) {\r\n        if (this._isTargetOverAnotherDraggable(e)) {\r\n            this._setTargetDraggable()\r\n        }\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        sourceDraggable.dragEnter(e)\r\n    },\r\n    _dragLeaveHandler: function(e) {\r\n        this._resetTargetDraggable();\r\n        if (this !== this._getSourceDraggable()) {\r\n            this.reset()\r\n        }\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        sourceDraggable.dragLeave(e)\r\n    },\r\n    _getAction: function(name) {\r\n        return this[\"_\" + name + \"Action\"] || this._createActionByOption(name)\r\n    },\r\n    _getAnonymousTemplateName: function() {\r\n        return ANONYMOUS_TEMPLATE_NAME\r\n    },\r\n    _initTemplates: function() {\r\n        if (!this.option(\"contentTemplate\")) {\r\n            return\r\n        }\r\n        this._templateManager.addDefaultTemplates({\r\n            content: new EmptyTemplate\r\n        });\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this.$element().addClass(this._addWidgetPrefix());\r\n        var transclude = this._templateManager.anonymousTemplateName === this.option(\"contentTemplate\");\r\n        var template = this._getTemplateByOption(\"contentTemplate\");\r\n        if (template) {\r\n            $(template.render({\r\n                container: this.element(),\r\n                transclude: transclude\r\n            }))\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        var name = args.name;\r\n        switch (name) {\r\n            case \"onDragStart\":\r\n            case \"onDragMove\":\r\n            case \"onDragEnd\":\r\n            case \"onDrop\":\r\n                this[\"_\" + name + \"Action\"] = this._createActionByOption(name);\r\n                break;\r\n            case \"dragTemplate\":\r\n            case \"contentTemplate\":\r\n            case \"container\":\r\n            case \"clone\":\r\n                break;\r\n            case \"allowMoveByClick\":\r\n            case \"dragDirection\":\r\n            case \"disabled\":\r\n            case \"boundary\":\r\n            case \"filter\":\r\n            case \"immediate\":\r\n                this._resetDragElement();\r\n                this._detachEventHandlers();\r\n                this._attachEventHandlers();\r\n                break;\r\n            case \"autoScroll\":\r\n                this._verticalScrollHelper.reset();\r\n                this._horizontalScrollHelper.reset();\r\n                break;\r\n            case \"scrollSensitivity\":\r\n            case \"scrollSpeed\":\r\n            case \"boundOffset\":\r\n            case \"handle\":\r\n            case \"group\":\r\n            case \"data\":\r\n            case \"itemData\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _getTargetDraggable: function() {\r\n        return targetDraggable || this\r\n    },\r\n    _getSourceDraggable: function() {\r\n        return sourceDraggable || this\r\n    },\r\n    _setTargetDraggable: function() {\r\n        var currentGroup = this.option(\"group\");\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        if (currentGroup && currentGroup === sourceDraggable.option(\"group\")) {\r\n            targetDraggable = this\r\n        }\r\n    },\r\n    _setSourceDraggable: function() {\r\n        sourceDraggable = this\r\n    },\r\n    _resetSourceDraggable: function() {\r\n        sourceDraggable = null\r\n    },\r\n    _resetTargetDraggable: function() {\r\n        targetDraggable = null\r\n    },\r\n    _dispose: function() {\r\n        this.callBase();\r\n        this._detachEventHandlers();\r\n        this._resetDragElement();\r\n        this._resetTargetDraggable();\r\n        this._resetSourceDraggable();\r\n        this._$sourceElement = null;\r\n        this._stopAnimator()\r\n    }\r\n});\r\nregisterComponent(DRAGGABLE, Draggable);\r\nmodule.exports = Draggable;\r\nmodule.exports.default = module.exports;\r\n"]},"metadata":{},"sourceType":"script"}