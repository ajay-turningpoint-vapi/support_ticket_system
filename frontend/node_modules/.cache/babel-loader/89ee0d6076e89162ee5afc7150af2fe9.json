{"ast":null,"code":"/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.column_fixing.js)\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _renderer = require(\"../../core/renderer\");\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _events_engine = require(\"../../events/core/events_engine\");\n\nvar _events_engine2 = _interopRequireDefault(_events_engine);\n\nvar _wheel = require(\"../../events/core/wheel\");\n\nvar _wheel2 = _interopRequireDefault(_wheel);\n\nvar _message = require(\"../../localization/message\");\n\nvar _message2 = _interopRequireDefault(_message);\n\nvar _uiGrid_core = require(\"../grid_core/ui.grid_core.utils\");\n\nvar _uiGrid_core2 = _interopRequireDefault(_uiGrid_core);\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _browser = require(\"../../core/utils/browser\");\n\nvar _browser2 = _interopRequireDefault(_browser);\n\nvar _position = require(\"../../core/utils/position\");\n\nvar _translator = require(\"../../animation/translator\");\n\nvar _translator2 = _interopRequireDefault(_translator);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar CONTENT_CLASS = \"content\";\nvar CONTENT_FIXED_CLASS = \"content-fixed\";\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\nvar FIRST_CELL_CLASS = \"dx-first-cell\";\nvar LAST_CELL_CLASS = \"dx-last-cell\";\nvar HOVER_STATE_CLASS = \"dx-state-hover\";\nvar FIXED_COL_CLASS = \"dx-col-fixed\";\nvar FIXED_COLUMNS_CLASS = \"dx-fixed-columns\";\nvar POINTER_EVENTS_TARGET_CLASS = \"dx-pointer-events-target\";\nvar POINTER_EVENTS_NONE_CLASS = \"dx-pointer-events-none\";\nvar COMMAND_TRANSPARENT = \"transparent\";\nvar GROUP_ROW_CLASS = \"dx-group-row\";\n\nvar getTransparentColumnIndex = function (fixedColumns) {\n  var transparentColumnIndex = -1;\n  (0, _iterator.each)(fixedColumns, function (index, column) {\n    if (column.command === COMMAND_TRANSPARENT) {\n      transparentColumnIndex = index;\n      return false;\n    }\n  });\n  return transparentColumnIndex;\n};\n\nvar normalizeColumnWidths = function (fixedColumns, widths, fixedWidths) {\n  var fixedColumnIndex = 0;\n\n  if (fixedColumns && widths && fixedWidths) {\n    for (var i = 0; i < fixedColumns.length; i++) {\n      if (fixedColumns[i].command === COMMAND_TRANSPARENT) {\n        fixedColumnIndex += fixedColumns[i].colspan;\n      } else {\n        if (widths[fixedColumnIndex] < fixedWidths[i]) {\n          widths[fixedColumnIndex] = fixedWidths[i];\n        }\n\n        fixedColumnIndex++;\n      }\n    }\n  }\n\n  return widths;\n};\n\nvar baseFixedColumns = {\n  init: function () {\n    this.callBase();\n    this._isFixedTableRendering = false;\n    this._isFixedColumns = false;\n  },\n  _createCol: function (column) {\n    return this.callBase(column).toggleClass(FIXED_COL_CLASS, !!(this._isFixedTableRendering && (column.fixed || column.command && column.command !== COMMAND_TRANSPARENT)));\n  },\n  _correctColumnIndicesForFixedColumns: function (fixedColumns, change) {\n    var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\n    var transparentColspan = fixedColumns[transparentColumnIndex].colspan;\n    var columnIndices = change && change.columnIndices;\n\n    if (columnIndices) {\n      change.columnIndices = columnIndices.map(function (columnIndices) {\n        if (columnIndices) {\n          return columnIndices.map(function (columnIndex) {\n            if (columnIndex < transparentColumnIndex) {\n              return columnIndex;\n            } else {\n              if (columnIndex >= transparentColumnIndex + transparentColspan) {\n                return columnIndex - transparentColspan + 1;\n              }\n            }\n\n            return -1;\n          }).filter(function (columnIndex) {\n            return columnIndex >= 0;\n          });\n        }\n      });\n    }\n  },\n  _renderTable: function (options) {\n    var that = this;\n    var $fixedTable;\n    var fixedColumns = that.getFixedColumns();\n    that._isFixedColumns = !!fixedColumns.length;\n    var $table = that.callBase(options);\n\n    if (that._isFixedColumns) {\n      that._isFixedTableRendering = true;\n      var change = options && options.change;\n      var columnIndices = change && change.columnIndices;\n\n      that._correctColumnIndicesForFixedColumns(fixedColumns, change);\n\n      $fixedTable = that._createTable(fixedColumns);\n\n      that._renderRows($fixedTable, (0, _extend.extend)({}, options, {\n        columns: fixedColumns\n      }));\n\n      that._updateContent($fixedTable, change);\n\n      if (columnIndices) {\n        change.columnIndices = columnIndices;\n      }\n\n      that._isFixedTableRendering = false;\n    } else {\n      that._fixedTableElement && that._fixedTableElement.parent().remove();\n      that._fixedTableElement = null;\n    }\n\n    return $table;\n  },\n  _renderRow: function ($table, options) {\n    var fixedCorrection;\n    var cells = options.row.cells;\n    this.callBase.apply(this, arguments);\n\n    if (this._isFixedTableRendering && cells && cells.length) {\n      fixedCorrection = 0;\n      var fixedCells = options.row.cells || [];\n      cells = cells.slice();\n      options.row.cells = cells;\n\n      for (var i = 0; i < fixedCells.length; i++) {\n        if (fixedCells[i].column && fixedCells[i].column.command === COMMAND_TRANSPARENT) {\n          fixedCorrection = (fixedCells[i].column.colspan || 1) - 1;\n          continue;\n        }\n\n        cells[i + fixedCorrection] = fixedCells[i];\n      }\n    }\n  },\n  _createCell: function (options) {\n    var that = this;\n    var column = options.column;\n    var columnCommand = column && column.command;\n    var rowType = options.rowType;\n    var $cell = that.callBase.apply(that, arguments);\n    var fixedColumns;\n    var prevFixedColumn;\n    var transparentColumnIndex;\n\n    if (that._isFixedTableRendering || \"filter\" === rowType) {\n      fixedColumns = that.getFixedColumns();\n      transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\n      prevFixedColumn = fixedColumns[transparentColumnIndex - 1];\n    }\n\n    if (that._isFixedTableRendering) {\n      if (columnCommand === COMMAND_TRANSPARENT) {\n        $cell.addClass(POINTER_EVENTS_NONE_CLASS).toggleClass(FIRST_CELL_CLASS, 0 === transparentColumnIndex || prevFixedColumn && \"expand\" === prevFixedColumn.command).toggleClass(LAST_CELL_CLASS, fixedColumns.length && transparentColumnIndex === fixedColumns.length - 1);\n\n        if (\"freeSpace\" !== rowType) {\n          _uiGrid_core2.default.setEmptyText($cell);\n        }\n      }\n    } else {\n      if (\"filter\" === rowType) {\n        $cell.toggleClass(FIRST_CELL_CLASS, options.columnIndex === transparentColumnIndex);\n      }\n    }\n\n    var isRowAltStyle = that.option(\"rowAlternationEnabled\") && options.isAltRow;\n\n    if (_browser2.default.mozilla && options.column.fixed && \"group\" !== options.rowType && !isRowAltStyle) {\n      $cell.addClass(FIXED_COL_CLASS);\n    }\n\n    return $cell;\n  },\n  _wrapTableInScrollContainer: function () {\n    var $scrollContainer = this.callBase.apply(this, arguments);\n\n    if (this._isFixedTableRendering) {\n      $scrollContainer.addClass(this.addWidgetPrefix(CONTENT_FIXED_CLASS) + \" \" + POINTER_EVENTS_TARGET_CLASS);\n    }\n\n    return $scrollContainer;\n  },\n  _renderCellContent: function ($cell, options) {\n    var that = this;\n    var isEmptyCell;\n    var column = options.column;\n    var isFixedTableRendering = that._isFixedTableRendering;\n    var isGroupCell = \"group\" === options.rowType && (0, _type.isDefined)(column.groupIndex);\n\n    if (isFixedTableRendering && isGroupCell && !column.command && !column.groupCellTemplate) {\n      $cell.css(\"pointerEvents\", \"none\");\n    }\n\n    if (!isFixedTableRendering && that._isFixedColumns) {\n      isEmptyCell = column.fixed || column.command && false !== column.fixed;\n\n      if (isGroupCell) {\n        isEmptyCell = false;\n\n        if (options.row.summaryCells && options.row.summaryCells.length) {\n          var columns = that._columnsController.getVisibleColumns();\n\n          var alignByFixedColumnCellCount = that._getAlignByColumnCellCount ? that._getAlignByColumnCellCount(column.colspan, {\n            columns: columns,\n            row: options.row,\n            isFixed: true\n          }) : 0;\n\n          if (alignByFixedColumnCellCount > 0) {\n            var transparentColumnIndex = getTransparentColumnIndex(that._columnsController.getFixedColumns());\n            isEmptyCell = columns.length - alignByFixedColumnCellCount < transparentColumnIndex;\n          }\n        }\n      }\n\n      if (isEmptyCell) {\n        if (that.option(\"legacyRendering\") || column.command && \"buttons\" !== column.type || \"group\" === options.rowType) {\n          $cell.html(\"&nbsp;\").addClass(column.cssClass);\n          return;\n        } else {\n          $cell.addClass(\"dx-hidden-cell\");\n        }\n      }\n    }\n\n    if (column.command !== COMMAND_TRANSPARENT) {\n      that.callBase($cell, options);\n    }\n  },\n  _getCellElementsCore: function (rowIndex) {\n    var that = this;\n    var cellElements = that.callBase(rowIndex);\n    var isGroupRow = cellElements.parent().hasClass(GROUP_ROW_CLASS);\n    var index = \"columnHeadersView\" === that.name ? rowIndex : void 0;\n\n    if (that._fixedTableElement && cellElements) {\n      var fixedColumns = that.getFixedColumns(index);\n\n      var fixedCellElements = that._getRowElements(that._fixedTableElement).eq(rowIndex).children(\"td\");\n\n      (0, _iterator.each)(fixedCellElements, function (columnIndex, cell) {\n        if (isGroupRow) {\n          if (cellElements[columnIndex] && \"hidden\" !== cell.style.visibility) {\n            cellElements[columnIndex] = cell;\n          }\n        } else {\n          var fixedColumn = fixedColumns[columnIndex];\n\n          if (fixedColumn) {\n            if (fixedColumn.command === COMMAND_TRANSPARENT) {\n              if (fixedCellElements.eq(columnIndex).hasClass(MASTER_DETAIL_CELL_CLASS)) {\n                cellElements[columnIndex] = cell || cellElements[columnIndex];\n              }\n            } else {\n              var fixedColumnIndex = that._columnsController.getVisibleIndex(fixedColumn.index, index);\n\n              cellElements[fixedColumnIndex] = cell || cellElements[fixedColumnIndex];\n            }\n          }\n        }\n      });\n    }\n\n    return cellElements;\n  },\n  getColumnWidths: function () {\n    var that = this;\n    var fixedWidths;\n    var result = that.callBase();\n    var fixedColumns = that.getFixedColumns();\n\n    if (that._fixedTableElement && result.length) {\n      fixedWidths = that.callBase(that._fixedTableElement);\n    }\n\n    return normalizeColumnWidths(fixedColumns, result, fixedWidths);\n  },\n  _getTableElement: function () {\n    var tableElement = this._isFixedTableRendering ? this._fixedTableElement : this.callBase();\n    return tableElement;\n  },\n  _setTableElement: function (tableElement) {\n    if (this._isFixedTableRendering) {\n      this._fixedTableElement = tableElement.addClass(POINTER_EVENTS_NONE_CLASS);\n    } else {\n      this.callBase(tableElement);\n    }\n  },\n  getColumns: function (rowIndex, $tableElement) {\n    $tableElement = $tableElement || this._getTableElement();\n\n    if (this._isFixedTableRendering || $tableElement && $tableElement.closest(\"table\").parent(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS)).length) {\n      return this.getFixedColumns(rowIndex);\n    }\n\n    return this.callBase(rowIndex, $tableElement);\n  },\n  getRowIndex: function ($row) {\n    var $fixedTable = this._fixedTableElement;\n\n    if ($fixedTable && $fixedTable.find($row).length) {\n      return this._getRowElements($fixedTable).index($row);\n    }\n\n    return this.callBase($row);\n  },\n  getTableElements: function () {\n    var result = this.callBase.apply(this, arguments);\n\n    if (this._fixedTableElement) {\n      result = (0, _renderer2.default)([result.get(0), this._fixedTableElement.get(0)]);\n    }\n\n    return result;\n  },\n  getFixedColumns: function (rowIndex) {\n    return this._columnsController.getFixedColumns(rowIndex);\n  },\n  getFixedColumnsOffset: function () {\n    var offset = {\n      left: 0,\n      right: 0\n    };\n    var $transparentColumn;\n\n    if (this._fixedTableElement) {\n      $transparentColumn = this.getTransparentColumnElement();\n      var positionTransparentColumn = $transparentColumn.position();\n      offset = {\n        left: positionTransparentColumn.left,\n        right: this.element().outerWidth(true) - ($transparentColumn.outerWidth(true) + positionTransparentColumn.left)\n      };\n    }\n\n    return offset;\n  },\n  getTransparentColumnElement: function () {\n    return this._fixedTableElement && this._fixedTableElement.find(\".\" + POINTER_EVENTS_NONE_CLASS).first();\n  },\n  getFixedTableElement: function () {\n    return this._fixedTableElement;\n  },\n  isFixedColumns: function () {\n    return this._isFixedColumns;\n  },\n  _resizeCore: function () {\n    this.callBase();\n    this.synchronizeRows();\n  },\n  setColumnWidths: function (options) {\n    var columns;\n\n    var visibleColumns = this._columnsController.getVisibleColumns();\n\n    var widths = options.widths;\n    var isWidthsSynchronized = widths && widths.length && (0, _type.isDefined)(visibleColumns[0].visibleWidth);\n    var optionNames = options.optionNames;\n    var isColumnWidthChanged = optionNames && optionNames.width;\n    var useVisibleColumns = false;\n    this.callBase.apply(this, arguments);\n\n    if (this._fixedTableElement) {\n      if (this.option(\"legacyRendering\")) {\n        useVisibleColumns = widths && widths.length && !this.isScrollbarVisible(true);\n      } else {\n        var hasAutoWidth = widths && widths.some(function (width) {\n          return \"auto\" === width;\n        });\n        useVisibleColumns = hasAutoWidth && (!isWidthsSynchronized || !this.isScrollbarVisible(true));\n      }\n\n      if (useVisibleColumns) {\n        columns = visibleColumns;\n      }\n\n      this.callBase((0, _extend.extend)({}, options, {\n        $tableElement: this._fixedTableElement,\n        columns: columns,\n        fixed: true\n      }));\n    }\n\n    if (isWidthsSynchronized || isColumnWidthChanged && this.option(\"wordWrapEnabled\")) {\n      this.synchronizeRows();\n    }\n  },\n  _createColGroup: function (columns) {\n    if (!this.option(\"legacyRendering\") && this._isFixedTableRendering && !this.option(\"columnAutoWidth\")) {\n      var visibleColumns = this._columnsController.getVisibleColumns();\n\n      var useVisibleColumns = visibleColumns.filter(function (column) {\n        return !column.width;\n      }).length;\n\n      if (useVisibleColumns) {\n        columns = visibleColumns;\n      }\n    }\n\n    return this.callBase(columns);\n  },\n  _getClientHeight: function (element) {\n    var boundingClientRectElement = element.getBoundingClientRect && (0, _position.getBoundingRect)(element);\n    return boundingClientRectElement && boundingClientRectElement.height ? boundingClientRectElement.height : element.clientHeight;\n  },\n  synchronizeRows: function () {\n    var that = this;\n    var rowHeights = [];\n    var fixedRowHeights = [];\n    var rowIndex;\n    var $rowElements;\n    var $fixedRowElements;\n    var $contentElement;\n\n    if (that._isFixedColumns && that._tableElement && that._fixedTableElement) {\n      var heightTable = that._getClientHeight(that._tableElement.get(0));\n\n      var heightFixedTable = that._getClientHeight(that._fixedTableElement.get(0));\n\n      $rowElements = that._getRowElements(that._tableElement);\n      $fixedRowElements = that._getRowElements(that._fixedTableElement);\n      $contentElement = that._findContentElement();\n\n      if (heightTable !== heightFixedTable) {\n        $contentElement && $contentElement.css(\"height\", heightTable);\n        $rowElements.css(\"height\", \"\");\n        $fixedRowElements.css(\"height\", \"\");\n\n        for (rowIndex = 0; rowIndex < $rowElements.length; rowIndex++) {\n          rowHeights.push(that._getClientHeight($rowElements.get(rowIndex)));\n          fixedRowHeights.push(that._getClientHeight($fixedRowElements.get(rowIndex)));\n        }\n\n        for (rowIndex = 0; rowIndex < $rowElements.length; rowIndex++) {\n          var rowHeight = rowHeights[rowIndex];\n          var fixedRowHeight = fixedRowHeights[rowIndex];\n\n          if (rowHeight > fixedRowHeight) {\n            $fixedRowElements.eq(rowIndex).css(\"height\", rowHeight);\n          } else {\n            if (rowHeight < fixedRowHeight) {\n              $rowElements.eq(rowIndex).css(\"height\", fixedRowHeight);\n            }\n          }\n        }\n\n        $contentElement && $contentElement.css(\"height\", \"\");\n      }\n    }\n  },\n  setScrollerSpacing: function (width) {\n    var rtlEnabled = this.option(\"rtlEnabled\");\n    this.callBase(width);\n    this.element().children(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS)).css({\n      paddingLeft: rtlEnabled ? width : \"\",\n      paddingRight: !rtlEnabled ? width : \"\"\n    });\n  }\n};\nvar ColumnHeadersViewFixedColumnsExtender = (0, _extend.extend)({}, baseFixedColumns, {\n  _getRowVisibleColumns: function (rowIndex) {\n    if (this._isFixedTableRendering) {\n      return this.getFixedColumns(rowIndex);\n    }\n\n    return this.callBase(rowIndex);\n  },\n  getContextMenuItems: function (options) {\n    var that = this;\n    var column = options.column;\n    var columnFixingOptions = that.option(\"columnFixing\");\n    var items = that.callBase(options);\n\n    if (options.row && \"header\" === options.row.rowType) {\n      if (column && column.allowFixing) {\n        var onItemClick = function (params) {\n          switch (params.itemData.value) {\n            case \"none\":\n              that._columnsController.columnOption(column.index, \"fixed\", false);\n\n              break;\n\n            case \"left\":\n              that._columnsController.columnOption(column.index, {\n                fixed: true,\n                fixedPosition: \"left\"\n              });\n\n              break;\n\n            case \"right\":\n              that._columnsController.columnOption(column.index, {\n                fixed: true,\n                fixedPosition: \"right\"\n              });\n\n          }\n        };\n\n        items = items || [];\n        items.push({\n          text: columnFixingOptions.texts.fix,\n          beginGroup: true,\n          items: [{\n            text: columnFixingOptions.texts.leftPosition,\n            value: \"left\",\n            disabled: column.fixed && (!column.fixedPosition || \"left\" === column.fixedPosition),\n            onItemClick: onItemClick\n          }, {\n            text: columnFixingOptions.texts.rightPosition,\n            value: \"right\",\n            disabled: column.fixed && \"right\" === column.fixedPosition,\n            onItemClick: onItemClick\n          }]\n        }, {\n          text: columnFixingOptions.texts.unfix,\n          value: \"none\",\n          disabled: !column.fixed,\n          onItemClick: onItemClick\n        });\n      }\n    }\n\n    return items;\n  },\n  getFixedColumnElements: function (rowIndex) {\n    var that = this;\n\n    if ((0, _type.isDefined)(rowIndex)) {\n      return this._fixedTableElement && this._getRowElements(this._fixedTableElement).eq(rowIndex).children();\n    }\n\n    var columnElements = that.getColumnElements();\n    var $transparentColumnElement = that.getTransparentColumnElement();\n\n    if (columnElements && $transparentColumnElement && $transparentColumnElement.length) {\n      var transparentColumnIndex = getTransparentColumnIndex(that.getFixedColumns());\n      columnElements.splice(transparentColumnIndex, $transparentColumnElement.get(0).colSpan, $transparentColumnElement.get(0));\n    }\n\n    return columnElements;\n  },\n  getColumnWidths: function () {\n    var that = this;\n    var fixedWidths;\n    var result = that.callBase();\n    var $fixedColumnElements = that.getFixedColumnElements();\n    var fixedColumns = that.getFixedColumns();\n\n    if (that._fixedTableElement) {\n      if ($fixedColumnElements && $fixedColumnElements.length) {\n        fixedWidths = that._getWidths($fixedColumnElements);\n      } else {\n        fixedWidths = that.callBase(that._fixedTableElement);\n      }\n    }\n\n    return normalizeColumnWidths(fixedColumns, result, fixedWidths);\n  }\n});\nvar RowsViewFixedColumnsExtender = (0, _extend.extend)({}, baseFixedColumns, {\n  _detachHoverEvents: function () {\n    this._fixedTableElement && _events_engine2.default.off(this._fixedTableElement, \"mouseover mouseout\", \".dx-data-row\");\n    this._tableElement && _events_engine2.default.off(this._tableElement, \"mouseover mouseout\", \".dx-data-row\");\n  },\n  _attachHoverEvents: function () {\n    var that = this;\n\n    var attachHoverEvent = function ($table) {\n      _events_engine2.default.on($table, \"mouseover mouseout\", \".dx-data-row\", that.createAction(function (args) {\n        var event = args.event;\n        var rowIndex = that.getRowIndex((0, _renderer2.default)(event.target).closest(\".dx-row\"));\n        var isHover = \"mouseover\" === event.type;\n\n        if (rowIndex >= 0) {\n          that._tableElement && that._getRowElements(that._tableElement).eq(rowIndex).toggleClass(HOVER_STATE_CLASS, isHover);\n          that._fixedTableElement && that._getRowElements(that._fixedTableElement).eq(rowIndex).toggleClass(HOVER_STATE_CLASS, isHover);\n        }\n      }));\n    };\n\n    if (that._fixedTableElement && that._tableElement) {\n      attachHoverEvent(that._fixedTableElement);\n      attachHoverEvent(that._tableElement);\n    }\n  },\n  _findContentElement: function () {\n    var that = this;\n    var $content;\n    var scrollTop;\n    var contentClass = that.addWidgetPrefix(CONTENT_CLASS);\n    var element = that.element();\n    var scrollDelay = _browser2.default.mozilla ? 60 : 0;\n\n    if (element && that._isFixedTableRendering) {\n      $content = element.children(\".\" + contentClass);\n      var scrollable = that.getScrollable();\n\n      if (!$content.length && scrollable) {\n        $content = (0, _renderer2.default)(\"<div>\").addClass(contentClass);\n\n        _events_engine2.default.on($content, \"scroll\", function (e) {\n          clearTimeout(that._fixedScrollTimeout);\n          that._fixedScrollTimeout = setTimeout(function () {\n            scrollTop = (0, _renderer2.default)(e.target).scrollTop();\n            scrollable.scrollTo({\n              y: scrollTop\n            });\n          }, scrollDelay);\n        });\n\n        _events_engine2.default.on($content, _wheel2.default.name, function (e) {\n          var $nearestScrollable = (0, _renderer2.default)(e.target).closest(\".dx-scrollable\");\n\n          if (scrollable && scrollable.$element().is($nearestScrollable)) {\n            scrollTop = scrollable.scrollTop();\n            scrollable.scrollTo({\n              y: scrollTop - e.delta\n            });\n\n            if (scrollable.scrollTop() > 0 && scrollable.scrollTop() + scrollable.clientHeight() < scrollable.scrollHeight() + that.getScrollbarWidth()) {\n              return false;\n            }\n          }\n        });\n\n        $content.appendTo(element);\n      }\n\n      return $content;\n    }\n\n    return that.callBase();\n  },\n  _updateScrollable: function () {\n    this.callBase();\n    var scrollable = this.getScrollable();\n    var scrollTop = scrollable && scrollable.scrollOffset().top;\n\n    this._updateFixedTablePosition(scrollTop);\n  },\n  _renderContent: function (contentElement, tableElement) {\n    if (this._isFixedTableRendering) {\n      return contentElement.empty().addClass(this.addWidgetPrefix(CONTENT_CLASS) + \" \" + this.addWidgetPrefix(CONTENT_FIXED_CLASS) + \" \" + POINTER_EVENTS_TARGET_CLASS).append(tableElement);\n    }\n\n    return this.callBase(contentElement, tableElement);\n  },\n  _getGroupCellOptions: function (options) {\n    if (this._isFixedTableRendering) {\n      return this.callBase((0, _extend.extend)({}, options, {\n        columns: this._columnsController.getVisibleColumns()\n      }));\n    }\n\n    return this.callBase(options);\n  },\n  _renderGroupedCells: function ($row, options) {\n    return this.callBase($row, (0, _extend.extend)({}, options, {\n      columns: this._columnsController.getVisibleColumns()\n    }));\n  },\n  _renderGroupSummaryCells: function ($row, options) {\n    if (this._isFixedTableRendering) {\n      this.callBase($row, (0, _extend.extend)({}, options, {\n        columns: this._columnsController.getVisibleColumns()\n      }));\n    } else {\n      this.callBase($row, options);\n    }\n  },\n  _hasAlignByColumnSummaryItems: function (columnIndex, options) {\n    var result = this.callBase.apply(this, arguments);\n    var column = options.columns[columnIndex];\n\n    if (options.isFixed) {\n      return column.fixed && (result || \"right\" === column.fixedPosition);\n    }\n\n    return result && !column.fixed;\n  },\n  _renderGroupSummaryCellsCore: function ($groupCell, options, groupCellColSpan, alignByColumnCellCount) {\n    var alignByFixedColumnCellCount;\n\n    if (this._isFixedTableRendering) {\n      options.isFixed = true;\n      alignByFixedColumnCellCount = this._getAlignByColumnCellCount(groupCellColSpan, options);\n      options.isFixed = false;\n      var startColumnIndex = options.columns.length - alignByFixedColumnCellCount;\n      options = (0, _extend.extend)({}, options, {\n        columns: this.getFixedColumns()\n      });\n      var transparentColumnIndex = getTransparentColumnIndex(options.columns);\n\n      if (startColumnIndex < transparentColumnIndex) {\n        alignByFixedColumnCellCount -= options.columns[transparentColumnIndex].colspan - 1 || 0;\n        groupCellColSpan -= options.columns[transparentColumnIndex].colspan - 1 || 0;\n      } else {\n        if (alignByColumnCellCount > 0) {\n          $groupCell.css(\"visibility\", \"hidden\");\n        }\n      }\n\n      alignByColumnCellCount = alignByFixedColumnCellCount;\n    }\n\n    this.callBase($groupCell, options, groupCellColSpan, alignByColumnCellCount);\n  },\n  _getSummaryCellIndex: function (columnIndex, columns) {\n    if (this._isFixedTableRendering) {\n      var transparentColumnIndex = getTransparentColumnIndex(columns);\n\n      if (columnIndex > transparentColumnIndex) {\n        columnIndex += columns[transparentColumnIndex].colspan - 1;\n      }\n\n      return columnIndex;\n    }\n\n    return this.callBase.apply(this, arguments);\n  },\n  _renderCore: function (change) {\n    this._detachHoverEvents();\n\n    this.callBase(change);\n    var isFixedColumns = this._isFixedColumns;\n    this.element().toggleClass(FIXED_COLUMNS_CLASS, isFixedColumns);\n\n    if (this.option(\"hoverStateEnabled\") && isFixedColumns) {\n      this._attachHoverEvents();\n    }\n  },\n  setRowsOpacity: function (columnIndex, value) {\n    this.callBase(columnIndex, value);\n\n    var $rows = this._getRowElements(this._fixedTableElement);\n\n    this._setRowsOpacityCore($rows, this.getFixedColumns(), columnIndex, value);\n  },\n  optionChanged: function (args) {\n    var that = this;\n    that.callBase(args);\n\n    if (\"hoverStateEnabled\" === args.name && that._isFixedColumns) {\n      args.value ? this._attachHoverEvents() : this._detachHoverEvents();\n    }\n  },\n  getCellIndex: function ($cell) {\n    var $fixedTable = this._fixedTableElement;\n    var cellIndex = 0;\n\n    if ($fixedTable && $cell.is(\"td\") && $cell.closest($fixedTable).length) {\n      var columns = this.getFixedColumns();\n      (0, _iterator.each)(columns, function (index, column) {\n        if (index === $cell[0].cellIndex) {\n          return false;\n        }\n\n        if (column.colspan) {\n          cellIndex += column.colspan;\n          return;\n        }\n\n        cellIndex++;\n      });\n      return cellIndex;\n    }\n\n    return this.callBase.apply(this, arguments);\n  },\n  _updateFixedTablePosition: function (scrollTop, needFocus) {\n    if (this._fixedTableElement && this._tableElement) {\n      var $focusedElement;\n      var editorFactory = this.getController(\"editorFactory\");\n\n      this._fixedTableElement.parent().scrollTop(scrollTop);\n\n      if (needFocus) {\n        $focusedElement = editorFactory.focus();\n        $focusedElement && editorFactory.focus($focusedElement);\n      }\n    }\n  },\n  setScrollerSpacing: function (vWidth, hWidth) {\n    var that = this;\n    var styles = {\n      marginBottom: 0\n    };\n    var $fixedContent = that.element().children(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS));\n\n    if ($fixedContent.length && that._fixedTableElement) {\n      $fixedContent.css(styles);\n\n      that._fixedTableElement.css(styles);\n\n      styles[that.option(\"rtlEnabled\") ? \"marginLeft\" : \"marginRight\"] = vWidth;\n      styles.marginBottom = hWidth;\n\n      var useNativeScrolling = that._scrollable && that._scrollable.option(\"useNative\");\n\n      (useNativeScrolling ? $fixedContent : that._fixedTableElement).css(styles);\n    }\n  },\n  _getElasticScrollTop: function (e) {\n    var elasticScrollTop = 0;\n    var scrollbarWidth = this.getScrollbarWidth(true);\n\n    if (e.scrollOffset.top < 0) {\n      elasticScrollTop = -e.scrollOffset.top;\n    } else {\n      if (e.reachedBottom) {\n        var scrollableContent = this._findContentElement();\n\n        var scrollableContainer = e.component._container();\n\n        var maxScrollTop = Math.max(scrollableContent.height() + scrollbarWidth - scrollableContainer.height(), 0);\n        elasticScrollTop = maxScrollTop - e.scrollOffset.top;\n      }\n    }\n\n    return elasticScrollTop;\n  },\n  _applyElasticScrolling: function (e) {\n    if (this._fixedTableElement) {\n      var elasticScrollTop = this._getElasticScrollTop(e);\n\n      if (0 !== Math.ceil(elasticScrollTop)) {\n        _translator2.default.move(this._fixedTableElement, {\n          top: elasticScrollTop\n        });\n      } else {\n        this._fixedTableElement.css(\"transform\", \"\");\n      }\n    }\n  },\n  _handleScroll: function (e) {\n    this._updateFixedTablePosition(e.scrollOffset.top, true);\n\n    this._applyElasticScrolling(e);\n\n    this.callBase(e);\n  },\n  _updateContentPosition: function (isRender) {\n    this.callBase.apply(this, arguments);\n\n    if (!isRender) {\n      this._updateFixedTablePosition(this._scrollTop);\n    }\n  },\n  _afterRowPrepared: function (e) {\n    if (this._isFixedTableRendering) {\n      return;\n    }\n\n    this.callBase(e);\n  },\n  _scrollToElement: function ($element) {\n    this.callBase($element, this.getFixedColumnsOffset());\n  },\n  dispose: function () {\n    this.callBase.apply(this, arguments);\n    clearTimeout(this._fixedScrollTimeout);\n  }\n});\nvar FooterViewFixedColumnsExtender = baseFixedColumns;\nmodule.exports = {\n  defaultOptions: function () {\n    return {\n      columnFixing: {\n        enabled: false,\n        texts: {\n          fix: _message2.default.format(\"dxDataGrid-columnFixingFix\"),\n          unfix: _message2.default.format(\"dxDataGrid-columnFixingUnfix\"),\n          leftPosition: _message2.default.format(\"dxDataGrid-columnFixingLeftPosition\"),\n          rightPosition: _message2.default.format(\"dxDataGrid-columnFixingRightPosition\")\n        }\n      }\n    };\n  },\n  extenders: {\n    views: {\n      columnHeadersView: ColumnHeadersViewFixedColumnsExtender,\n      rowsView: RowsViewFixedColumnsExtender,\n      footerView: FooterViewFixedColumnsExtender\n    },\n    controllers: function () {\n      var normalizeColumnIndicesByPoints = function (columns, fixedColumns, pointsByColumns) {\n        var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\n        var correctIndex = columns.length - fixedColumns.length;\n        (0, _iterator.each)(pointsByColumns, function (_, point) {\n          if (point.index > transparentColumnIndex) {\n            point.columnIndex += correctIndex;\n            point.index += correctIndex;\n          }\n        });\n        return pointsByColumns;\n      };\n\n      return {\n        draggingHeader: {\n          _generatePointsByColumns: function (options) {\n            var visibleColumns = options.columns;\n            var targetDraggingPanel = options.targetDraggingPanel;\n\n            if (targetDraggingPanel && \"headers\" === targetDraggingPanel.getName() && targetDraggingPanel.isFixedColumns()) {\n              if (options.sourceColumn.fixed) {\n                if (!options.rowIndex) {\n                  options.columnElements = targetDraggingPanel.getFixedColumnElements(0);\n                }\n\n                options.columns = targetDraggingPanel.getFixedColumns(options.rowIndex);\n                var pointsByColumns = this.callBase(options);\n                normalizeColumnIndicesByPoints(visibleColumns, options.columns, pointsByColumns);\n                return pointsByColumns;\n              }\n            }\n\n            return this.callBase(options);\n          },\n          _pointCreated: function (point, columns, location, sourceColumn) {\n            var result = this.callBase.apply(this, arguments);\n\n            var $transparentColumn = this._columnHeadersView.getTransparentColumnElement();\n\n            if (!result && \"headers\" === location && $transparentColumn && $transparentColumn.length) {\n              var boundingRect = (0, _position.getBoundingRect)($transparentColumn.get(0));\n\n              if (sourceColumn && sourceColumn.fixed) {\n                return \"right\" === sourceColumn.fixedPosition ? point.x < boundingRect.right : point.x > boundingRect.left;\n              } else {\n                return point.x < boundingRect.left || point.x > boundingRect.right;\n              }\n            }\n\n            return result;\n          }\n        },\n        columnsResizer: {\n          _generatePointsByColumns: function () {\n            var that = this;\n            var columnsController = that._columnsController;\n\n            var columns = columnsController && that._columnsController.getVisibleColumns();\n\n            var fixedColumns = columnsController && that._columnsController.getFixedColumns();\n\n            var cells = that._columnHeadersView.getFixedColumnElements();\n\n            var pointsByFixedColumns = [];\n            that.callBase();\n\n            if (cells && cells.length > 0) {\n              pointsByFixedColumns = _uiGrid_core2.default.getPointsByColumns(cells, function (point) {\n                return that._pointCreated(point, cells.length, fixedColumns);\n              });\n              that._pointsByFixedColumns = normalizeColumnIndicesByPoints(columns, fixedColumns, pointsByFixedColumns);\n            }\n          },\n          _pointCreated: function (point, cellsLength, columns) {\n            var isWidgetResizingMode = \"widget\" === this.option(\"columnResizingMode\");\n\n            if (point.index > 0 && point.index < cellsLength) {\n              var currentColumn = columns[point.columnIndex - 1] || {};\n              var nextColumn = columns[point.columnIndex] || {};\n\n              if (currentColumn.fixed || nextColumn.fixed) {\n                point.columnIndex -= 1;\n                return !((currentColumn.allowResizing || currentColumn.command === COMMAND_TRANSPARENT) && (isWidgetResizingMode || nextColumn.allowResizing || nextColumn.command === COMMAND_TRANSPARENT));\n              }\n            }\n\n            return this.callBase.apply(this, arguments);\n          },\n          _getTargetPoint: function (pointsByColumns, currentX, deltaX) {\n            var $transparentColumn = this._columnHeadersView.getTransparentColumnElement();\n\n            if ($transparentColumn && $transparentColumn.length) {\n              var boundingRect = (0, _position.getBoundingRect)($transparentColumn.get(0));\n\n              if (currentX <= boundingRect.left || currentX >= boundingRect.right) {\n                return this.callBase(this._pointsByFixedColumns, currentX, deltaX);\n              }\n            }\n\n            return this.callBase(pointsByColumns, currentX, deltaX);\n          }\n        }\n      };\n    }()\n  }\n};","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/ticketSystem/frontend/node_modules/devextreme/ui/grid_core/ui.grid_core.column_fixing.js"],"names":["_renderer","require","_renderer2","_interopRequireDefault","_events_engine","_events_engine2","_wheel","_wheel2","_message","_message2","_uiGrid_core","_uiGrid_core2","_type","_extend","_iterator","_browser","_browser2","_position","_translator","_translator2","obj","__esModule","CONTENT_CLASS","CONTENT_FIXED_CLASS","MASTER_DETAIL_CELL_CLASS","FIRST_CELL_CLASS","LAST_CELL_CLASS","HOVER_STATE_CLASS","FIXED_COL_CLASS","FIXED_COLUMNS_CLASS","POINTER_EVENTS_TARGET_CLASS","POINTER_EVENTS_NONE_CLASS","COMMAND_TRANSPARENT","GROUP_ROW_CLASS","getTransparentColumnIndex","fixedColumns","transparentColumnIndex","each","index","column","command","normalizeColumnWidths","widths","fixedWidths","fixedColumnIndex","i","length","colspan","baseFixedColumns","init","callBase","_isFixedTableRendering","_isFixedColumns","_createCol","toggleClass","fixed","_correctColumnIndicesForFixedColumns","change","transparentColspan","columnIndices","map","columnIndex","filter","_renderTable","options","that","$fixedTable","getFixedColumns","$table","_createTable","_renderRows","extend","columns","_updateContent","_fixedTableElement","parent","remove","_renderRow","fixedCorrection","cells","row","apply","arguments","fixedCells","slice","_createCell","columnCommand","rowType","$cell","prevFixedColumn","addClass","default","setEmptyText","isRowAltStyle","option","isAltRow","mozilla","_wrapTableInScrollContainer","$scrollContainer","addWidgetPrefix","_renderCellContent","isEmptyCell","isFixedTableRendering","isGroupCell","isDefined","groupIndex","groupCellTemplate","css","summaryCells","_columnsController","getVisibleColumns","alignByFixedColumnCellCount","_getAlignByColumnCellCount","isFixed","type","html","cssClass","_getCellElementsCore","rowIndex","cellElements","isGroupRow","hasClass","name","fixedCellElements","_getRowElements","eq","children","cell","style","visibility","fixedColumn","getVisibleIndex","getColumnWidths","result","_getTableElement","tableElement","_setTableElement","getColumns","$tableElement","closest","getRowIndex","$row","find","getTableElements","get","getFixedColumnsOffset","offset","left","right","$transparentColumn","getTransparentColumnElement","positionTransparentColumn","position","element","outerWidth","first","getFixedTableElement","isFixedColumns","_resizeCore","synchronizeRows","setColumnWidths","visibleColumns","isWidthsSynchronized","visibleWidth","optionNames","isColumnWidthChanged","width","useVisibleColumns","isScrollbarVisible","hasAutoWidth","some","_createColGroup","_getClientHeight","boundingClientRectElement","getBoundingClientRect","getBoundingRect","height","clientHeight","rowHeights","fixedRowHeights","$rowElements","$fixedRowElements","$contentElement","_tableElement","heightTable","heightFixedTable","_findContentElement","push","rowHeight","fixedRowHeight","setScrollerSpacing","rtlEnabled","paddingLeft","paddingRight","ColumnHeadersViewFixedColumnsExtender","_getRowVisibleColumns","getContextMenuItems","columnFixingOptions","items","allowFixing","onItemClick","params","itemData","value","columnOption","fixedPosition","text","texts","fix","beginGroup","leftPosition","disabled","rightPosition","unfix","getFixedColumnElements","columnElements","getColumnElements","$transparentColumnElement","splice","colSpan","$fixedColumnElements","_getWidths","RowsViewFixedColumnsExtender","_detachHoverEvents","off","_attachHoverEvents","attachHoverEvent","on","createAction","args","event","target","isHover","$content","scrollTop","contentClass","scrollDelay","scrollable","getScrollable","e","clearTimeout","_fixedScrollTimeout","setTimeout","scrollTo","y","$nearestScrollable","$element","is","delta","scrollHeight","getScrollbarWidth","appendTo","_updateScrollable","scrollOffset","top","_updateFixedTablePosition","_renderContent","contentElement","empty","append","_getGroupCellOptions","_renderGroupedCells","_renderGroupSummaryCells","_hasAlignByColumnSummaryItems","_renderGroupSummaryCellsCore","$groupCell","groupCellColSpan","alignByColumnCellCount","startColumnIndex","_getSummaryCellIndex","_renderCore","setRowsOpacity","$rows","_setRowsOpacityCore","optionChanged","getCellIndex","cellIndex","needFocus","$focusedElement","editorFactory","getController","focus","vWidth","hWidth","styles","marginBottom","$fixedContent","useNativeScrolling","_scrollable","_getElasticScrollTop","elasticScrollTop","scrollbarWidth","reachedBottom","scrollableContent","scrollableContainer","component","_container","maxScrollTop","Math","max","_applyElasticScrolling","ceil","move","_handleScroll","_updateContentPosition","isRender","_scrollTop","_afterRowPrepared","_scrollToElement","dispose","FooterViewFixedColumnsExtender","module","exports","defaultOptions","columnFixing","enabled","format","extenders","views","columnHeadersView","rowsView","footerView","controllers","normalizeColumnIndicesByPoints","pointsByColumns","correctIndex","_","point","draggingHeader","_generatePointsByColumns","targetDraggingPanel","getName","sourceColumn","_pointCreated","location","_columnHeadersView","boundingRect","x","columnsResizer","columnsController","pointsByFixedColumns","getPointsByColumns","_pointsByFixedColumns","cellsLength","isWidgetResizingMode","currentColumn","nextColumn","allowResizing","_getTargetPoint","currentX","deltaX"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.column_fixing.js)\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _renderer = require(\"../../core/renderer\");\r\nvar _renderer2 = _interopRequireDefault(_renderer);\r\nvar _events_engine = require(\"../../events/core/events_engine\");\r\nvar _events_engine2 = _interopRequireDefault(_events_engine);\r\nvar _wheel = require(\"../../events/core/wheel\");\r\nvar _wheel2 = _interopRequireDefault(_wheel);\r\nvar _message = require(\"../../localization/message\");\r\nvar _message2 = _interopRequireDefault(_message);\r\nvar _uiGrid_core = require(\"../grid_core/ui.grid_core.utils\");\r\nvar _uiGrid_core2 = _interopRequireDefault(_uiGrid_core);\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _browser = require(\"../../core/utils/browser\");\r\nvar _browser2 = _interopRequireDefault(_browser);\r\nvar _position = require(\"../../core/utils/position\");\r\nvar _translator = require(\"../../animation/translator\");\r\nvar _translator2 = _interopRequireDefault(_translator);\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar CONTENT_CLASS = \"content\";\r\nvar CONTENT_FIXED_CLASS = \"content-fixed\";\r\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\r\nvar FIRST_CELL_CLASS = \"dx-first-cell\";\r\nvar LAST_CELL_CLASS = \"dx-last-cell\";\r\nvar HOVER_STATE_CLASS = \"dx-state-hover\";\r\nvar FIXED_COL_CLASS = \"dx-col-fixed\";\r\nvar FIXED_COLUMNS_CLASS = \"dx-fixed-columns\";\r\nvar POINTER_EVENTS_TARGET_CLASS = \"dx-pointer-events-target\";\r\nvar POINTER_EVENTS_NONE_CLASS = \"dx-pointer-events-none\";\r\nvar COMMAND_TRANSPARENT = \"transparent\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar getTransparentColumnIndex = function(fixedColumns) {\r\n    var transparentColumnIndex = -1;\r\n    (0, _iterator.each)(fixedColumns, function(index, column) {\r\n        if (column.command === COMMAND_TRANSPARENT) {\r\n            transparentColumnIndex = index;\r\n            return false\r\n        }\r\n    });\r\n    return transparentColumnIndex\r\n};\r\nvar normalizeColumnWidths = function(fixedColumns, widths, fixedWidths) {\r\n    var fixedColumnIndex = 0;\r\n    if (fixedColumns && widths && fixedWidths) {\r\n        for (var i = 0; i < fixedColumns.length; i++) {\r\n            if (fixedColumns[i].command === COMMAND_TRANSPARENT) {\r\n                fixedColumnIndex += fixedColumns[i].colspan\r\n            } else {\r\n                if (widths[fixedColumnIndex] < fixedWidths[i]) {\r\n                    widths[fixedColumnIndex] = fixedWidths[i]\r\n                }\r\n                fixedColumnIndex++\r\n            }\r\n        }\r\n    }\r\n    return widths\r\n};\r\nvar baseFixedColumns = {\r\n    init: function() {\r\n        this.callBase();\r\n        this._isFixedTableRendering = false;\r\n        this._isFixedColumns = false\r\n    },\r\n    _createCol: function(column) {\r\n        return this.callBase(column).toggleClass(FIXED_COL_CLASS, !!(this._isFixedTableRendering && (column.fixed || column.command && column.command !== COMMAND_TRANSPARENT)))\r\n    },\r\n    _correctColumnIndicesForFixedColumns: function(fixedColumns, change) {\r\n        var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n        var transparentColspan = fixedColumns[transparentColumnIndex].colspan;\r\n        var columnIndices = change && change.columnIndices;\r\n        if (columnIndices) {\r\n            change.columnIndices = columnIndices.map(function(columnIndices) {\r\n                if (columnIndices) {\r\n                    return columnIndices.map(function(columnIndex) {\r\n                        if (columnIndex < transparentColumnIndex) {\r\n                            return columnIndex\r\n                        } else {\r\n                            if (columnIndex >= transparentColumnIndex + transparentColspan) {\r\n                                return columnIndex - transparentColspan + 1\r\n                            }\r\n                        }\r\n                        return -1\r\n                    }).filter(function(columnIndex) {\r\n                        return columnIndex >= 0\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    },\r\n    _renderTable: function(options) {\r\n        var that = this;\r\n        var $fixedTable;\r\n        var fixedColumns = that.getFixedColumns();\r\n        that._isFixedColumns = !!fixedColumns.length;\r\n        var $table = that.callBase(options);\r\n        if (that._isFixedColumns) {\r\n            that._isFixedTableRendering = true;\r\n            var change = options && options.change;\r\n            var columnIndices = change && change.columnIndices;\r\n            that._correctColumnIndicesForFixedColumns(fixedColumns, change);\r\n            $fixedTable = that._createTable(fixedColumns);\r\n            that._renderRows($fixedTable, (0, _extend.extend)({}, options, {\r\n                columns: fixedColumns\r\n            }));\r\n            that._updateContent($fixedTable, change);\r\n            if (columnIndices) {\r\n                change.columnIndices = columnIndices\r\n            }\r\n            that._isFixedTableRendering = false\r\n        } else {\r\n            that._fixedTableElement && that._fixedTableElement.parent().remove();\r\n            that._fixedTableElement = null\r\n        }\r\n        return $table\r\n    },\r\n    _renderRow: function($table, options) {\r\n        var fixedCorrection;\r\n        var cells = options.row.cells;\r\n        this.callBase.apply(this, arguments);\r\n        if (this._isFixedTableRendering && cells && cells.length) {\r\n            fixedCorrection = 0;\r\n            var fixedCells = options.row.cells || [];\r\n            cells = cells.slice();\r\n            options.row.cells = cells;\r\n            for (var i = 0; i < fixedCells.length; i++) {\r\n                if (fixedCells[i].column && fixedCells[i].column.command === COMMAND_TRANSPARENT) {\r\n                    fixedCorrection = (fixedCells[i].column.colspan || 1) - 1;\r\n                    continue\r\n                }\r\n                cells[i + fixedCorrection] = fixedCells[i]\r\n            }\r\n        }\r\n    },\r\n    _createCell: function(options) {\r\n        var that = this;\r\n        var column = options.column;\r\n        var columnCommand = column && column.command;\r\n        var rowType = options.rowType;\r\n        var $cell = that.callBase.apply(that, arguments);\r\n        var fixedColumns;\r\n        var prevFixedColumn;\r\n        var transparentColumnIndex;\r\n        if (that._isFixedTableRendering || \"filter\" === rowType) {\r\n            fixedColumns = that.getFixedColumns();\r\n            transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n            prevFixedColumn = fixedColumns[transparentColumnIndex - 1]\r\n        }\r\n        if (that._isFixedTableRendering) {\r\n            if (columnCommand === COMMAND_TRANSPARENT) {\r\n                $cell.addClass(POINTER_EVENTS_NONE_CLASS).toggleClass(FIRST_CELL_CLASS, 0 === transparentColumnIndex || prevFixedColumn && \"expand\" === prevFixedColumn.command).toggleClass(LAST_CELL_CLASS, fixedColumns.length && transparentColumnIndex === fixedColumns.length - 1);\r\n                if (\"freeSpace\" !== rowType) {\r\n                    _uiGrid_core2.default.setEmptyText($cell)\r\n                }\r\n            }\r\n        } else {\r\n            if (\"filter\" === rowType) {\r\n                $cell.toggleClass(FIRST_CELL_CLASS, options.columnIndex === transparentColumnIndex)\r\n            }\r\n        }\r\n        var isRowAltStyle = that.option(\"rowAlternationEnabled\") && options.isAltRow;\r\n        if (_browser2.default.mozilla && options.column.fixed && \"group\" !== options.rowType && !isRowAltStyle) {\r\n            $cell.addClass(FIXED_COL_CLASS)\r\n        }\r\n        return $cell\r\n    },\r\n    _wrapTableInScrollContainer: function() {\r\n        var $scrollContainer = this.callBase.apply(this, arguments);\r\n        if (this._isFixedTableRendering) {\r\n            $scrollContainer.addClass(this.addWidgetPrefix(CONTENT_FIXED_CLASS) + \" \" + POINTER_EVENTS_TARGET_CLASS)\r\n        }\r\n        return $scrollContainer\r\n    },\r\n    _renderCellContent: function($cell, options) {\r\n        var that = this;\r\n        var isEmptyCell;\r\n        var column = options.column;\r\n        var isFixedTableRendering = that._isFixedTableRendering;\r\n        var isGroupCell = \"group\" === options.rowType && (0, _type.isDefined)(column.groupIndex);\r\n        if (isFixedTableRendering && isGroupCell && !column.command && !column.groupCellTemplate) {\r\n            $cell.css(\"pointerEvents\", \"none\")\r\n        }\r\n        if (!isFixedTableRendering && that._isFixedColumns) {\r\n            isEmptyCell = column.fixed || column.command && false !== column.fixed;\r\n            if (isGroupCell) {\r\n                isEmptyCell = false;\r\n                if (options.row.summaryCells && options.row.summaryCells.length) {\r\n                    var columns = that._columnsController.getVisibleColumns();\r\n                    var alignByFixedColumnCellCount = that._getAlignByColumnCellCount ? that._getAlignByColumnCellCount(column.colspan, {\r\n                        columns: columns,\r\n                        row: options.row,\r\n                        isFixed: true\r\n                    }) : 0;\r\n                    if (alignByFixedColumnCellCount > 0) {\r\n                        var transparentColumnIndex = getTransparentColumnIndex(that._columnsController.getFixedColumns());\r\n                        isEmptyCell = columns.length - alignByFixedColumnCellCount < transparentColumnIndex\r\n                    }\r\n                }\r\n            }\r\n            if (isEmptyCell) {\r\n                if (that.option(\"legacyRendering\") || column.command && \"buttons\" !== column.type || \"group\" === options.rowType) {\r\n                    $cell.html(\"&nbsp;\").addClass(column.cssClass);\r\n                    return\r\n                } else {\r\n                    $cell.addClass(\"dx-hidden-cell\")\r\n                }\r\n            }\r\n        }\r\n        if (column.command !== COMMAND_TRANSPARENT) {\r\n            that.callBase($cell, options)\r\n        }\r\n    },\r\n    _getCellElementsCore: function(rowIndex) {\r\n        var that = this;\r\n        var cellElements = that.callBase(rowIndex);\r\n        var isGroupRow = cellElements.parent().hasClass(GROUP_ROW_CLASS);\r\n        var index = \"columnHeadersView\" === that.name ? rowIndex : void 0;\r\n        if (that._fixedTableElement && cellElements) {\r\n            var fixedColumns = that.getFixedColumns(index);\r\n            var fixedCellElements = that._getRowElements(that._fixedTableElement).eq(rowIndex).children(\"td\");\r\n            (0, _iterator.each)(fixedCellElements, function(columnIndex, cell) {\r\n                if (isGroupRow) {\r\n                    if (cellElements[columnIndex] && \"hidden\" !== cell.style.visibility) {\r\n                        cellElements[columnIndex] = cell\r\n                    }\r\n                } else {\r\n                    var fixedColumn = fixedColumns[columnIndex];\r\n                    if (fixedColumn) {\r\n                        if (fixedColumn.command === COMMAND_TRANSPARENT) {\r\n                            if (fixedCellElements.eq(columnIndex).hasClass(MASTER_DETAIL_CELL_CLASS)) {\r\n                                cellElements[columnIndex] = cell || cellElements[columnIndex]\r\n                            }\r\n                        } else {\r\n                            var fixedColumnIndex = that._columnsController.getVisibleIndex(fixedColumn.index, index);\r\n                            cellElements[fixedColumnIndex] = cell || cellElements[fixedColumnIndex]\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        return cellElements\r\n    },\r\n    getColumnWidths: function() {\r\n        var that = this;\r\n        var fixedWidths;\r\n        var result = that.callBase();\r\n        var fixedColumns = that.getFixedColumns();\r\n        if (that._fixedTableElement && result.length) {\r\n            fixedWidths = that.callBase(that._fixedTableElement)\r\n        }\r\n        return normalizeColumnWidths(fixedColumns, result, fixedWidths)\r\n    },\r\n    _getTableElement: function() {\r\n        var tableElement = this._isFixedTableRendering ? this._fixedTableElement : this.callBase();\r\n        return tableElement\r\n    },\r\n    _setTableElement: function(tableElement) {\r\n        if (this._isFixedTableRendering) {\r\n            this._fixedTableElement = tableElement.addClass(POINTER_EVENTS_NONE_CLASS)\r\n        } else {\r\n            this.callBase(tableElement)\r\n        }\r\n    },\r\n    getColumns: function(rowIndex, $tableElement) {\r\n        $tableElement = $tableElement || this._getTableElement();\r\n        if (this._isFixedTableRendering || $tableElement && $tableElement.closest(\"table\").parent(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS)).length) {\r\n            return this.getFixedColumns(rowIndex)\r\n        }\r\n        return this.callBase(rowIndex, $tableElement)\r\n    },\r\n    getRowIndex: function($row) {\r\n        var $fixedTable = this._fixedTableElement;\r\n        if ($fixedTable && $fixedTable.find($row).length) {\r\n            return this._getRowElements($fixedTable).index($row)\r\n        }\r\n        return this.callBase($row)\r\n    },\r\n    getTableElements: function() {\r\n        var result = this.callBase.apply(this, arguments);\r\n        if (this._fixedTableElement) {\r\n            result = (0, _renderer2.default)([result.get(0), this._fixedTableElement.get(0)])\r\n        }\r\n        return result\r\n    },\r\n    getFixedColumns: function(rowIndex) {\r\n        return this._columnsController.getFixedColumns(rowIndex)\r\n    },\r\n    getFixedColumnsOffset: function() {\r\n        var offset = {\r\n            left: 0,\r\n            right: 0\r\n        };\r\n        var $transparentColumn;\r\n        if (this._fixedTableElement) {\r\n            $transparentColumn = this.getTransparentColumnElement();\r\n            var positionTransparentColumn = $transparentColumn.position();\r\n            offset = {\r\n                left: positionTransparentColumn.left,\r\n                right: this.element().outerWidth(true) - ($transparentColumn.outerWidth(true) + positionTransparentColumn.left)\r\n            }\r\n        }\r\n        return offset\r\n    },\r\n    getTransparentColumnElement: function() {\r\n        return this._fixedTableElement && this._fixedTableElement.find(\".\" + POINTER_EVENTS_NONE_CLASS).first()\r\n    },\r\n    getFixedTableElement: function() {\r\n        return this._fixedTableElement\r\n    },\r\n    isFixedColumns: function() {\r\n        return this._isFixedColumns\r\n    },\r\n    _resizeCore: function() {\r\n        this.callBase();\r\n        this.synchronizeRows()\r\n    },\r\n    setColumnWidths: function(options) {\r\n        var columns;\r\n        var visibleColumns = this._columnsController.getVisibleColumns();\r\n        var widths = options.widths;\r\n        var isWidthsSynchronized = widths && widths.length && (0, _type.isDefined)(visibleColumns[0].visibleWidth);\r\n        var optionNames = options.optionNames;\r\n        var isColumnWidthChanged = optionNames && optionNames.width;\r\n        var useVisibleColumns = false;\r\n        this.callBase.apply(this, arguments);\r\n        if (this._fixedTableElement) {\r\n            if (this.option(\"legacyRendering\")) {\r\n                useVisibleColumns = widths && widths.length && !this.isScrollbarVisible(true)\r\n            } else {\r\n                var hasAutoWidth = widths && widths.some(function(width) {\r\n                    return \"auto\" === width\r\n                });\r\n                useVisibleColumns = hasAutoWidth && (!isWidthsSynchronized || !this.isScrollbarVisible(true))\r\n            }\r\n            if (useVisibleColumns) {\r\n                columns = visibleColumns\r\n            }\r\n            this.callBase((0, _extend.extend)({}, options, {\r\n                $tableElement: this._fixedTableElement,\r\n                columns: columns,\r\n                fixed: true\r\n            }))\r\n        }\r\n        if (isWidthsSynchronized || isColumnWidthChanged && this.option(\"wordWrapEnabled\")) {\r\n            this.synchronizeRows()\r\n        }\r\n    },\r\n    _createColGroup: function(columns) {\r\n        if (!this.option(\"legacyRendering\") && this._isFixedTableRendering && !this.option(\"columnAutoWidth\")) {\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            var useVisibleColumns = visibleColumns.filter(function(column) {\r\n                return !column.width\r\n            }).length;\r\n            if (useVisibleColumns) {\r\n                columns = visibleColumns\r\n            }\r\n        }\r\n        return this.callBase(columns)\r\n    },\r\n    _getClientHeight: function(element) {\r\n        var boundingClientRectElement = element.getBoundingClientRect && (0, _position.getBoundingRect)(element);\r\n        return boundingClientRectElement && boundingClientRectElement.height ? boundingClientRectElement.height : element.clientHeight\r\n    },\r\n    synchronizeRows: function() {\r\n        var that = this;\r\n        var rowHeights = [];\r\n        var fixedRowHeights = [];\r\n        var rowIndex;\r\n        var $rowElements;\r\n        var $fixedRowElements;\r\n        var $contentElement;\r\n        if (that._isFixedColumns && that._tableElement && that._fixedTableElement) {\r\n            var heightTable = that._getClientHeight(that._tableElement.get(0));\r\n            var heightFixedTable = that._getClientHeight(that._fixedTableElement.get(0));\r\n            $rowElements = that._getRowElements(that._tableElement);\r\n            $fixedRowElements = that._getRowElements(that._fixedTableElement);\r\n            $contentElement = that._findContentElement();\r\n            if (heightTable !== heightFixedTable) {\r\n                $contentElement && $contentElement.css(\"height\", heightTable);\r\n                $rowElements.css(\"height\", \"\");\r\n                $fixedRowElements.css(\"height\", \"\");\r\n                for (rowIndex = 0; rowIndex < $rowElements.length; rowIndex++) {\r\n                    rowHeights.push(that._getClientHeight($rowElements.get(rowIndex)));\r\n                    fixedRowHeights.push(that._getClientHeight($fixedRowElements.get(rowIndex)))\r\n                }\r\n                for (rowIndex = 0; rowIndex < $rowElements.length; rowIndex++) {\r\n                    var rowHeight = rowHeights[rowIndex];\r\n                    var fixedRowHeight = fixedRowHeights[rowIndex];\r\n                    if (rowHeight > fixedRowHeight) {\r\n                        $fixedRowElements.eq(rowIndex).css(\"height\", rowHeight)\r\n                    } else {\r\n                        if (rowHeight < fixedRowHeight) {\r\n                            $rowElements.eq(rowIndex).css(\"height\", fixedRowHeight)\r\n                        }\r\n                    }\r\n                }\r\n                $contentElement && $contentElement.css(\"height\", \"\")\r\n            }\r\n        }\r\n    },\r\n    setScrollerSpacing: function(width) {\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        this.callBase(width);\r\n        this.element().children(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS)).css({\r\n            paddingLeft: rtlEnabled ? width : \"\",\r\n            paddingRight: !rtlEnabled ? width : \"\"\r\n        })\r\n    }\r\n};\r\nvar ColumnHeadersViewFixedColumnsExtender = (0, _extend.extend)({}, baseFixedColumns, {\r\n    _getRowVisibleColumns: function(rowIndex) {\r\n        if (this._isFixedTableRendering) {\r\n            return this.getFixedColumns(rowIndex)\r\n        }\r\n        return this.callBase(rowIndex)\r\n    },\r\n    getContextMenuItems: function(options) {\r\n        var that = this;\r\n        var column = options.column;\r\n        var columnFixingOptions = that.option(\"columnFixing\");\r\n        var items = that.callBase(options);\r\n        if (options.row && \"header\" === options.row.rowType) {\r\n            if (column && column.allowFixing) {\r\n                var onItemClick = function(params) {\r\n                    switch (params.itemData.value) {\r\n                        case \"none\":\r\n                            that._columnsController.columnOption(column.index, \"fixed\", false);\r\n                            break;\r\n                        case \"left\":\r\n                            that._columnsController.columnOption(column.index, {\r\n                                fixed: true,\r\n                                fixedPosition: \"left\"\r\n                            });\r\n                            break;\r\n                        case \"right\":\r\n                            that._columnsController.columnOption(column.index, {\r\n                                fixed: true,\r\n                                fixedPosition: \"right\"\r\n                            })\r\n                    }\r\n                };\r\n                items = items || [];\r\n                items.push({\r\n                    text: columnFixingOptions.texts.fix,\r\n                    beginGroup: true,\r\n                    items: [{\r\n                        text: columnFixingOptions.texts.leftPosition,\r\n                        value: \"left\",\r\n                        disabled: column.fixed && (!column.fixedPosition || \"left\" === column.fixedPosition),\r\n                        onItemClick: onItemClick\r\n                    }, {\r\n                        text: columnFixingOptions.texts.rightPosition,\r\n                        value: \"right\",\r\n                        disabled: column.fixed && \"right\" === column.fixedPosition,\r\n                        onItemClick: onItemClick\r\n                    }]\r\n                }, {\r\n                    text: columnFixingOptions.texts.unfix,\r\n                    value: \"none\",\r\n                    disabled: !column.fixed,\r\n                    onItemClick: onItemClick\r\n                })\r\n            }\r\n        }\r\n        return items\r\n    },\r\n    getFixedColumnElements: function(rowIndex) {\r\n        var that = this;\r\n        if ((0, _type.isDefined)(rowIndex)) {\r\n            return this._fixedTableElement && this._getRowElements(this._fixedTableElement).eq(rowIndex).children()\r\n        }\r\n        var columnElements = that.getColumnElements();\r\n        var $transparentColumnElement = that.getTransparentColumnElement();\r\n        if (columnElements && $transparentColumnElement && $transparentColumnElement.length) {\r\n            var transparentColumnIndex = getTransparentColumnIndex(that.getFixedColumns());\r\n            columnElements.splice(transparentColumnIndex, $transparentColumnElement.get(0).colSpan, $transparentColumnElement.get(0))\r\n        }\r\n        return columnElements\r\n    },\r\n    getColumnWidths: function() {\r\n        var that = this;\r\n        var fixedWidths;\r\n        var result = that.callBase();\r\n        var $fixedColumnElements = that.getFixedColumnElements();\r\n        var fixedColumns = that.getFixedColumns();\r\n        if (that._fixedTableElement) {\r\n            if ($fixedColumnElements && $fixedColumnElements.length) {\r\n                fixedWidths = that._getWidths($fixedColumnElements)\r\n            } else {\r\n                fixedWidths = that.callBase(that._fixedTableElement)\r\n            }\r\n        }\r\n        return normalizeColumnWidths(fixedColumns, result, fixedWidths)\r\n    }\r\n});\r\nvar RowsViewFixedColumnsExtender = (0, _extend.extend)({}, baseFixedColumns, {\r\n    _detachHoverEvents: function() {\r\n        this._fixedTableElement && _events_engine2.default.off(this._fixedTableElement, \"mouseover mouseout\", \".dx-data-row\");\r\n        this._tableElement && _events_engine2.default.off(this._tableElement, \"mouseover mouseout\", \".dx-data-row\")\r\n    },\r\n    _attachHoverEvents: function() {\r\n        var that = this;\r\n        var attachHoverEvent = function($table) {\r\n            _events_engine2.default.on($table, \"mouseover mouseout\", \".dx-data-row\", that.createAction(function(args) {\r\n                var event = args.event;\r\n                var rowIndex = that.getRowIndex((0, _renderer2.default)(event.target).closest(\".dx-row\"));\r\n                var isHover = \"mouseover\" === event.type;\r\n                if (rowIndex >= 0) {\r\n                    that._tableElement && that._getRowElements(that._tableElement).eq(rowIndex).toggleClass(HOVER_STATE_CLASS, isHover);\r\n                    that._fixedTableElement && that._getRowElements(that._fixedTableElement).eq(rowIndex).toggleClass(HOVER_STATE_CLASS, isHover)\r\n                }\r\n            }))\r\n        };\r\n        if (that._fixedTableElement && that._tableElement) {\r\n            attachHoverEvent(that._fixedTableElement);\r\n            attachHoverEvent(that._tableElement)\r\n        }\r\n    },\r\n    _findContentElement: function() {\r\n        var that = this;\r\n        var $content;\r\n        var scrollTop;\r\n        var contentClass = that.addWidgetPrefix(CONTENT_CLASS);\r\n        var element = that.element();\r\n        var scrollDelay = _browser2.default.mozilla ? 60 : 0;\r\n        if (element && that._isFixedTableRendering) {\r\n            $content = element.children(\".\" + contentClass);\r\n            var scrollable = that.getScrollable();\r\n            if (!$content.length && scrollable) {\r\n                $content = (0, _renderer2.default)(\"<div>\").addClass(contentClass);\r\n                _events_engine2.default.on($content, \"scroll\", function(e) {\r\n                    clearTimeout(that._fixedScrollTimeout);\r\n                    that._fixedScrollTimeout = setTimeout(function() {\r\n                        scrollTop = (0, _renderer2.default)(e.target).scrollTop();\r\n                        scrollable.scrollTo({\r\n                            y: scrollTop\r\n                        })\r\n                    }, scrollDelay)\r\n                });\r\n                _events_engine2.default.on($content, _wheel2.default.name, function(e) {\r\n                    var $nearestScrollable = (0, _renderer2.default)(e.target).closest(\".dx-scrollable\");\r\n                    if (scrollable && scrollable.$element().is($nearestScrollable)) {\r\n                        scrollTop = scrollable.scrollTop();\r\n                        scrollable.scrollTo({\r\n                            y: scrollTop - e.delta\r\n                        });\r\n                        if (scrollable.scrollTop() > 0 && scrollable.scrollTop() + scrollable.clientHeight() < scrollable.scrollHeight() + that.getScrollbarWidth()) {\r\n                            return false\r\n                        }\r\n                    }\r\n                });\r\n                $content.appendTo(element)\r\n            }\r\n            return $content\r\n        }\r\n        return that.callBase()\r\n    },\r\n    _updateScrollable: function() {\r\n        this.callBase();\r\n        var scrollable = this.getScrollable();\r\n        var scrollTop = scrollable && scrollable.scrollOffset().top;\r\n        this._updateFixedTablePosition(scrollTop)\r\n    },\r\n    _renderContent: function(contentElement, tableElement) {\r\n        if (this._isFixedTableRendering) {\r\n            return contentElement.empty().addClass(this.addWidgetPrefix(CONTENT_CLASS) + \" \" + this.addWidgetPrefix(CONTENT_FIXED_CLASS) + \" \" + POINTER_EVENTS_TARGET_CLASS).append(tableElement)\r\n        }\r\n        return this.callBase(contentElement, tableElement)\r\n    },\r\n    _getGroupCellOptions: function(options) {\r\n        if (this._isFixedTableRendering) {\r\n            return this.callBase((0, _extend.extend)({}, options, {\r\n                columns: this._columnsController.getVisibleColumns()\r\n            }))\r\n        }\r\n        return this.callBase(options)\r\n    },\r\n    _renderGroupedCells: function($row, options) {\r\n        return this.callBase($row, (0, _extend.extend)({}, options, {\r\n            columns: this._columnsController.getVisibleColumns()\r\n        }))\r\n    },\r\n    _renderGroupSummaryCells: function($row, options) {\r\n        if (this._isFixedTableRendering) {\r\n            this.callBase($row, (0, _extend.extend)({}, options, {\r\n                columns: this._columnsController.getVisibleColumns()\r\n            }))\r\n        } else {\r\n            this.callBase($row, options)\r\n        }\r\n    },\r\n    _hasAlignByColumnSummaryItems: function(columnIndex, options) {\r\n        var result = this.callBase.apply(this, arguments);\r\n        var column = options.columns[columnIndex];\r\n        if (options.isFixed) {\r\n            return column.fixed && (result || \"right\" === column.fixedPosition)\r\n        }\r\n        return result && !column.fixed\r\n    },\r\n    _renderGroupSummaryCellsCore: function($groupCell, options, groupCellColSpan, alignByColumnCellCount) {\r\n        var alignByFixedColumnCellCount;\r\n        if (this._isFixedTableRendering) {\r\n            options.isFixed = true;\r\n            alignByFixedColumnCellCount = this._getAlignByColumnCellCount(groupCellColSpan, options);\r\n            options.isFixed = false;\r\n            var startColumnIndex = options.columns.length - alignByFixedColumnCellCount;\r\n            options = (0, _extend.extend)({}, options, {\r\n                columns: this.getFixedColumns()\r\n            });\r\n            var transparentColumnIndex = getTransparentColumnIndex(options.columns);\r\n            if (startColumnIndex < transparentColumnIndex) {\r\n                alignByFixedColumnCellCount -= options.columns[transparentColumnIndex].colspan - 1 || 0;\r\n                groupCellColSpan -= options.columns[transparentColumnIndex].colspan - 1 || 0\r\n            } else {\r\n                if (alignByColumnCellCount > 0) {\r\n                    $groupCell.css(\"visibility\", \"hidden\")\r\n                }\r\n            }\r\n            alignByColumnCellCount = alignByFixedColumnCellCount\r\n        }\r\n        this.callBase($groupCell, options, groupCellColSpan, alignByColumnCellCount)\r\n    },\r\n    _getSummaryCellIndex: function(columnIndex, columns) {\r\n        if (this._isFixedTableRendering) {\r\n            var transparentColumnIndex = getTransparentColumnIndex(columns);\r\n            if (columnIndex > transparentColumnIndex) {\r\n                columnIndex += columns[transparentColumnIndex].colspan - 1\r\n            }\r\n            return columnIndex\r\n        }\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _renderCore: function(change) {\r\n        this._detachHoverEvents();\r\n        this.callBase(change);\r\n        var isFixedColumns = this._isFixedColumns;\r\n        this.element().toggleClass(FIXED_COLUMNS_CLASS, isFixedColumns);\r\n        if (this.option(\"hoverStateEnabled\") && isFixedColumns) {\r\n            this._attachHoverEvents()\r\n        }\r\n    },\r\n    setRowsOpacity: function(columnIndex, value) {\r\n        this.callBase(columnIndex, value);\r\n        var $rows = this._getRowElements(this._fixedTableElement);\r\n        this._setRowsOpacityCore($rows, this.getFixedColumns(), columnIndex, value)\r\n    },\r\n    optionChanged: function(args) {\r\n        var that = this;\r\n        that.callBase(args);\r\n        if (\"hoverStateEnabled\" === args.name && that._isFixedColumns) {\r\n            args.value ? this._attachHoverEvents() : this._detachHoverEvents()\r\n        }\r\n    },\r\n    getCellIndex: function($cell) {\r\n        var $fixedTable = this._fixedTableElement;\r\n        var cellIndex = 0;\r\n        if ($fixedTable && $cell.is(\"td\") && $cell.closest($fixedTable).length) {\r\n            var columns = this.getFixedColumns();\r\n            (0, _iterator.each)(columns, function(index, column) {\r\n                if (index === $cell[0].cellIndex) {\r\n                    return false\r\n                }\r\n                if (column.colspan) {\r\n                    cellIndex += column.colspan;\r\n                    return\r\n                }\r\n                cellIndex++\r\n            });\r\n            return cellIndex\r\n        }\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _updateFixedTablePosition: function(scrollTop, needFocus) {\r\n        if (this._fixedTableElement && this._tableElement) {\r\n            var $focusedElement;\r\n            var editorFactory = this.getController(\"editorFactory\");\r\n            this._fixedTableElement.parent().scrollTop(scrollTop);\r\n            if (needFocus) {\r\n                $focusedElement = editorFactory.focus();\r\n                $focusedElement && editorFactory.focus($focusedElement)\r\n            }\r\n        }\r\n    },\r\n    setScrollerSpacing: function(vWidth, hWidth) {\r\n        var that = this;\r\n        var styles = {\r\n            marginBottom: 0\r\n        };\r\n        var $fixedContent = that.element().children(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS));\r\n        if ($fixedContent.length && that._fixedTableElement) {\r\n            $fixedContent.css(styles);\r\n            that._fixedTableElement.css(styles);\r\n            styles[that.option(\"rtlEnabled\") ? \"marginLeft\" : \"marginRight\"] = vWidth;\r\n            styles.marginBottom = hWidth;\r\n            var useNativeScrolling = that._scrollable && that._scrollable.option(\"useNative\");\r\n            (useNativeScrolling ? $fixedContent : that._fixedTableElement).css(styles)\r\n        }\r\n    },\r\n    _getElasticScrollTop: function(e) {\r\n        var elasticScrollTop = 0;\r\n        var scrollbarWidth = this.getScrollbarWidth(true);\r\n        if (e.scrollOffset.top < 0) {\r\n            elasticScrollTop = -e.scrollOffset.top\r\n        } else {\r\n            if (e.reachedBottom) {\r\n                var scrollableContent = this._findContentElement();\r\n                var scrollableContainer = e.component._container();\r\n                var maxScrollTop = Math.max(scrollableContent.height() + scrollbarWidth - scrollableContainer.height(), 0);\r\n                elasticScrollTop = maxScrollTop - e.scrollOffset.top\r\n            }\r\n        }\r\n        return elasticScrollTop\r\n    },\r\n    _applyElasticScrolling: function(e) {\r\n        if (this._fixedTableElement) {\r\n            var elasticScrollTop = this._getElasticScrollTop(e);\r\n            if (0 !== Math.ceil(elasticScrollTop)) {\r\n                _translator2.default.move(this._fixedTableElement, {\r\n                    top: elasticScrollTop\r\n                })\r\n            } else {\r\n                this._fixedTableElement.css(\"transform\", \"\")\r\n            }\r\n        }\r\n    },\r\n    _handleScroll: function(e) {\r\n        this._updateFixedTablePosition(e.scrollOffset.top, true);\r\n        this._applyElasticScrolling(e);\r\n        this.callBase(e)\r\n    },\r\n    _updateContentPosition: function(isRender) {\r\n        this.callBase.apply(this, arguments);\r\n        if (!isRender) {\r\n            this._updateFixedTablePosition(this._scrollTop)\r\n        }\r\n    },\r\n    _afterRowPrepared: function(e) {\r\n        if (this._isFixedTableRendering) {\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    },\r\n    _scrollToElement: function($element) {\r\n        this.callBase($element, this.getFixedColumnsOffset())\r\n    },\r\n    dispose: function() {\r\n        this.callBase.apply(this, arguments);\r\n        clearTimeout(this._fixedScrollTimeout)\r\n    }\r\n});\r\nvar FooterViewFixedColumnsExtender = baseFixedColumns;\r\nmodule.exports = {\r\n    defaultOptions: function() {\r\n        return {\r\n            columnFixing: {\r\n                enabled: false,\r\n                texts: {\r\n                    fix: _message2.default.format(\"dxDataGrid-columnFixingFix\"),\r\n                    unfix: _message2.default.format(\"dxDataGrid-columnFixingUnfix\"),\r\n                    leftPosition: _message2.default.format(\"dxDataGrid-columnFixingLeftPosition\"),\r\n                    rightPosition: _message2.default.format(\"dxDataGrid-columnFixingRightPosition\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewFixedColumnsExtender,\r\n            rowsView: RowsViewFixedColumnsExtender,\r\n            footerView: FooterViewFixedColumnsExtender\r\n        },\r\n        controllers: function() {\r\n            var normalizeColumnIndicesByPoints = function(columns, fixedColumns, pointsByColumns) {\r\n                var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n                var correctIndex = columns.length - fixedColumns.length;\r\n                (0, _iterator.each)(pointsByColumns, function(_, point) {\r\n                    if (point.index > transparentColumnIndex) {\r\n                        point.columnIndex += correctIndex;\r\n                        point.index += correctIndex\r\n                    }\r\n                });\r\n                return pointsByColumns\r\n            };\r\n            return {\r\n                draggingHeader: {\r\n                    _generatePointsByColumns: function(options) {\r\n                        var visibleColumns = options.columns;\r\n                        var targetDraggingPanel = options.targetDraggingPanel;\r\n                        if (targetDraggingPanel && \"headers\" === targetDraggingPanel.getName() && targetDraggingPanel.isFixedColumns()) {\r\n                            if (options.sourceColumn.fixed) {\r\n                                if (!options.rowIndex) {\r\n                                    options.columnElements = targetDraggingPanel.getFixedColumnElements(0)\r\n                                }\r\n                                options.columns = targetDraggingPanel.getFixedColumns(options.rowIndex);\r\n                                var pointsByColumns = this.callBase(options);\r\n                                normalizeColumnIndicesByPoints(visibleColumns, options.columns, pointsByColumns);\r\n                                return pointsByColumns\r\n                            }\r\n                        }\r\n                        return this.callBase(options)\r\n                    },\r\n                    _pointCreated: function(point, columns, location, sourceColumn) {\r\n                        var result = this.callBase.apply(this, arguments);\r\n                        var $transparentColumn = this._columnHeadersView.getTransparentColumnElement();\r\n                        if (!result && \"headers\" === location && $transparentColumn && $transparentColumn.length) {\r\n                            var boundingRect = (0, _position.getBoundingRect)($transparentColumn.get(0));\r\n                            if (sourceColumn && sourceColumn.fixed) {\r\n                                return \"right\" === sourceColumn.fixedPosition ? point.x < boundingRect.right : point.x > boundingRect.left\r\n                            } else {\r\n                                return point.x < boundingRect.left || point.x > boundingRect.right\r\n                            }\r\n                        }\r\n                        return result\r\n                    }\r\n                },\r\n                columnsResizer: {\r\n                    _generatePointsByColumns: function() {\r\n                        var that = this;\r\n                        var columnsController = that._columnsController;\r\n                        var columns = columnsController && that._columnsController.getVisibleColumns();\r\n                        var fixedColumns = columnsController && that._columnsController.getFixedColumns();\r\n                        var cells = that._columnHeadersView.getFixedColumnElements();\r\n                        var pointsByFixedColumns = [];\r\n                        that.callBase();\r\n                        if (cells && cells.length > 0) {\r\n                            pointsByFixedColumns = _uiGrid_core2.default.getPointsByColumns(cells, function(point) {\r\n                                return that._pointCreated(point, cells.length, fixedColumns)\r\n                            });\r\n                            that._pointsByFixedColumns = normalizeColumnIndicesByPoints(columns, fixedColumns, pointsByFixedColumns)\r\n                        }\r\n                    },\r\n                    _pointCreated: function(point, cellsLength, columns) {\r\n                        var isWidgetResizingMode = \"widget\" === this.option(\"columnResizingMode\");\r\n                        if (point.index > 0 && point.index < cellsLength) {\r\n                            var currentColumn = columns[point.columnIndex - 1] || {};\r\n                            var nextColumn = columns[point.columnIndex] || {};\r\n                            if (currentColumn.fixed || nextColumn.fixed) {\r\n                                point.columnIndex -= 1;\r\n                                return !((currentColumn.allowResizing || currentColumn.command === COMMAND_TRANSPARENT) && (isWidgetResizingMode || nextColumn.allowResizing || nextColumn.command === COMMAND_TRANSPARENT))\r\n                            }\r\n                        }\r\n                        return this.callBase.apply(this, arguments)\r\n                    },\r\n                    _getTargetPoint: function(pointsByColumns, currentX, deltaX) {\r\n                        var $transparentColumn = this._columnHeadersView.getTransparentColumnElement();\r\n                        if ($transparentColumn && $transparentColumn.length) {\r\n                            var boundingRect = (0, _position.getBoundingRect)($transparentColumn.get(0));\r\n                            if (currentX <= boundingRect.left || currentX >= boundingRect.right) {\r\n                                return this.callBase(this._pointsByFixedColumns, currentX, deltaX)\r\n                            }\r\n                        }\r\n                        return this.callBase(pointsByColumns, currentX, deltaX)\r\n                    }\r\n                }\r\n            }\r\n        }()\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}