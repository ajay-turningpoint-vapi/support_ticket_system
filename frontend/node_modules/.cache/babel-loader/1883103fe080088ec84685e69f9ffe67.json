{"ast":null,"code":"/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.columns_resizing_reordering.js)\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _renderer = require(\"../../core/renderer\");\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _dom_adapter = require(\"../../core/dom_adapter\");\n\nvar _dom_adapter2 = _interopRequireDefault(_dom_adapter);\n\nvar _events_engine = require(\"../../events/core/events_engine\");\n\nvar _events_engine2 = _interopRequireDefault(_events_engine);\n\nvar _callbacks = require(\"../../core/utils/callbacks\");\n\nvar _callbacks2 = _interopRequireDefault(_callbacks);\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _type2 = _interopRequireDefault(_type);\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _position = require(\"../../core/utils/position\");\n\nvar _utils = require(\"../../events/utils\");\n\nvar _pointer = require(\"../../events/pointer\");\n\nvar _pointer2 = _interopRequireDefault(_pointer);\n\nvar _drag = require(\"../../events/drag\");\n\nvar _drag2 = _interopRequireDefault(_drag);\n\nvar _uiGrid_core = require(\"./ui.grid_core.modules\");\n\nvar _uiGrid_core2 = _interopRequireDefault(_uiGrid_core);\n\nvar _uiGrid_core3 = require(\"./ui.grid_core.utils\");\n\nvar _uiGrid_core4 = _interopRequireDefault(_uiGrid_core3);\n\nvar _fx = require(\"../../animation/fx\");\n\nvar _fx2 = _interopRequireDefault(_fx);\n\nvar _swatch_container = require(\"../widget/swatch_container\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar COLUMNS_SEPARATOR_CLASS = \"columns-separator\";\nvar COLUMNS_SEPARATOR_TRANSPARENT = \"columns-separator-transparent\";\nvar DRAGGING_HEADER_CLASS = \"drag-header\";\nvar CELL_CONTENT_CLASS = \"text-content\";\nvar HEADERS_DRAG_ACTION_CLASS = \"drag-action\";\nvar TRACKER_CLASS = \"tracker\";\nvar HEADERS_DROP_HIGHLIGHT_CLASS = \"drop-highlight\";\nvar BLOCK_SEPARATOR_CLASS = \"dx-block-separator\";\nvar HEADER_ROW_CLASS = \"dx-header-row\";\nvar WIDGET_CLASS = \"dx-widget\";\nvar DRAGGING_COMMAND_CELL_CLASS = \"dx-drag-command-cell\";\nvar MODULE_NAMESPACE = \"dxDataGridResizingReordering\";\nvar COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH = 10;\nvar DRAGGING_DELTA = 5;\nvar COLUMN_OPACITY = .5;\n\nvar allowResizing = function (that) {\n  return that.option(\"allowColumnResizing\") || that.getController(\"columns\").isColumnOptionUsed(\"allowResizing\");\n};\n\nvar allowReordering = function (that) {\n  return that.option(\"allowColumnReordering\") || that.getController(\"columns\").isColumnOptionUsed(\"allowReordering\");\n};\n\nvar TrackerView = _uiGrid_core2.default.View.inherit({\n  _renderCore: function () {\n    this.callBase();\n    this.element().addClass(this.addWidgetPrefix(TRACKER_CLASS));\n    this.hide();\n  },\n  _unsubscribeFromCallback: function () {\n    if (this._positionChanged) {\n      this._tablePositionController.positionChanged.remove(this._positionChanged);\n    }\n  },\n  _subscribeToCallback: function () {\n    var that = this;\n\n    that._positionChanged = function (position) {\n      var $element = that.element();\n\n      if ($element && $element.hasClass(that.addWidgetPrefix(TRACKER_CLASS))) {\n        $element.css({\n          top: position.top\n        });\n        $element.height(position.height);\n      }\n    };\n\n    this._tablePositionController.positionChanged.add(that._positionChanged);\n  },\n  optionChanged: function (args) {\n    if (\"allowColumnResizing\" === args.name) {\n      this._unsubscribeFromCallback();\n\n      if (args.value) {\n        this._subscribeToCallback();\n\n        this._invalidate();\n      }\n    }\n\n    this.callBase(args);\n  },\n  init: function () {\n    this.callBase();\n    this._tablePositionController = this.getController(\"tablePosition\");\n\n    this._subscribeToCallback();\n  },\n  isVisible: function () {\n    return allowResizing(this);\n  },\n  show: function () {\n    this.element().show();\n  },\n  hide: function () {\n    this.element() && this.element().hide();\n  },\n  setHeight: function (value) {\n    this.element().height(value);\n  },\n  dispose: function () {\n    this._unsubscribeFromCallback();\n\n    this.callBase();\n  }\n});\n\nvar SeparatorView = _uiGrid_core2.default.View.inherit({\n  _renderSeparator: function () {},\n  _renderCore: function (options) {\n    this.callBase(options);\n    this._isShown = true;\n\n    this._renderSeparator();\n\n    this.hide();\n  },\n  show: function () {\n    this._isShown = true;\n  },\n  hide: function () {\n    this._isShown = false;\n  },\n  height: function (value) {\n    var $element = this.element();\n\n    if ($element) {\n      if (_type2.default.isDefined(value)) {\n        $element.height(value);\n      } else {\n        return $element.height();\n      }\n    }\n  },\n  width: function (value) {\n    var $element = this.element();\n\n    if ($element) {\n      if (_type2.default.isDefined(value)) {\n        $element.width(value);\n      } else {\n        return $element.width();\n      }\n    }\n  }\n});\n\nvar ColumnsSeparatorView = SeparatorView.inherit({\n  _renderSeparator: function () {\n    this.callBase();\n    var $element = this.element();\n    $element.addClass(this.addWidgetPrefix(COLUMNS_SEPARATOR_CLASS));\n  },\n  _subscribeToCallback: function () {\n    var that = this;\n    var $element;\n\n    that._positionChanged = function (position) {\n      $element = that.element();\n\n      if ($element) {\n        $element.css({\n          top: position.top\n        });\n        $element.height(position.height);\n      }\n    };\n\n    that._tablePositionController.positionChanged.add(that._positionChanged);\n  },\n  _unsubscribeFromCallback: function () {\n    this._positionChanged && this._tablePositionController.positionChanged.remove(this._positionChanged);\n  },\n  _init: function () {\n    this._isTransparent = allowResizing(this);\n\n    if (this.isVisible()) {\n      this._subscribeToCallback();\n    }\n  },\n  isVisible: function () {\n    return this.option(\"showColumnHeaders\") && (allowReordering(this) || allowResizing(this));\n  },\n  optionChanged: function (args) {\n    if (\"allowColumnResizing\" === args.name) {\n      if (args.value) {\n        this._init();\n\n        this._invalidate();\n\n        this.hide(true);\n      } else {\n        this._unsubscribeFromCallback();\n\n        this._isTransparent = allowResizing(this);\n        this.hide(true);\n      }\n    }\n\n    this.callBase(args);\n  },\n  init: function () {\n    this.callBase();\n    this._tablePositionController = this.getController(\"tablePosition\");\n\n    this._init();\n  },\n  show: function () {\n    var that = this;\n    var $element = this.element();\n\n    if ($element && !that._isShown) {\n      if (that._isTransparent) {\n        $element.removeClass(that.addWidgetPrefix(COLUMNS_SEPARATOR_TRANSPARENT));\n      } else {\n        $element.show();\n      }\n    }\n\n    this.callBase();\n  },\n  hide: function (force) {\n    var $element = this.element();\n    var columnsSeparatorTransparent = this.addWidgetPrefix(COLUMNS_SEPARATOR_TRANSPARENT);\n\n    if ($element && (this._isShown || force)) {\n      if (this._isTransparent) {\n        $element.addClass(columnsSeparatorTransparent);\n        $element.css(\"left\", \"\");\n        $element.show();\n      } else {\n        if ($element.hasClass(columnsSeparatorTransparent)) {\n          $element.removeClass(columnsSeparatorTransparent);\n        }\n\n        $element.hide();\n      }\n    }\n\n    this.callBase();\n  },\n  moveByX: function (outerX) {\n    var $element = this.element();\n\n    if ($element) {\n      $element.css(\"left\", outerX - this._parentElement().offset().left);\n    }\n  },\n  changeCursor: function (cursorName) {\n    cursorName = _type2.default.isDefined(cursorName) ? cursorName : \"\";\n    var $element = this.element();\n\n    if ($element) {\n      $element.css(\"cursor\", cursorName);\n    }\n  },\n  dispose: function () {\n    this._unsubscribeFromCallback();\n\n    this.callBase();\n  }\n});\nvar BlockSeparatorView = SeparatorView.inherit({\n  init: function () {\n    var that = this;\n    this.callBase();\n    this.getController(\"data\").loadingChanged.add(function (isLoading) {\n      if (!isLoading) {\n        that.hide();\n      }\n    });\n  },\n  _renderSeparator: function () {\n    this.callBase();\n    this.element().addClass(BLOCK_SEPARATOR_CLASS).html(\"&nbsp;\");\n  },\n  hide: function () {\n    var that = this;\n\n    var $parent = this._parentElement();\n\n    var $element = this.element();\n\n    if ($element && this._isShown) {\n      $element.css(\"display\", \"none\");\n    }\n\n    if ($parent && !$parent.children(\".\" + BLOCK_SEPARATOR_CLASS).length) {\n      $parent.prepend(that.element());\n    }\n\n    that.callBase();\n  },\n  isVisible: function () {\n    var groupPanelOptions = this.option(\"groupPanel\");\n    var columnChooserOptions = this.option(\"columnChooser\");\n    return groupPanelOptions && groupPanelOptions.visible || columnChooserOptions && columnChooserOptions.enabled;\n  },\n  show: function (targetLocation) {\n    var that = this;\n    var $element = this.element();\n\n    var startAnimate = function (toOptions) {\n      _fx2.default.stop($element, true);\n\n      _fx2.default.animate($element, {\n        type: \"slide\",\n        from: {\n          width: 0,\n          display: toOptions.display\n        },\n        to: toOptions,\n        duration: 300,\n        easing: \"swing\"\n      });\n    };\n\n    if ($element && !that._isShown) {\n      switch (targetLocation) {\n        case \"group\":\n          startAnimate({\n            width: \"50px\",\n            display: \"inline-block\"\n          });\n          break;\n\n        case \"columnChooser\":\n          startAnimate({\n            width: \"100%\",\n            display: \"block\"\n          });\n          break;\n\n        default:\n          $element.css(\"display\", \"\");\n      }\n    }\n\n    that.callBase();\n  }\n});\n\nvar DraggingHeaderView = _uiGrid_core2.default.View.inherit({\n  _isDragging: false,\n  isDragging: function () {\n    return this._isDragging;\n  },\n  _getDraggingPanelByPos: function (pos) {\n    var that = this;\n    var result;\n    (0, _iterator.each)(that._dragOptions.draggingPanels, function (index, draggingPanel) {\n      if (draggingPanel) {\n        var boundingRect = draggingPanel.getBoundingRect();\n\n        if (boundingRect && (void 0 === boundingRect.bottom || pos.y < boundingRect.bottom) && (void 0 === boundingRect.top || pos.y > boundingRect.top) && (void 0 === boundingRect.left || pos.x > boundingRect.left) && (void 0 === boundingRect.right || pos.x < boundingRect.right)) {\n          result = draggingPanel;\n          return false;\n        }\n      }\n    });\n    return result;\n  },\n  _renderCore: function () {\n    this.element().addClass(this.addWidgetPrefix(DRAGGING_HEADER_CLASS) + \" \" + this.addWidgetPrefix(CELL_CONTENT_CLASS) + \" \" + WIDGET_CLASS).hide();\n  },\n  _resetTargetColumnOptions: function () {\n    var params = this._dropOptions;\n    params.targetColumnIndex = -1;\n    delete params.targetColumnElement;\n    delete params.isLast;\n    delete params.posX;\n    delete params.posY;\n  },\n  _getVisibleIndexObject: function (rowIndex, visibleIndex) {\n    if (_type2.default.isDefined(rowIndex)) {\n      return {\n        columnIndex: visibleIndex,\n        rowIndex: rowIndex\n      };\n    }\n\n    return visibleIndex;\n  },\n  dispose: function () {\n    var element = this.element();\n    this._dragOptions = null;\n    element && element.parent().find(\".\" + this.addWidgetPrefix(DRAGGING_HEADER_CLASS)).remove();\n  },\n  isVisible: function () {\n    var columnsController = this.getController(\"columns\");\n    var commonColumnSettings = columnsController.getCommonSettings();\n    return this.option(\"showColumnHeaders\") && (allowReordering(this) || commonColumnSettings.allowGrouping || commonColumnSettings.allowHiding);\n  },\n  init: function () {\n    var that = this;\n    this.callBase();\n    this._controller = this.getController(\"draggingHeader\");\n    this._columnsResizerViewController = this.getController(\"columnsResizer\");\n    this.getController(\"data\").loadingChanged.add(function (isLoading) {\n      var element = that.element();\n\n      if (!isLoading && element) {\n        element.hide();\n      }\n    });\n  },\n  dragHeader: function (options) {\n    var that = this;\n    var columnElement = options.columnElement;\n    var isCommandColumn = !!options.sourceColumn.type;\n    that._isDragging = true;\n    that._dragOptions = options;\n    that._dropOptions = {\n      sourceIndex: options.index,\n      sourceColumnIndex: that._getVisibleIndexObject(options.rowIndex, options.columnIndex),\n      sourceColumnElement: options.columnElement,\n      sourceLocation: options.sourceLocation\n    };\n\n    var document = _dom_adapter2.default.getDocument();\n\n    that._onSelectStart = document.onselectstart;\n\n    document.onselectstart = function () {\n      return false;\n    };\n\n    that._controller.drag(that._dropOptions);\n\n    that.element().css({\n      textAlign: columnElement && columnElement.css(\"textAlign\"),\n      height: columnElement && (isCommandColumn && columnElement.get(0).clientHeight || columnElement.height()),\n      width: columnElement && (isCommandColumn && columnElement.get(0).clientWidth || columnElement.width()),\n      whiteSpace: columnElement && columnElement.css(\"whiteSpace\")\n    }).addClass(that.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS)).toggleClass(DRAGGING_COMMAND_CELL_CLASS, isCommandColumn).text(isCommandColumn ? \"\" : options.sourceColumn.caption);\n    that.element().appendTo((0, _swatch_container.getSwatchContainer)(columnElement));\n  },\n  moveHeader: function (args) {\n    var e = args.event;\n    var that = e.data.that;\n    var eventData = (0, _utils.eventData)(e);\n    var isResizing = that._columnsResizerViewController ? that._columnsResizerViewController.isResizing() : false;\n    var dragOptions = that._dragOptions;\n\n    if (that._isDragging && !isResizing) {\n      var $element = that.element();\n      var moveDeltaX = Math.abs(eventData.x - dragOptions.columnElement.offset().left - dragOptions.deltaX);\n      var moveDeltaY = Math.abs(eventData.y - dragOptions.columnElement.offset().top - dragOptions.deltaY);\n\n      if ($element.is(\":visible\") || moveDeltaX > DRAGGING_DELTA || moveDeltaY > DRAGGING_DELTA) {\n        $element.show();\n        var newLeft = eventData.x - dragOptions.deltaX;\n        var newTop = eventData.y - dragOptions.deltaY;\n        $element.css({\n          left: newLeft,\n          top: newTop\n        });\n        that.dockHeader(eventData);\n      }\n\n      e.preventDefault();\n    }\n  },\n  dockHeader: function (eventData) {\n    var that = this;\n\n    var targetDraggingPanel = that._getDraggingPanelByPos(eventData);\n\n    var controller = that._controller;\n    var params = that._dropOptions;\n    var dragOptions = that._dragOptions;\n\n    if (targetDraggingPanel) {\n      var rtlEnabled = that.option(\"rtlEnabled\");\n      var isVerticalOrientation = \"columnChooser\" === targetDraggingPanel.getName();\n      var axisName = isVerticalOrientation ? \"y\" : \"x\";\n      var targetLocation = targetDraggingPanel.getName();\n      var rowIndex = \"headers\" === targetLocation ? dragOptions.rowIndex : void 0;\n      var sourceColumn = dragOptions.sourceColumn;\n      var columnElements = targetDraggingPanel.getColumnElements(rowIndex, sourceColumn && sourceColumn.ownerBand) || [];\n      var pointsByTarget = dragOptions.pointsByTarget = dragOptions.pointsByTarget || {};\n      var pointsByColumns = \"columnChooser\" === targetLocation ? [] : pointsByTarget[targetLocation] || controller._generatePointsByColumns((0, _extend.extend)({}, dragOptions, {\n        targetDraggingPanel: targetDraggingPanel,\n        columns: targetDraggingPanel.getColumns(rowIndex),\n        columnElements: columnElements,\n        isVerticalOrientation: isVerticalOrientation,\n        startColumnIndex: \"headers\" === targetLocation && (0, _renderer2.default)(columnElements[0]).index()\n      }));\n      pointsByTarget[targetLocation] = pointsByColumns;\n      params.targetLocation = targetLocation;\n\n      if (pointsByColumns.length > 0) {\n        for (var i = 0; i < pointsByColumns.length; i++) {\n          var centerPosition = pointsByColumns[i + 1] && (pointsByColumns[i][axisName] + pointsByColumns[i + 1][axisName]) / 2;\n\n          if (void 0 === centerPosition || (rtlEnabled && \"x\" === axisName ? eventData[axisName] > centerPosition : eventData[axisName] < centerPosition)) {\n            params.targetColumnIndex = that._getVisibleIndexObject(rowIndex, pointsByColumns[i].columnIndex);\n\n            if (columnElements[i]) {\n              params.targetColumnElement = columnElements.eq(i);\n              params.isLast = false;\n            } else {\n              params.targetColumnElement = columnElements.last();\n              params.isLast = true;\n            }\n\n            params.posX = pointsByColumns[i].x;\n            params.posY = pointsByColumns[i].y;\n            controller.dock(params);\n            break;\n          }\n        }\n      } else {\n        that._resetTargetColumnOptions();\n\n        controller.dock(params);\n      }\n    }\n  },\n  dropHeader: function (args) {\n    var e = args.event;\n    var that = e.data.that;\n    var controller = that._controller;\n    that.element().hide();\n\n    if (controller && that._isDragging) {\n      controller.drop(that._dropOptions);\n    }\n\n    that.element().appendTo(that._parentElement());\n    that._dragOptions = null;\n    that._dropOptions = null;\n    that._isDragging = false;\n    _dom_adapter2.default.getDocument().onselectstart = that._onSelectStart || null;\n  }\n});\n\nvar isNextColumnResizingMode = function (that) {\n  return \"widget\" !== that.option(\"columnResizingMode\");\n};\n\nvar ColumnsResizerViewController = _uiGrid_core2.default.ViewController.inherit({\n  _isHeadersRowArea: function (posY) {\n    if (this._columnHeadersView) {\n      var element = this._columnHeadersView.element();\n\n      if (element) {\n        var offsetTop = element.offset().top;\n\n        var headersRowHeight = this._columnHeadersView.getHeadersRowHeight();\n\n        return posY >= offsetTop && posY <= offsetTop + headersRowHeight;\n      }\n    }\n\n    return false;\n  },\n  _isRtlParentStyle: function () {\n    var _this$_$parentContain;\n\n    return this.option(\"rtlEnabled\") && \"rtl\" === (null === (_this$_$parentContain = this._$parentContainer) || void 0 === _this$_$parentContain ? void 0 : _this$_$parentContain.parent().css(\"direction\"));\n  },\n  _pointCreated: function (point, cellsLength, columns) {\n    var isNextColumnMode = isNextColumnResizingMode(this);\n    var rtlEnabled = this.option(\"rtlEnabled\");\n\n    var isRtlParentStyle = this._isRtlParentStyle();\n\n    var firstPointColumnIndex = !isNextColumnMode && rtlEnabled && !isRtlParentStyle ? 0 : 1;\n\n    if (point.index >= firstPointColumnIndex && point.index < cellsLength + (!isNextColumnMode && (!rtlEnabled || isRtlParentStyle) ? 1 : 0)) {\n      point.columnIndex -= firstPointColumnIndex;\n      var currentColumn = columns[point.columnIndex] || {};\n      var nextColumn = columns[point.columnIndex + 1] || {};\n      return !(isNextColumnMode ? currentColumn.allowResizing && nextColumn.allowResizing : currentColumn.allowResizing);\n    }\n\n    return true;\n  },\n  _getTargetPoint: function (pointsByColumns, currentX, deltaX) {\n    if (pointsByColumns) {\n      for (var i = 0; i < pointsByColumns.length; i++) {\n        if (pointsByColumns[i].x === pointsByColumns[0].x && pointsByColumns[i + 1] && pointsByColumns[i].x === pointsByColumns[i + 1].x) {\n          continue;\n        }\n\n        if (pointsByColumns[i].x - deltaX <= currentX && currentX <= pointsByColumns[i].x + deltaX) {\n          return pointsByColumns[i];\n        }\n      }\n    }\n\n    return null;\n  },\n  _moveSeparator: function (args) {\n    var e = args.event;\n    var that = e.data;\n\n    var columnsSeparatorWidth = that._columnsSeparatorView.width();\n\n    var isNextColumnMode = isNextColumnResizingMode(that);\n    var deltaX = columnsSeparatorWidth / 2;\n\n    var parentOffset = that._$parentContainer.offset();\n\n    var parentOffsetLeft = parentOffset.left;\n    var eventData = (0, _utils.eventData)(e);\n    var rtlEnabled = that.option(\"rtlEnabled\");\n\n    var isRtlParentStyle = this._isRtlParentStyle();\n\n    if (that._isResizing && that._resizingInfo) {\n      if ((parentOffsetLeft <= eventData.x || !isNextColumnMode && isRtlParentStyle) && (!isNextColumnMode || eventData.x <= parentOffsetLeft + that._$parentContainer.width())) {\n        if (that._updateColumnsWidthIfNeeded(eventData.x)) {\n          var $cell = that._columnHeadersView.getColumnElements().eq(that._resizingInfo.currentColumnIndex);\n\n          that._columnsSeparatorView.moveByX($cell.offset().left + ((isNextColumnMode || isRtlParentStyle) && rtlEnabled ? 0 : $cell.outerWidth()));\n\n          that._tablePositionController.update(that._targetPoint.y);\n\n          e.preventDefault();\n        }\n      }\n    } else {\n      if (that._isHeadersRowArea(eventData.y)) {\n        if (that._previousParentOffset) {\n          if (that._previousParentOffset.left !== parentOffset.left || that._previousParentOffset.top !== parentOffset.top) {\n            that.pointsByColumns(null);\n          }\n        }\n\n        that._targetPoint = that._getTargetPoint(that.pointsByColumns(), eventData.x, columnsSeparatorWidth);\n        that._previousParentOffset = parentOffset;\n        that._isReadyResizing = false;\n\n        if (that._targetPoint) {\n          that._columnsSeparatorView.changeCursor(\"col-resize\");\n\n          that._columnsSeparatorView.moveByX(that._targetPoint.x - deltaX);\n\n          that._tablePositionController.update(that._targetPoint.y);\n\n          that._isReadyResizing = true;\n          e.preventDefault();\n        } else {\n          that._columnsSeparatorView.changeCursor();\n        }\n      } else {\n        that.pointsByColumns(null);\n        that._isReadyResizing = false;\n\n        that._columnsSeparatorView.changeCursor();\n      }\n    }\n  },\n  _endResizing: function (args) {\n    var e = args.event;\n    var that = e.data;\n\n    if (that._isResizing) {\n      that.pointsByColumns(null);\n      that._resizingInfo = null;\n\n      that._columnsSeparatorView.hide();\n\n      that._columnsSeparatorView.changeCursor();\n\n      that._trackerView.hide();\n\n      that._isReadyResizing = false;\n      that._isResizing = false;\n    }\n  },\n  _getNextColumnIndex: function (currentColumnIndex) {\n    return currentColumnIndex + 1;\n  },\n  _setupResizingInfo: function (posX) {\n    var that = this;\n    var currentColumnIndex = that._targetPoint.columnIndex;\n\n    var nextColumnIndex = that._getNextColumnIndex(currentColumnIndex);\n\n    var currentHeader = that._columnHeadersView.getHeaderElement(currentColumnIndex);\n\n    var nextHeader = that._columnHeadersView.getHeaderElement(nextColumnIndex);\n\n    that._resizingInfo = {\n      startPosX: posX,\n      currentColumnIndex: currentColumnIndex,\n      currentColumnWidth: currentHeader && currentHeader.length > 0 ? (0, _position.getBoundingRect)(currentHeader[0]).width : 0,\n      nextColumnIndex: nextColumnIndex,\n      nextColumnWidth: nextHeader && nextHeader.length > 0 ? (0, _position.getBoundingRect)(nextHeader[0]).width : 0\n    };\n  },\n  _startResizing: function (args) {\n    var e = args.event;\n    var that = e.data;\n    var eventData = (0, _utils.eventData)(e);\n\n    if ((0, _utils.isTouchEvent)(e)) {\n      if (that._isHeadersRowArea(eventData.y)) {\n        that._targetPoint = that._getTargetPoint(that.pointsByColumns(), eventData.x, COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH);\n\n        if (that._targetPoint) {\n          that._columnsSeparatorView.moveByX(that._targetPoint.x - that._columnsSeparatorView.width() / 2);\n\n          that._isReadyResizing = true;\n        }\n      } else {\n        that._isReadyResizing = false;\n      }\n    }\n\n    if (that._isReadyResizing) {\n      that._setupResizingInfo(eventData.x);\n\n      that._isResizing = true;\n\n      that._tablePositionController.update(that._targetPoint.y);\n\n      that._columnsSeparatorView.show();\n\n      that._trackerView.show();\n\n      var scrollable = that.component.getScrollable();\n\n      if (scrollable && that._isRtlParentStyle()) {\n        that._scrollRight = scrollable.$content().width() - scrollable._container().width() - scrollable.scrollLeft();\n      }\n\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    if (this.isResizing()) {\n      this.getController(\"editorFactory\").loseFocus();\n    }\n  },\n  _generatePointsByColumns: function () {\n    var that = this;\n    var columns = that._columnsController ? that._columnsController.getVisibleColumns() : [];\n\n    var cells = that._columnHeadersView.getColumnElements();\n\n    var pointsByColumns = [];\n\n    if (cells && cells.length > 0) {\n      pointsByColumns = _uiGrid_core4.default.getPointsByColumns(cells, function (point) {\n        return that._pointCreated(point, cells.length, columns);\n      });\n    }\n\n    that._pointsByColumns = pointsByColumns;\n  },\n  _unsubscribeFromEvents: function () {\n    this._moveSeparatorHandler && _events_engine2.default.off(_dom_adapter2.default.getDocument(), (0, _utils.addNamespace)(_pointer2.default.move, MODULE_NAMESPACE), this._moveSeparatorHandler);\n    this._startResizingHandler && _events_engine2.default.off(this._$parentContainer, (0, _utils.addNamespace)(_pointer2.default.down, MODULE_NAMESPACE), this._startResizingHandler);\n\n    if (this._endResizingHandler) {\n      _events_engine2.default.off(this._columnsSeparatorView.element(), (0, _utils.addNamespace)(_pointer2.default.up, MODULE_NAMESPACE), this._endResizingHandler);\n\n      _events_engine2.default.off(_dom_adapter2.default.getDocument(), (0, _utils.addNamespace)(_pointer2.default.up, MODULE_NAMESPACE), this._endResizingHandler);\n    }\n  },\n  _subscribeToEvents: function () {\n    this._moveSeparatorHandler = this.createAction(this._moveSeparator);\n    this._startResizingHandler = this.createAction(this._startResizing);\n    this._endResizingHandler = this.createAction(this._endResizing);\n\n    _events_engine2.default.on(_dom_adapter2.default.getDocument(), (0, _utils.addNamespace)(_pointer2.default.move, MODULE_NAMESPACE), this, this._moveSeparatorHandler);\n\n    _events_engine2.default.on(this._$parentContainer, (0, _utils.addNamespace)(_pointer2.default.down, MODULE_NAMESPACE), this, this._startResizingHandler);\n\n    _events_engine2.default.on(this._columnsSeparatorView.element(), (0, _utils.addNamespace)(_pointer2.default.up, MODULE_NAMESPACE), this, this._endResizingHandler);\n\n    _events_engine2.default.on(_dom_adapter2.default.getDocument(), (0, _utils.addNamespace)(_pointer2.default.up, MODULE_NAMESPACE), this, this._endResizingHandler);\n  },\n  _updateColumnsWidthIfNeeded: function (posX) {\n    var deltaX;\n    var needUpdate = false;\n    var nextCellWidth;\n    var resizingInfo = this._resizingInfo;\n    var columnsController = this._columnsController;\n    var visibleColumns = columnsController.getVisibleColumns();\n\n    var columnsSeparatorWidth = this._columnsSeparatorView.width();\n\n    var contentWidth = this._rowsView.contentWidth();\n\n    var isNextColumnMode = isNextColumnResizingMode(this);\n    var adaptColumnWidthByRatio = isNextColumnMode && this.option(\"adaptColumnWidthByRatio\") && !this.option(\"columnAutoWidth\");\n    var minWidth;\n    var nextColumn;\n    var cellWidth;\n    var rtlEnabled = this.option(\"rtlEnabled\");\n\n    var isRtlParentStyle = this._isRtlParentStyle();\n\n    function isPercentWidth(width) {\n      return _type2.default.isString(width) && \"%\" === width.slice(-1);\n    }\n\n    function setColumnWidth(column, columnWidth, contentWidth, adaptColumnWidthByRatio) {\n      if (column) {\n        var oldColumnWidth = column.width;\n\n        if (oldColumnWidth) {\n          adaptColumnWidthByRatio = isPercentWidth(oldColumnWidth);\n        }\n\n        if (adaptColumnWidthByRatio) {\n          column && columnsController.columnOption(column.index, \"visibleWidth\", columnWidth);\n          column && columnsController.columnOption(column.index, \"width\", (columnWidth / contentWidth * 100).toFixed(3) + \"%\");\n        } else {\n          column && columnsController.columnOption(column.index, \"visibleWidth\", null);\n          column && columnsController.columnOption(column.index, \"width\", columnWidth);\n        }\n      }\n    }\n\n    function correctContentWidth(contentWidth, visibleColumns) {\n      var allColumnsHaveWidth = visibleColumns.every(function (column) {\n        return column.width;\n      });\n\n      if (allColumnsHaveWidth) {\n        var totalPercent = visibleColumns.reduce(function (sum, column) {\n          if (isPercentWidth(column.width)) {\n            sum += parseFloat(column.width);\n          }\n\n          return sum;\n        }, 0);\n\n        if (totalPercent > 100) {\n          contentWidth = contentWidth / totalPercent * 100;\n        }\n      }\n\n      return contentWidth;\n    }\n\n    deltaX = posX - resizingInfo.startPosX;\n\n    if ((isNextColumnMode || isRtlParentStyle) && rtlEnabled) {\n      deltaX = -deltaX;\n    }\n\n    cellWidth = resizingInfo.currentColumnWidth + deltaX;\n    var column = visibleColumns[resizingInfo.currentColumnIndex];\n    minWidth = column && column.minWidth || columnsSeparatorWidth;\n    needUpdate = cellWidth >= minWidth;\n\n    if (isNextColumnMode) {\n      nextCellWidth = resizingInfo.nextColumnWidth - deltaX;\n      nextColumn = visibleColumns[resizingInfo.nextColumnIndex];\n      minWidth = nextColumn && nextColumn.minWidth || columnsSeparatorWidth;\n      needUpdate = needUpdate && nextCellWidth >= minWidth;\n    }\n\n    if (needUpdate) {\n      columnsController.beginUpdate();\n      cellWidth = Math.floor(cellWidth);\n      contentWidth = correctContentWidth(contentWidth, visibleColumns);\n      setColumnWidth(column, cellWidth, contentWidth, adaptColumnWidthByRatio);\n\n      if (isNextColumnMode) {\n        nextCellWidth = Math.floor(nextCellWidth);\n        setColumnWidth(nextColumn, nextCellWidth, contentWidth, adaptColumnWidthByRatio);\n      } else {\n        var columnWidths = this._columnHeadersView.getColumnWidths();\n\n        columnWidths[resizingInfo.currentColumnIndex] = cellWidth;\n\n        var hasScroll = columnWidths.reduce(function (totalWidth, width) {\n          return totalWidth + width;\n        }, 0) > this._rowsView.contentWidth();\n\n        if (!hasScroll) {\n          var lastColumnIndex = _uiGrid_core4.default.getLastResizableColumnIndex(visibleColumns);\n\n          if (lastColumnIndex >= 0) {\n            columnsController.columnOption(visibleColumns[lastColumnIndex].index, \"visibleWidth\", \"auto\");\n          }\n        }\n\n        for (var i = 0; i < columnWidths.length; i++) {\n          if (visibleColumns[i] && visibleColumns[i] !== column && void 0 === visibleColumns[i].width) {\n            columnsController.columnOption(visibleColumns[i].index, \"width\", columnWidths[i]);\n          }\n        }\n      }\n\n      columnsController.endUpdate();\n\n      if (!isNextColumnMode) {\n        this.component.updateDimensions();\n        var scrollable = this.component.getScrollable();\n\n        if (scrollable && isRtlParentStyle) {\n          var left = scrollable.$content().width() - scrollable._container().width() - this._scrollRight;\n\n          scrollable.scrollTo({\n            left: left\n          });\n        }\n      }\n    }\n\n    return needUpdate;\n  },\n  _subscribeToCallback: function (callback, handler) {\n    callback.add(handler);\n\n    this._subscribesToCallbacks.push({\n      callback: callback,\n      handler: handler\n    });\n  },\n  _unsubscribeFromCallbacks: function () {\n    for (var i = 0; i < this._subscribesToCallbacks.length; i++) {\n      var subscribe = this._subscribesToCallbacks[i];\n      subscribe.callback.remove(subscribe.handler);\n    }\n\n    this._subscribesToCallbacks = [];\n  },\n  _unsubscribes: function () {\n    this._unsubscribeFromEvents();\n\n    this._unsubscribeFromCallbacks();\n  },\n  _init: function () {\n    var that = this;\n\n    var generatePointsByColumnsHandler = function () {\n      if (!that._isResizing) {\n        that.pointsByColumns(null);\n      }\n    };\n\n    var generatePointsByColumnsScrollHandler = function (offset) {\n      if (that._scrollLeft !== offset.left) {\n        that._scrollLeft = offset.left;\n        that.pointsByColumns(null);\n      }\n    };\n\n    that._columnsSeparatorView = that.getView(\"columnsSeparatorView\");\n    that._columnHeadersView = that.getView(\"columnHeadersView\");\n    that._trackerView = that.getView(\"trackerView\");\n    that._rowsView = that.getView(\"rowsView\");\n    that._columnsController = that.getController(\"columns\");\n    that._tablePositionController = that.getController(\"tablePosition\");\n    that._$parentContainer = that.component.$element();\n\n    that._subscribeToCallback(that._columnHeadersView.renderCompleted, generatePointsByColumnsHandler);\n\n    that._subscribeToCallback(that._columnHeadersView.resizeCompleted, generatePointsByColumnsHandler);\n\n    that._subscribeToCallback(that._columnsSeparatorView.renderCompleted, function () {\n      that._unsubscribeFromEvents();\n\n      that._subscribeToEvents();\n    });\n\n    that._subscribeToCallback(that._rowsView.renderCompleted, function () {\n      that._rowsView.scrollChanged.remove(generatePointsByColumnsScrollHandler);\n\n      that._rowsView.scrollChanged.add(generatePointsByColumnsScrollHandler);\n    });\n\n    var previousScrollbarVisibility = 0 !== that._rowsView.getScrollbarWidth();\n\n    var previousTableHeight = 0;\n\n    that._subscribeToCallback(that.getController(\"tablePosition\").positionChanged, function (e) {\n      if (that._isResizing && !that._rowsView.isResizing) {\n        var scrollbarVisibility = 0 !== that._rowsView.getScrollbarWidth();\n\n        if (previousScrollbarVisibility !== scrollbarVisibility || previousTableHeight && previousTableHeight !== e.height) {\n          previousScrollbarVisibility = scrollbarVisibility;\n          previousTableHeight = e.height;\n          that.component.updateDimensions();\n        } else {\n          that._rowsView.updateFreeSpaceRowHeight();\n        }\n      }\n\n      previousTableHeight = e.height;\n    });\n  },\n  optionChanged: function (args) {\n    this.callBase(args);\n\n    if (\"allowColumnResizing\" === args.name) {\n      if (args.value) {\n        this._init();\n\n        this._subscribeToEvents();\n      } else {\n        this._unsubscribes();\n      }\n    }\n  },\n  isResizing: function () {\n    return this._isResizing;\n  },\n  init: function () {\n    this._subscribesToCallbacks = [];\n\n    if (allowResizing(this)) {\n      this._init();\n    }\n  },\n  pointsByColumns: function (value) {\n    if (void 0 !== value) {\n      this._pointsByColumns = value;\n    } else {\n      if (!this._pointsByColumns) {\n        this._generatePointsByColumns();\n      }\n\n      return this._pointsByColumns;\n    }\n  },\n  dispose: function () {\n    this._unsubscribes();\n\n    this.callBase();\n  }\n});\n\nvar TablePositionViewController = _uiGrid_core2.default.ViewController.inherit({\n  update: function (top) {\n    var that = this;\n    var params = {};\n\n    var $element = that._columnHeadersView.element();\n\n    var offset = $element && $element.offset();\n    var offsetTop = offset && offset.top || 0;\n    var diffOffsetTop = _type2.default.isDefined(top) ? Math.abs(top - offsetTop) : 0;\n    var columnsHeadersHeight = that._columnHeadersView ? that._columnHeadersView.getHeight() : 0;\n\n    var scrollBarWidth = that._rowsView.getScrollbarWidth(true);\n\n    var rowsHeight = that._rowsView ? that._rowsView.height() - scrollBarWidth : 0;\n    var columnsResizerController = that.component.getController(\"columnsResizer\");\n    var draggingHeaderView = that.component.getView(\"draggingHeaderView\");\n    params.height = columnsHeadersHeight;\n    var isDraggingOrResizing = false !== columnsResizerController.isResizing() || draggingHeaderView.isDragging();\n\n    if (isDraggingOrResizing) {\n      params.height += rowsHeight - diffOffsetTop;\n    }\n\n    if (null !== top && $element && $element.length) {\n      params.top = $element[0].offsetTop + diffOffsetTop;\n    }\n\n    that.positionChanged.fire(params);\n  },\n  init: function () {\n    var that = this;\n    that.callBase();\n    that._columnHeadersView = this.getView(\"columnHeadersView\");\n    that._rowsView = this.getView(\"rowsView\");\n    that._pagerView = this.getView(\"pagerView\");\n\n    that._rowsView.resizeCompleted.add(function () {\n      if (that.option(\"allowColumnResizing\")) {\n        var targetPoint = that.getController(\"columnsResizer\")._targetPoint;\n\n        that.update(targetPoint ? targetPoint.y : null);\n      }\n    });\n  },\n  ctor: function (component) {\n    this.callBase(component);\n    this.positionChanged = (0, _callbacks2.default)();\n  }\n});\n\nvar DraggingHeaderViewController = _uiGrid_core2.default.ViewController.inherit({\n  _generatePointsByColumns: function (options) {\n    var that = this;\n    return _uiGrid_core4.default.getPointsByColumns(options.columnElements, function (point) {\n      return that._pointCreated(point, options.columns, options.targetDraggingPanel.getName(), options.sourceColumn);\n    }, options.isVerticalOrientation, options.startColumnIndex);\n  },\n  _pointCreated: function (point, columns, location, sourceColumn) {\n    var targetColumn = columns[point.columnIndex];\n    var prevColumn = columns[point.columnIndex - 1];\n\n    switch (location) {\n      case \"columnChooser\":\n        return true;\n\n      case \"headers\":\n        return sourceColumn && !sourceColumn.allowReordering || (!targetColumn || !targetColumn.allowReordering) && (!prevColumn || !prevColumn.allowReordering);\n\n      default:\n        return 0 === columns.length;\n    }\n  },\n  _subscribeToEvents: function (draggingHeader, draggingPanels) {\n    var that = this;\n    (0, _iterator.each)(draggingPanels, function (_, draggingPanel) {\n      if (draggingPanel) {\n        var columns;\n        var rowCount = draggingPanel.getRowCount ? draggingPanel.getRowCount() : 1;\n        var nameDraggingPanel = draggingPanel.getName();\n\n        var subscribeToEvents = function (index, columnElement) {\n          if (!columnElement) {\n            return;\n          }\n\n          var $columnElement = (0, _renderer2.default)(columnElement);\n          var column = columns[index];\n\n          if (draggingPanel.allowDragging(column, nameDraggingPanel, draggingPanels)) {\n            $columnElement.addClass(that.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS));\n\n            _events_engine2.default.on($columnElement, (0, _utils.addNamespace)(_drag2.default.start, MODULE_NAMESPACE), that.createAction(function (args) {\n              var e = args.event;\n              var eventData = (0, _utils.eventData)(e);\n              draggingHeader.dragHeader({\n                deltaX: eventData.x - (0, _renderer2.default)(e.currentTarget).offset().left,\n                deltaY: eventData.y - (0, _renderer2.default)(e.currentTarget).offset().top,\n                sourceColumn: column,\n                index: column.index,\n                columnIndex: index,\n                columnElement: $columnElement,\n                sourceLocation: nameDraggingPanel,\n                draggingPanels: draggingPanels,\n                rowIndex: that._columnsController.getRowIndex(column.index, true)\n              });\n            }));\n\n            _events_engine2.default.on($columnElement, (0, _utils.addNamespace)(_drag2.default.move, MODULE_NAMESPACE), {\n              that: draggingHeader\n            }, that.createAction(draggingHeader.moveHeader));\n\n            _events_engine2.default.on($columnElement, (0, _utils.addNamespace)(_drag2.default.end, MODULE_NAMESPACE), {\n              that: draggingHeader\n            }, that.createAction(draggingHeader.dropHeader));\n          }\n        };\n\n        for (var i = 0; i < rowCount; i++) {\n          var columnElements = draggingPanel.getColumnElements(i) || [];\n\n          if (columnElements.length) {\n            columns = draggingPanel.getColumns(i) || [];\n            (0, _iterator.each)(columnElements, subscribeToEvents);\n          }\n        }\n      }\n    });\n  },\n  _unsubscribeFromEvents: function (draggingHeader, draggingPanels) {\n    var that = this;\n    (0, _iterator.each)(draggingPanels, function (_, draggingPanel) {\n      if (draggingPanel) {\n        var columnElements = draggingPanel.getColumnElements() || [];\n        (0, _iterator.each)(columnElements, function (index, columnElement) {\n          var $columnElement = (0, _renderer2.default)(columnElement);\n\n          _events_engine2.default.off($columnElement, (0, _utils.addNamespace)(_drag2.default.start, MODULE_NAMESPACE));\n\n          _events_engine2.default.off($columnElement, (0, _utils.addNamespace)(_drag2.default.move, MODULE_NAMESPACE));\n\n          _events_engine2.default.off($columnElement, (0, _utils.addNamespace)(_drag2.default.end, MODULE_NAMESPACE));\n\n          $columnElement.removeClass(that.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS));\n        });\n      }\n    });\n  },\n  _getSeparator: function (targetLocation) {\n    return \"headers\" === targetLocation ? this._columnsSeparatorView : this._blockSeparatorView;\n  },\n  hideSeparators: function (type) {\n    var blockSeparator = this._blockSeparatorView;\n    var columnsSeparator = this._columnsSeparatorView;\n    this._animationColumnIndex = null;\n    blockSeparator && blockSeparator.hide();\n    \"block\" !== type && columnsSeparator && columnsSeparator.hide();\n  },\n  init: function () {\n    var that = this;\n    that.callBase();\n    that._columnsController = that.getController(\"columns\");\n    that._columnHeadersView = that.getView(\"columnHeadersView\");\n    that._columnsSeparatorView = that.getView(\"columnsSeparatorView\");\n    that._draggingHeaderView = that.getView(\"draggingHeaderView\");\n    that._rowsView = that.getView(\"rowsView\");\n    that._blockSeparatorView = that.getView(\"blockSeparatorView\");\n    that._headerPanelView = that.getView(\"headerPanel\");\n    that._columnChooserView = that.getView(\"columnChooserView\");\n\n    var subscribeToEvents = function () {\n      if (that._draggingHeaderView) {\n        var draggingPanels = [that._columnChooserView, that._columnHeadersView, that._headerPanelView];\n\n        that._unsubscribeFromEvents(that._draggingHeaderView, draggingPanels);\n\n        that._subscribeToEvents(that._draggingHeaderView, draggingPanels);\n      }\n    };\n\n    that._columnHeadersView.renderCompleted.add(subscribeToEvents);\n\n    that._headerPanelView && that._headerPanelView.renderCompleted.add(subscribeToEvents);\n    that._columnChooserView && that._columnChooserView.renderCompleted.add(subscribeToEvents);\n  },\n  allowDrop: function (parameters) {\n    return this._columnsController.allowMoveColumn(parameters.sourceColumnIndex, parameters.targetColumnIndex, parameters.sourceLocation, parameters.targetLocation);\n  },\n  drag: function (parameters) {\n    var sourceIndex = parameters.sourceIndex;\n    var sourceLocation = parameters.sourceLocation;\n    var sourceColumnElement = parameters.sourceColumnElement;\n    var headersView = this._columnHeadersView;\n    var rowsView = this._rowsView;\n\n    if (sourceColumnElement) {\n      sourceColumnElement.css({\n        opacity: COLUMN_OPACITY\n      });\n\n      if (\"headers\" === sourceLocation) {\n        headersView && headersView.setRowsOpacity(sourceIndex, COLUMN_OPACITY);\n        rowsView && rowsView.setRowsOpacity(sourceIndex, COLUMN_OPACITY);\n      }\n    }\n  },\n  dock: function (parameters) {\n    var that = this;\n    var targetColumnIndex = _type2.default.isObject(parameters.targetColumnIndex) ? parameters.targetColumnIndex.columnIndex : parameters.targetColumnIndex;\n    var sourceLocation = parameters.sourceLocation;\n    var targetLocation = parameters.targetLocation;\n\n    var separator = that._getSeparator(targetLocation);\n\n    var hasTargetVisibleIndex = targetColumnIndex >= 0;\n\n    var showSeparator = function () {\n      if (that._animationColumnIndex !== targetColumnIndex) {\n        that.hideSeparators();\n        separator.element()[parameters.isLast ? \"insertAfter\" : \"insertBefore\"](parameters.targetColumnElement);\n        that._animationColumnIndex = targetColumnIndex;\n        separator.show(targetLocation);\n      }\n    };\n\n    that._columnHeadersView.element().find(\".\" + HEADER_ROW_CLASS).toggleClass(that.addWidgetPrefix(HEADERS_DROP_HIGHLIGHT_CLASS), \"headers\" !== sourceLocation && \"headers\" === targetLocation && !hasTargetVisibleIndex);\n\n    if (separator) {\n      if (that.allowDrop(parameters) && hasTargetVisibleIndex) {\n        if (\"group\" === targetLocation || \"columnChooser\" === targetLocation) {\n          showSeparator();\n        } else {\n          that.hideSeparators(\"block\");\n          that.getController(\"tablePosition\").update(parameters.posY);\n          separator.moveByX(parameters.posX - separator.width());\n          separator.show();\n        }\n      } else {\n        that.hideSeparators();\n      }\n    }\n  },\n  drop: function (parameters) {\n    var sourceColumnElement = parameters.sourceColumnElement;\n\n    if (sourceColumnElement) {\n      sourceColumnElement.css({\n        opacity: \"\"\n      });\n\n      this._columnHeadersView.setRowsOpacity(parameters.sourceIndex, \"\");\n\n      this._rowsView.setRowsOpacity(parameters.sourceIndex, \"\");\n\n      this._columnHeadersView.element().find(\".\" + HEADER_ROW_CLASS).removeClass(this.addWidgetPrefix(HEADERS_DROP_HIGHLIGHT_CLASS));\n    }\n\n    if (this.allowDrop(parameters)) {\n      var separator = this._getSeparator(parameters.targetLocation);\n\n      if (separator) {\n        separator.hide();\n      }\n\n      this._columnsController.moveColumn(parameters.sourceColumnIndex, parameters.targetColumnIndex, parameters.sourceLocation, parameters.targetLocation);\n    }\n  },\n  dispose: function () {\n    if (this._draggingHeaderView) {\n      this._unsubscribeFromEvents(this._draggingHeaderView, [this._columnChooserView, this._columnHeadersView, this._headerPanelView]);\n    }\n  }\n});\n\nmodule.exports = {\n  views: {\n    columnsSeparatorView: ColumnsSeparatorView,\n    blockSeparatorView: BlockSeparatorView,\n    draggingHeaderView: DraggingHeaderView,\n    trackerView: TrackerView\n  },\n  controllers: {\n    draggingHeader: DraggingHeaderViewController,\n    tablePosition: TablePositionViewController,\n    columnsResizer: ColumnsResizerViewController\n  },\n  extenders: {\n    views: {\n      rowsView: {\n        _needUpdateRowHeight: function (itemCount) {\n          var wordWrapEnabled = this.option(\"wordWrapEnabled\");\n          var columnsResizerController = this.getController(\"columnsResizer\");\n          var isResizing = columnsResizerController.isResizing();\n          return this.callBase.apply(this, arguments) || itemCount > 0 && wordWrapEnabled && isResizing;\n        }\n      }\n    },\n    controllers: {\n      editorFactory: {\n        renderFocusOverlay: function () {\n          if (this.getController(\"columnsResizer\").isResizing()) {\n            return;\n          }\n\n          return this.callBase.apply(this, arguments);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/ticketSystem/frontend/node_modules/devextreme/ui/grid_core/ui.grid_core.columns_resizing_reordering.js"],"names":["_renderer","require","_renderer2","_interopRequireDefault","_dom_adapter","_dom_adapter2","_events_engine","_events_engine2","_callbacks","_callbacks2","_type","_type2","_iterator","_extend","_position","_utils","_pointer","_pointer2","_drag","_drag2","_uiGrid_core","_uiGrid_core2","_uiGrid_core3","_uiGrid_core4","_fx","_fx2","_swatch_container","obj","__esModule","COLUMNS_SEPARATOR_CLASS","COLUMNS_SEPARATOR_TRANSPARENT","DRAGGING_HEADER_CLASS","CELL_CONTENT_CLASS","HEADERS_DRAG_ACTION_CLASS","TRACKER_CLASS","HEADERS_DROP_HIGHLIGHT_CLASS","BLOCK_SEPARATOR_CLASS","HEADER_ROW_CLASS","WIDGET_CLASS","DRAGGING_COMMAND_CELL_CLASS","MODULE_NAMESPACE","COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH","DRAGGING_DELTA","COLUMN_OPACITY","allowResizing","that","option","getController","isColumnOptionUsed","allowReordering","TrackerView","default","View","inherit","_renderCore","callBase","element","addClass","addWidgetPrefix","hide","_unsubscribeFromCallback","_positionChanged","_tablePositionController","positionChanged","remove","_subscribeToCallback","position","$element","hasClass","css","top","height","add","optionChanged","args","name","value","_invalidate","init","isVisible","show","setHeight","dispose","SeparatorView","_renderSeparator","options","_isShown","isDefined","width","ColumnsSeparatorView","_init","_isTransparent","removeClass","force","columnsSeparatorTransparent","moveByX","outerX","_parentElement","offset","left","changeCursor","cursorName","BlockSeparatorView","loadingChanged","isLoading","html","$parent","children","length","prepend","groupPanelOptions","columnChooserOptions","visible","enabled","targetLocation","startAnimate","toOptions","stop","animate","type","from","display","to","duration","easing","DraggingHeaderView","_isDragging","isDragging","_getDraggingPanelByPos","pos","result","each","_dragOptions","draggingPanels","index","draggingPanel","boundingRect","getBoundingRect","bottom","y","x","right","_resetTargetColumnOptions","params","_dropOptions","targetColumnIndex","targetColumnElement","isLast","posX","posY","_getVisibleIndexObject","rowIndex","visibleIndex","columnIndex","parent","find","columnsController","commonColumnSettings","getCommonSettings","allowGrouping","allowHiding","_controller","_columnsResizerViewController","dragHeader","columnElement","isCommandColumn","sourceColumn","sourceIndex","sourceColumnIndex","sourceColumnElement","sourceLocation","document","getDocument","_onSelectStart","onselectstart","drag","textAlign","get","clientHeight","clientWidth","whiteSpace","toggleClass","text","caption","appendTo","getSwatchContainer","moveHeader","e","event","data","eventData","isResizing","dragOptions","moveDeltaX","Math","abs","deltaX","moveDeltaY","deltaY","is","newLeft","newTop","dockHeader","preventDefault","targetDraggingPanel","controller","rtlEnabled","isVerticalOrientation","getName","axisName","columnElements","getColumnElements","ownerBand","pointsByTarget","pointsByColumns","_generatePointsByColumns","extend","columns","getColumns","startColumnIndex","i","centerPosition","eq","last","dock","dropHeader","drop","isNextColumnResizingMode","ColumnsResizerViewController","ViewController","_isHeadersRowArea","_columnHeadersView","offsetTop","headersRowHeight","getHeadersRowHeight","_isRtlParentStyle","_this$_$parentContain","_$parentContainer","_pointCreated","point","cellsLength","isNextColumnMode","isRtlParentStyle","firstPointColumnIndex","currentColumn","nextColumn","_getTargetPoint","currentX","_moveSeparator","columnsSeparatorWidth","_columnsSeparatorView","parentOffset","parentOffsetLeft","_isResizing","_resizingInfo","_updateColumnsWidthIfNeeded","$cell","currentColumnIndex","outerWidth","update","_targetPoint","_previousParentOffset","_isReadyResizing","_endResizing","_trackerView","_getNextColumnIndex","_setupResizingInfo","nextColumnIndex","currentHeader","getHeaderElement","nextHeader","startPosX","currentColumnWidth","nextColumnWidth","_startResizing","isTouchEvent","scrollable","component","getScrollable","_scrollRight","$content","_container","scrollLeft","stopPropagation","loseFocus","_columnsController","getVisibleColumns","cells","getPointsByColumns","_pointsByColumns","_unsubscribeFromEvents","_moveSeparatorHandler","off","addNamespace","move","_startResizingHandler","down","_endResizingHandler","up","_subscribeToEvents","createAction","on","needUpdate","nextCellWidth","resizingInfo","visibleColumns","contentWidth","_rowsView","adaptColumnWidthByRatio","minWidth","cellWidth","isPercentWidth","isString","slice","setColumnWidth","column","columnWidth","oldColumnWidth","columnOption","toFixed","correctContentWidth","allColumnsHaveWidth","every","totalPercent","reduce","sum","parseFloat","beginUpdate","floor","columnWidths","getColumnWidths","hasScroll","totalWidth","lastColumnIndex","getLastResizableColumnIndex","endUpdate","updateDimensions","scrollTo","callback","handler","_subscribesToCallbacks","push","_unsubscribeFromCallbacks","subscribe","_unsubscribes","generatePointsByColumnsHandler","generatePointsByColumnsScrollHandler","_scrollLeft","getView","renderCompleted","resizeCompleted","scrollChanged","previousScrollbarVisibility","getScrollbarWidth","previousTableHeight","scrollbarVisibility","updateFreeSpaceRowHeight","TablePositionViewController","diffOffsetTop","columnsHeadersHeight","getHeight","scrollBarWidth","rowsHeight","columnsResizerController","draggingHeaderView","isDraggingOrResizing","fire","_pagerView","targetPoint","ctor","DraggingHeaderViewController","location","targetColumn","prevColumn","draggingHeader","_","rowCount","getRowCount","nameDraggingPanel","subscribeToEvents","$columnElement","allowDragging","start","currentTarget","getRowIndex","end","_getSeparator","_blockSeparatorView","hideSeparators","blockSeparator","columnsSeparator","_animationColumnIndex","_draggingHeaderView","_headerPanelView","_columnChooserView","allowDrop","parameters","allowMoveColumn","headersView","rowsView","opacity","setRowsOpacity","isObject","separator","hasTargetVisibleIndex","showSeparator","moveColumn","module","exports","views","columnsSeparatorView","blockSeparatorView","trackerView","controllers","tablePosition","columnsResizer","extenders","_needUpdateRowHeight","itemCount","wordWrapEnabled","apply","arguments","editorFactory","renderFocusOverlay"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.columns_resizing_reordering.js)\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _renderer = require(\"../../core/renderer\");\r\nvar _renderer2 = _interopRequireDefault(_renderer);\r\nvar _dom_adapter = require(\"../../core/dom_adapter\");\r\nvar _dom_adapter2 = _interopRequireDefault(_dom_adapter);\r\nvar _events_engine = require(\"../../events/core/events_engine\");\r\nvar _events_engine2 = _interopRequireDefault(_events_engine);\r\nvar _callbacks = require(\"../../core/utils/callbacks\");\r\nvar _callbacks2 = _interopRequireDefault(_callbacks);\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _type2 = _interopRequireDefault(_type);\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _position = require(\"../../core/utils/position\");\r\nvar _utils = require(\"../../events/utils\");\r\nvar _pointer = require(\"../../events/pointer\");\r\nvar _pointer2 = _interopRequireDefault(_pointer);\r\nvar _drag = require(\"../../events/drag\");\r\nvar _drag2 = _interopRequireDefault(_drag);\r\nvar _uiGrid_core = require(\"./ui.grid_core.modules\");\r\nvar _uiGrid_core2 = _interopRequireDefault(_uiGrid_core);\r\nvar _uiGrid_core3 = require(\"./ui.grid_core.utils\");\r\nvar _uiGrid_core4 = _interopRequireDefault(_uiGrid_core3);\r\nvar _fx = require(\"../../animation/fx\");\r\nvar _fx2 = _interopRequireDefault(_fx);\r\nvar _swatch_container = require(\"../widget/swatch_container\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar COLUMNS_SEPARATOR_CLASS = \"columns-separator\";\r\nvar COLUMNS_SEPARATOR_TRANSPARENT = \"columns-separator-transparent\";\r\nvar DRAGGING_HEADER_CLASS = \"drag-header\";\r\nvar CELL_CONTENT_CLASS = \"text-content\";\r\nvar HEADERS_DRAG_ACTION_CLASS = \"drag-action\";\r\nvar TRACKER_CLASS = \"tracker\";\r\nvar HEADERS_DROP_HIGHLIGHT_CLASS = \"drop-highlight\";\r\nvar BLOCK_SEPARATOR_CLASS = \"dx-block-separator\";\r\nvar HEADER_ROW_CLASS = \"dx-header-row\";\r\nvar WIDGET_CLASS = \"dx-widget\";\r\nvar DRAGGING_COMMAND_CELL_CLASS = \"dx-drag-command-cell\";\r\nvar MODULE_NAMESPACE = \"dxDataGridResizingReordering\";\r\nvar COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH = 10;\r\nvar DRAGGING_DELTA = 5;\r\nvar COLUMN_OPACITY = .5;\r\nvar allowResizing = function(that) {\r\n    return that.option(\"allowColumnResizing\") || that.getController(\"columns\").isColumnOptionUsed(\"allowResizing\")\r\n};\r\nvar allowReordering = function(that) {\r\n    return that.option(\"allowColumnReordering\") || that.getController(\"columns\").isColumnOptionUsed(\"allowReordering\")\r\n};\r\nvar TrackerView = _uiGrid_core2.default.View.inherit({\r\n    _renderCore: function() {\r\n        this.callBase();\r\n        this.element().addClass(this.addWidgetPrefix(TRACKER_CLASS));\r\n        this.hide()\r\n    },\r\n    _unsubscribeFromCallback: function() {\r\n        if (this._positionChanged) {\r\n            this._tablePositionController.positionChanged.remove(this._positionChanged)\r\n        }\r\n    },\r\n    _subscribeToCallback: function() {\r\n        var that = this;\r\n        that._positionChanged = function(position) {\r\n            var $element = that.element();\r\n            if ($element && $element.hasClass(that.addWidgetPrefix(TRACKER_CLASS))) {\r\n                $element.css({\r\n                    top: position.top\r\n                });\r\n                $element.height(position.height)\r\n            }\r\n        };\r\n        this._tablePositionController.positionChanged.add(that._positionChanged)\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"allowColumnResizing\" === args.name) {\r\n            this._unsubscribeFromCallback();\r\n            if (args.value) {\r\n                this._subscribeToCallback();\r\n                this._invalidate()\r\n            }\r\n        }\r\n        this.callBase(args)\r\n    },\r\n    init: function() {\r\n        this.callBase();\r\n        this._tablePositionController = this.getController(\"tablePosition\");\r\n        this._subscribeToCallback()\r\n    },\r\n    isVisible: function() {\r\n        return allowResizing(this)\r\n    },\r\n    show: function() {\r\n        this.element().show()\r\n    },\r\n    hide: function() {\r\n        this.element() && this.element().hide()\r\n    },\r\n    setHeight: function(value) {\r\n        this.element().height(value)\r\n    },\r\n    dispose: function() {\r\n        this._unsubscribeFromCallback();\r\n        this.callBase()\r\n    }\r\n});\r\nvar SeparatorView = _uiGrid_core2.default.View.inherit({\r\n    _renderSeparator: function() {},\r\n    _renderCore: function(options) {\r\n        this.callBase(options);\r\n        this._isShown = true;\r\n        this._renderSeparator();\r\n        this.hide()\r\n    },\r\n    show: function() {\r\n        this._isShown = true\r\n    },\r\n    hide: function() {\r\n        this._isShown = false\r\n    },\r\n    height: function(value) {\r\n        var $element = this.element();\r\n        if ($element) {\r\n            if (_type2.default.isDefined(value)) {\r\n                $element.height(value)\r\n            } else {\r\n                return $element.height()\r\n            }\r\n        }\r\n    },\r\n    width: function(value) {\r\n        var $element = this.element();\r\n        if ($element) {\r\n            if (_type2.default.isDefined(value)) {\r\n                $element.width(value)\r\n            } else {\r\n                return $element.width()\r\n            }\r\n        }\r\n    }\r\n});\r\nvar ColumnsSeparatorView = SeparatorView.inherit({\r\n    _renderSeparator: function() {\r\n        this.callBase();\r\n        var $element = this.element();\r\n        $element.addClass(this.addWidgetPrefix(COLUMNS_SEPARATOR_CLASS))\r\n    },\r\n    _subscribeToCallback: function() {\r\n        var that = this;\r\n        var $element;\r\n        that._positionChanged = function(position) {\r\n            $element = that.element();\r\n            if ($element) {\r\n                $element.css({\r\n                    top: position.top\r\n                });\r\n                $element.height(position.height)\r\n            }\r\n        };\r\n        that._tablePositionController.positionChanged.add(that._positionChanged)\r\n    },\r\n    _unsubscribeFromCallback: function() {\r\n        this._positionChanged && this._tablePositionController.positionChanged.remove(this._positionChanged)\r\n    },\r\n    _init: function() {\r\n        this._isTransparent = allowResizing(this);\r\n        if (this.isVisible()) {\r\n            this._subscribeToCallback()\r\n        }\r\n    },\r\n    isVisible: function() {\r\n        return this.option(\"showColumnHeaders\") && (allowReordering(this) || allowResizing(this))\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"allowColumnResizing\" === args.name) {\r\n            if (args.value) {\r\n                this._init();\r\n                this._invalidate();\r\n                this.hide(true)\r\n            } else {\r\n                this._unsubscribeFromCallback();\r\n                this._isTransparent = allowResizing(this);\r\n                this.hide(true)\r\n            }\r\n        }\r\n        this.callBase(args)\r\n    },\r\n    init: function() {\r\n        this.callBase();\r\n        this._tablePositionController = this.getController(\"tablePosition\");\r\n        this._init()\r\n    },\r\n    show: function() {\r\n        var that = this;\r\n        var $element = this.element();\r\n        if ($element && !that._isShown) {\r\n            if (that._isTransparent) {\r\n                $element.removeClass(that.addWidgetPrefix(COLUMNS_SEPARATOR_TRANSPARENT))\r\n            } else {\r\n                $element.show()\r\n            }\r\n        }\r\n        this.callBase()\r\n    },\r\n    hide: function(force) {\r\n        var $element = this.element();\r\n        var columnsSeparatorTransparent = this.addWidgetPrefix(COLUMNS_SEPARATOR_TRANSPARENT);\r\n        if ($element && (this._isShown || force)) {\r\n            if (this._isTransparent) {\r\n                $element.addClass(columnsSeparatorTransparent);\r\n                $element.css(\"left\", \"\");\r\n                $element.show()\r\n            } else {\r\n                if ($element.hasClass(columnsSeparatorTransparent)) {\r\n                    $element.removeClass(columnsSeparatorTransparent)\r\n                }\r\n                $element.hide()\r\n            }\r\n        }\r\n        this.callBase()\r\n    },\r\n    moveByX: function(outerX) {\r\n        var $element = this.element();\r\n        if ($element) {\r\n            $element.css(\"left\", outerX - this._parentElement().offset().left)\r\n        }\r\n    },\r\n    changeCursor: function(cursorName) {\r\n        cursorName = _type2.default.isDefined(cursorName) ? cursorName : \"\";\r\n        var $element = this.element();\r\n        if ($element) {\r\n            $element.css(\"cursor\", cursorName)\r\n        }\r\n    },\r\n    dispose: function() {\r\n        this._unsubscribeFromCallback();\r\n        this.callBase()\r\n    }\r\n});\r\nvar BlockSeparatorView = SeparatorView.inherit({\r\n    init: function() {\r\n        var that = this;\r\n        this.callBase();\r\n        this.getController(\"data\").loadingChanged.add(function(isLoading) {\r\n            if (!isLoading) {\r\n                that.hide()\r\n            }\r\n        })\r\n    },\r\n    _renderSeparator: function() {\r\n        this.callBase();\r\n        this.element().addClass(BLOCK_SEPARATOR_CLASS).html(\"&nbsp;\")\r\n    },\r\n    hide: function() {\r\n        var that = this;\r\n        var $parent = this._parentElement();\r\n        var $element = this.element();\r\n        if ($element && this._isShown) {\r\n            $element.css(\"display\", \"none\")\r\n        }\r\n        if ($parent && !$parent.children(\".\" + BLOCK_SEPARATOR_CLASS).length) {\r\n            $parent.prepend(that.element())\r\n        }\r\n        that.callBase()\r\n    },\r\n    isVisible: function() {\r\n        var groupPanelOptions = this.option(\"groupPanel\");\r\n        var columnChooserOptions = this.option(\"columnChooser\");\r\n        return groupPanelOptions && groupPanelOptions.visible || columnChooserOptions && columnChooserOptions.enabled\r\n    },\r\n    show: function(targetLocation) {\r\n        var that = this;\r\n        var $element = this.element();\r\n        var startAnimate = function(toOptions) {\r\n            _fx2.default.stop($element, true);\r\n            _fx2.default.animate($element, {\r\n                type: \"slide\",\r\n                from: {\r\n                    width: 0,\r\n                    display: toOptions.display\r\n                },\r\n                to: toOptions,\r\n                duration: 300,\r\n                easing: \"swing\"\r\n            })\r\n        };\r\n        if ($element && !that._isShown) {\r\n            switch (targetLocation) {\r\n                case \"group\":\r\n                    startAnimate({\r\n                        width: \"50px\",\r\n                        display: \"inline-block\"\r\n                    });\r\n                    break;\r\n                case \"columnChooser\":\r\n                    startAnimate({\r\n                        width: \"100%\",\r\n                        display: \"block\"\r\n                    });\r\n                    break;\r\n                default:\r\n                    $element.css(\"display\", \"\")\r\n            }\r\n        }\r\n        that.callBase()\r\n    }\r\n});\r\nvar DraggingHeaderView = _uiGrid_core2.default.View.inherit({\r\n    _isDragging: false,\r\n    isDragging: function() {\r\n        return this._isDragging\r\n    },\r\n    _getDraggingPanelByPos: function(pos) {\r\n        var that = this;\r\n        var result;\r\n        (0, _iterator.each)(that._dragOptions.draggingPanels, function(index, draggingPanel) {\r\n            if (draggingPanel) {\r\n                var boundingRect = draggingPanel.getBoundingRect();\r\n                if (boundingRect && (void 0 === boundingRect.bottom || pos.y < boundingRect.bottom) && (void 0 === boundingRect.top || pos.y > boundingRect.top) && (void 0 === boundingRect.left || pos.x > boundingRect.left) && (void 0 === boundingRect.right || pos.x < boundingRect.right)) {\r\n                    result = draggingPanel;\r\n                    return false\r\n                }\r\n            }\r\n        });\r\n        return result\r\n    },\r\n    _renderCore: function() {\r\n        this.element().addClass(this.addWidgetPrefix(DRAGGING_HEADER_CLASS) + \" \" + this.addWidgetPrefix(CELL_CONTENT_CLASS) + \" \" + WIDGET_CLASS).hide()\r\n    },\r\n    _resetTargetColumnOptions: function() {\r\n        var params = this._dropOptions;\r\n        params.targetColumnIndex = -1;\r\n        delete params.targetColumnElement;\r\n        delete params.isLast;\r\n        delete params.posX;\r\n        delete params.posY\r\n    },\r\n    _getVisibleIndexObject: function(rowIndex, visibleIndex) {\r\n        if (_type2.default.isDefined(rowIndex)) {\r\n            return {\r\n                columnIndex: visibleIndex,\r\n                rowIndex: rowIndex\r\n            }\r\n        }\r\n        return visibleIndex\r\n    },\r\n    dispose: function() {\r\n        var element = this.element();\r\n        this._dragOptions = null;\r\n        element && element.parent().find(\".\" + this.addWidgetPrefix(DRAGGING_HEADER_CLASS)).remove()\r\n    },\r\n    isVisible: function() {\r\n        var columnsController = this.getController(\"columns\");\r\n        var commonColumnSettings = columnsController.getCommonSettings();\r\n        return this.option(\"showColumnHeaders\") && (allowReordering(this) || commonColumnSettings.allowGrouping || commonColumnSettings.allowHiding)\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        this.callBase();\r\n        this._controller = this.getController(\"draggingHeader\");\r\n        this._columnsResizerViewController = this.getController(\"columnsResizer\");\r\n        this.getController(\"data\").loadingChanged.add(function(isLoading) {\r\n            var element = that.element();\r\n            if (!isLoading && element) {\r\n                element.hide()\r\n            }\r\n        })\r\n    },\r\n    dragHeader: function(options) {\r\n        var that = this;\r\n        var columnElement = options.columnElement;\r\n        var isCommandColumn = !!options.sourceColumn.type;\r\n        that._isDragging = true;\r\n        that._dragOptions = options;\r\n        that._dropOptions = {\r\n            sourceIndex: options.index,\r\n            sourceColumnIndex: that._getVisibleIndexObject(options.rowIndex, options.columnIndex),\r\n            sourceColumnElement: options.columnElement,\r\n            sourceLocation: options.sourceLocation\r\n        };\r\n        var document = _dom_adapter2.default.getDocument();\r\n        that._onSelectStart = document.onselectstart;\r\n        document.onselectstart = function() {\r\n            return false\r\n        };\r\n        that._controller.drag(that._dropOptions);\r\n        that.element().css({\r\n            textAlign: columnElement && columnElement.css(\"textAlign\"),\r\n            height: columnElement && (isCommandColumn && columnElement.get(0).clientHeight || columnElement.height()),\r\n            width: columnElement && (isCommandColumn && columnElement.get(0).clientWidth || columnElement.width()),\r\n            whiteSpace: columnElement && columnElement.css(\"whiteSpace\")\r\n        }).addClass(that.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS)).toggleClass(DRAGGING_COMMAND_CELL_CLASS, isCommandColumn).text(isCommandColumn ? \"\" : options.sourceColumn.caption);\r\n        that.element().appendTo((0, _swatch_container.getSwatchContainer)(columnElement))\r\n    },\r\n    moveHeader: function(args) {\r\n        var e = args.event;\r\n        var that = e.data.that;\r\n        var eventData = (0, _utils.eventData)(e);\r\n        var isResizing = that._columnsResizerViewController ? that._columnsResizerViewController.isResizing() : false;\r\n        var dragOptions = that._dragOptions;\r\n        if (that._isDragging && !isResizing) {\r\n            var $element = that.element();\r\n            var moveDeltaX = Math.abs(eventData.x - dragOptions.columnElement.offset().left - dragOptions.deltaX);\r\n            var moveDeltaY = Math.abs(eventData.y - dragOptions.columnElement.offset().top - dragOptions.deltaY);\r\n            if ($element.is(\":visible\") || moveDeltaX > DRAGGING_DELTA || moveDeltaY > DRAGGING_DELTA) {\r\n                $element.show();\r\n                var newLeft = eventData.x - dragOptions.deltaX;\r\n                var newTop = eventData.y - dragOptions.deltaY;\r\n                $element.css({\r\n                    left: newLeft,\r\n                    top: newTop\r\n                });\r\n                that.dockHeader(eventData)\r\n            }\r\n            e.preventDefault()\r\n        }\r\n    },\r\n    dockHeader: function(eventData) {\r\n        var that = this;\r\n        var targetDraggingPanel = that._getDraggingPanelByPos(eventData);\r\n        var controller = that._controller;\r\n        var params = that._dropOptions;\r\n        var dragOptions = that._dragOptions;\r\n        if (targetDraggingPanel) {\r\n            var rtlEnabled = that.option(\"rtlEnabled\");\r\n            var isVerticalOrientation = \"columnChooser\" === targetDraggingPanel.getName();\r\n            var axisName = isVerticalOrientation ? \"y\" : \"x\";\r\n            var targetLocation = targetDraggingPanel.getName();\r\n            var rowIndex = \"headers\" === targetLocation ? dragOptions.rowIndex : void 0;\r\n            var sourceColumn = dragOptions.sourceColumn;\r\n            var columnElements = targetDraggingPanel.getColumnElements(rowIndex, sourceColumn && sourceColumn.ownerBand) || [];\r\n            var pointsByTarget = dragOptions.pointsByTarget = dragOptions.pointsByTarget || {};\r\n            var pointsByColumns = \"columnChooser\" === targetLocation ? [] : pointsByTarget[targetLocation] || controller._generatePointsByColumns((0, _extend.extend)({}, dragOptions, {\r\n                targetDraggingPanel: targetDraggingPanel,\r\n                columns: targetDraggingPanel.getColumns(rowIndex),\r\n                columnElements: columnElements,\r\n                isVerticalOrientation: isVerticalOrientation,\r\n                startColumnIndex: \"headers\" === targetLocation && (0, _renderer2.default)(columnElements[0]).index()\r\n            }));\r\n            pointsByTarget[targetLocation] = pointsByColumns;\r\n            params.targetLocation = targetLocation;\r\n            if (pointsByColumns.length > 0) {\r\n                for (var i = 0; i < pointsByColumns.length; i++) {\r\n                    var centerPosition = pointsByColumns[i + 1] && (pointsByColumns[i][axisName] + pointsByColumns[i + 1][axisName]) / 2;\r\n                    if (void 0 === centerPosition || (rtlEnabled && \"x\" === axisName ? eventData[axisName] > centerPosition : eventData[axisName] < centerPosition)) {\r\n                        params.targetColumnIndex = that._getVisibleIndexObject(rowIndex, pointsByColumns[i].columnIndex);\r\n                        if (columnElements[i]) {\r\n                            params.targetColumnElement = columnElements.eq(i);\r\n                            params.isLast = false\r\n                        } else {\r\n                            params.targetColumnElement = columnElements.last();\r\n                            params.isLast = true\r\n                        }\r\n                        params.posX = pointsByColumns[i].x;\r\n                        params.posY = pointsByColumns[i].y;\r\n                        controller.dock(params);\r\n                        break\r\n                    }\r\n                }\r\n            } else {\r\n                that._resetTargetColumnOptions();\r\n                controller.dock(params)\r\n            }\r\n        }\r\n    },\r\n    dropHeader: function(args) {\r\n        var e = args.event;\r\n        var that = e.data.that;\r\n        var controller = that._controller;\r\n        that.element().hide();\r\n        if (controller && that._isDragging) {\r\n            controller.drop(that._dropOptions)\r\n        }\r\n        that.element().appendTo(that._parentElement());\r\n        that._dragOptions = null;\r\n        that._dropOptions = null;\r\n        that._isDragging = false;\r\n        _dom_adapter2.default.getDocument().onselectstart = that._onSelectStart || null\r\n    }\r\n});\r\nvar isNextColumnResizingMode = function(that) {\r\n    return \"widget\" !== that.option(\"columnResizingMode\")\r\n};\r\nvar ColumnsResizerViewController = _uiGrid_core2.default.ViewController.inherit({\r\n    _isHeadersRowArea: function(posY) {\r\n        if (this._columnHeadersView) {\r\n            var element = this._columnHeadersView.element();\r\n            if (element) {\r\n                var offsetTop = element.offset().top;\r\n                var headersRowHeight = this._columnHeadersView.getHeadersRowHeight();\r\n                return posY >= offsetTop && posY <= offsetTop + headersRowHeight\r\n            }\r\n        }\r\n        return false\r\n    },\r\n    _isRtlParentStyle: function() {\r\n        var _this$_$parentContain;\r\n        return this.option(\"rtlEnabled\") && \"rtl\" === (null === (_this$_$parentContain = this._$parentContainer) || void 0 === _this$_$parentContain ? void 0 : _this$_$parentContain.parent().css(\"direction\"))\r\n    },\r\n    _pointCreated: function(point, cellsLength, columns) {\r\n        var isNextColumnMode = isNextColumnResizingMode(this);\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var isRtlParentStyle = this._isRtlParentStyle();\r\n        var firstPointColumnIndex = !isNextColumnMode && rtlEnabled && !isRtlParentStyle ? 0 : 1;\r\n        if (point.index >= firstPointColumnIndex && point.index < cellsLength + (!isNextColumnMode && (!rtlEnabled || isRtlParentStyle) ? 1 : 0)) {\r\n            point.columnIndex -= firstPointColumnIndex;\r\n            var currentColumn = columns[point.columnIndex] || {};\r\n            var nextColumn = columns[point.columnIndex + 1] || {};\r\n            return !(isNextColumnMode ? currentColumn.allowResizing && nextColumn.allowResizing : currentColumn.allowResizing)\r\n        }\r\n        return true\r\n    },\r\n    _getTargetPoint: function(pointsByColumns, currentX, deltaX) {\r\n        if (pointsByColumns) {\r\n            for (var i = 0; i < pointsByColumns.length; i++) {\r\n                if (pointsByColumns[i].x === pointsByColumns[0].x && pointsByColumns[i + 1] && pointsByColumns[i].x === pointsByColumns[i + 1].x) {\r\n                    continue\r\n                }\r\n                if (pointsByColumns[i].x - deltaX <= currentX && currentX <= pointsByColumns[i].x + deltaX) {\r\n                    return pointsByColumns[i]\r\n                }\r\n            }\r\n        }\r\n        return null\r\n    },\r\n    _moveSeparator: function(args) {\r\n        var e = args.event;\r\n        var that = e.data;\r\n        var columnsSeparatorWidth = that._columnsSeparatorView.width();\r\n        var isNextColumnMode = isNextColumnResizingMode(that);\r\n        var deltaX = columnsSeparatorWidth / 2;\r\n        var parentOffset = that._$parentContainer.offset();\r\n        var parentOffsetLeft = parentOffset.left;\r\n        var eventData = (0, _utils.eventData)(e);\r\n        var rtlEnabled = that.option(\"rtlEnabled\");\r\n        var isRtlParentStyle = this._isRtlParentStyle();\r\n        if (that._isResizing && that._resizingInfo) {\r\n            if ((parentOffsetLeft <= eventData.x || !isNextColumnMode && isRtlParentStyle) && (!isNextColumnMode || eventData.x <= parentOffsetLeft + that._$parentContainer.width())) {\r\n                if (that._updateColumnsWidthIfNeeded(eventData.x)) {\r\n                    var $cell = that._columnHeadersView.getColumnElements().eq(that._resizingInfo.currentColumnIndex);\r\n                    that._columnsSeparatorView.moveByX($cell.offset().left + ((isNextColumnMode || isRtlParentStyle) && rtlEnabled ? 0 : $cell.outerWidth()));\r\n                    that._tablePositionController.update(that._targetPoint.y);\r\n                    e.preventDefault()\r\n                }\r\n            }\r\n        } else {\r\n            if (that._isHeadersRowArea(eventData.y)) {\r\n                if (that._previousParentOffset) {\r\n                    if (that._previousParentOffset.left !== parentOffset.left || that._previousParentOffset.top !== parentOffset.top) {\r\n                        that.pointsByColumns(null)\r\n                    }\r\n                }\r\n                that._targetPoint = that._getTargetPoint(that.pointsByColumns(), eventData.x, columnsSeparatorWidth);\r\n                that._previousParentOffset = parentOffset;\r\n                that._isReadyResizing = false;\r\n                if (that._targetPoint) {\r\n                    that._columnsSeparatorView.changeCursor(\"col-resize\");\r\n                    that._columnsSeparatorView.moveByX(that._targetPoint.x - deltaX);\r\n                    that._tablePositionController.update(that._targetPoint.y);\r\n                    that._isReadyResizing = true;\r\n                    e.preventDefault()\r\n                } else {\r\n                    that._columnsSeparatorView.changeCursor()\r\n                }\r\n            } else {\r\n                that.pointsByColumns(null);\r\n                that._isReadyResizing = false;\r\n                that._columnsSeparatorView.changeCursor()\r\n            }\r\n        }\r\n    },\r\n    _endResizing: function(args) {\r\n        var e = args.event;\r\n        var that = e.data;\r\n        if (that._isResizing) {\r\n            that.pointsByColumns(null);\r\n            that._resizingInfo = null;\r\n            that._columnsSeparatorView.hide();\r\n            that._columnsSeparatorView.changeCursor();\r\n            that._trackerView.hide();\r\n            that._isReadyResizing = false;\r\n            that._isResizing = false\r\n        }\r\n    },\r\n    _getNextColumnIndex: function(currentColumnIndex) {\r\n        return currentColumnIndex + 1\r\n    },\r\n    _setupResizingInfo: function(posX) {\r\n        var that = this;\r\n        var currentColumnIndex = that._targetPoint.columnIndex;\r\n        var nextColumnIndex = that._getNextColumnIndex(currentColumnIndex);\r\n        var currentHeader = that._columnHeadersView.getHeaderElement(currentColumnIndex);\r\n        var nextHeader = that._columnHeadersView.getHeaderElement(nextColumnIndex);\r\n        that._resizingInfo = {\r\n            startPosX: posX,\r\n            currentColumnIndex: currentColumnIndex,\r\n            currentColumnWidth: currentHeader && currentHeader.length > 0 ? (0, _position.getBoundingRect)(currentHeader[0]).width : 0,\r\n            nextColumnIndex: nextColumnIndex,\r\n            nextColumnWidth: nextHeader && nextHeader.length > 0 ? (0, _position.getBoundingRect)(nextHeader[0]).width : 0\r\n        }\r\n    },\r\n    _startResizing: function(args) {\r\n        var e = args.event;\r\n        var that = e.data;\r\n        var eventData = (0, _utils.eventData)(e);\r\n        if ((0, _utils.isTouchEvent)(e)) {\r\n            if (that._isHeadersRowArea(eventData.y)) {\r\n                that._targetPoint = that._getTargetPoint(that.pointsByColumns(), eventData.x, COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH);\r\n                if (that._targetPoint) {\r\n                    that._columnsSeparatorView.moveByX(that._targetPoint.x - that._columnsSeparatorView.width() / 2);\r\n                    that._isReadyResizing = true\r\n                }\r\n            } else {\r\n                that._isReadyResizing = false\r\n            }\r\n        }\r\n        if (that._isReadyResizing) {\r\n            that._setupResizingInfo(eventData.x);\r\n            that._isResizing = true;\r\n            that._tablePositionController.update(that._targetPoint.y);\r\n            that._columnsSeparatorView.show();\r\n            that._trackerView.show();\r\n            var scrollable = that.component.getScrollable();\r\n            if (scrollable && that._isRtlParentStyle()) {\r\n                that._scrollRight = scrollable.$content().width() - scrollable._container().width() - scrollable.scrollLeft()\r\n            }\r\n            e.preventDefault();\r\n            e.stopPropagation()\r\n        }\r\n        if (this.isResizing()) {\r\n            this.getController(\"editorFactory\").loseFocus()\r\n        }\r\n    },\r\n    _generatePointsByColumns: function() {\r\n        var that = this;\r\n        var columns = that._columnsController ? that._columnsController.getVisibleColumns() : [];\r\n        var cells = that._columnHeadersView.getColumnElements();\r\n        var pointsByColumns = [];\r\n        if (cells && cells.length > 0) {\r\n            pointsByColumns = _uiGrid_core4.default.getPointsByColumns(cells, function(point) {\r\n                return that._pointCreated(point, cells.length, columns)\r\n            })\r\n        }\r\n        that._pointsByColumns = pointsByColumns\r\n    },\r\n    _unsubscribeFromEvents: function() {\r\n        this._moveSeparatorHandler && _events_engine2.default.off(_dom_adapter2.default.getDocument(), (0, _utils.addNamespace)(_pointer2.default.move, MODULE_NAMESPACE), this._moveSeparatorHandler);\r\n        this._startResizingHandler && _events_engine2.default.off(this._$parentContainer, (0, _utils.addNamespace)(_pointer2.default.down, MODULE_NAMESPACE), this._startResizingHandler);\r\n        if (this._endResizingHandler) {\r\n            _events_engine2.default.off(this._columnsSeparatorView.element(), (0, _utils.addNamespace)(_pointer2.default.up, MODULE_NAMESPACE), this._endResizingHandler);\r\n            _events_engine2.default.off(_dom_adapter2.default.getDocument(), (0, _utils.addNamespace)(_pointer2.default.up, MODULE_NAMESPACE), this._endResizingHandler)\r\n        }\r\n    },\r\n    _subscribeToEvents: function() {\r\n        this._moveSeparatorHandler = this.createAction(this._moveSeparator);\r\n        this._startResizingHandler = this.createAction(this._startResizing);\r\n        this._endResizingHandler = this.createAction(this._endResizing);\r\n        _events_engine2.default.on(_dom_adapter2.default.getDocument(), (0, _utils.addNamespace)(_pointer2.default.move, MODULE_NAMESPACE), this, this._moveSeparatorHandler);\r\n        _events_engine2.default.on(this._$parentContainer, (0, _utils.addNamespace)(_pointer2.default.down, MODULE_NAMESPACE), this, this._startResizingHandler);\r\n        _events_engine2.default.on(this._columnsSeparatorView.element(), (0, _utils.addNamespace)(_pointer2.default.up, MODULE_NAMESPACE), this, this._endResizingHandler);\r\n        _events_engine2.default.on(_dom_adapter2.default.getDocument(), (0, _utils.addNamespace)(_pointer2.default.up, MODULE_NAMESPACE), this, this._endResizingHandler)\r\n    },\r\n    _updateColumnsWidthIfNeeded: function(posX) {\r\n        var deltaX;\r\n        var needUpdate = false;\r\n        var nextCellWidth;\r\n        var resizingInfo = this._resizingInfo;\r\n        var columnsController = this._columnsController;\r\n        var visibleColumns = columnsController.getVisibleColumns();\r\n        var columnsSeparatorWidth = this._columnsSeparatorView.width();\r\n        var contentWidth = this._rowsView.contentWidth();\r\n        var isNextColumnMode = isNextColumnResizingMode(this);\r\n        var adaptColumnWidthByRatio = isNextColumnMode && this.option(\"adaptColumnWidthByRatio\") && !this.option(\"columnAutoWidth\");\r\n        var minWidth;\r\n        var nextColumn;\r\n        var cellWidth;\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var isRtlParentStyle = this._isRtlParentStyle();\r\n\r\n        function isPercentWidth(width) {\r\n            return _type2.default.isString(width) && \"%\" === width.slice(-1)\r\n        }\r\n\r\n        function setColumnWidth(column, columnWidth, contentWidth, adaptColumnWidthByRatio) {\r\n            if (column) {\r\n                var oldColumnWidth = column.width;\r\n                if (oldColumnWidth) {\r\n                    adaptColumnWidthByRatio = isPercentWidth(oldColumnWidth)\r\n                }\r\n                if (adaptColumnWidthByRatio) {\r\n                    column && columnsController.columnOption(column.index, \"visibleWidth\", columnWidth);\r\n                    column && columnsController.columnOption(column.index, \"width\", (columnWidth / contentWidth * 100).toFixed(3) + \"%\")\r\n                } else {\r\n                    column && columnsController.columnOption(column.index, \"visibleWidth\", null);\r\n                    column && columnsController.columnOption(column.index, \"width\", columnWidth)\r\n                }\r\n            }\r\n        }\r\n\r\n        function correctContentWidth(contentWidth, visibleColumns) {\r\n            var allColumnsHaveWidth = visibleColumns.every(function(column) {\r\n                return column.width\r\n            });\r\n            if (allColumnsHaveWidth) {\r\n                var totalPercent = visibleColumns.reduce(function(sum, column) {\r\n                    if (isPercentWidth(column.width)) {\r\n                        sum += parseFloat(column.width)\r\n                    }\r\n                    return sum\r\n                }, 0);\r\n                if (totalPercent > 100) {\r\n                    contentWidth = contentWidth / totalPercent * 100\r\n                }\r\n            }\r\n            return contentWidth\r\n        }\r\n        deltaX = posX - resizingInfo.startPosX;\r\n        if ((isNextColumnMode || isRtlParentStyle) && rtlEnabled) {\r\n            deltaX = -deltaX\r\n        }\r\n        cellWidth = resizingInfo.currentColumnWidth + deltaX;\r\n        var column = visibleColumns[resizingInfo.currentColumnIndex];\r\n        minWidth = column && column.minWidth || columnsSeparatorWidth;\r\n        needUpdate = cellWidth >= minWidth;\r\n        if (isNextColumnMode) {\r\n            nextCellWidth = resizingInfo.nextColumnWidth - deltaX;\r\n            nextColumn = visibleColumns[resizingInfo.nextColumnIndex];\r\n            minWidth = nextColumn && nextColumn.minWidth || columnsSeparatorWidth;\r\n            needUpdate = needUpdate && nextCellWidth >= minWidth\r\n        }\r\n        if (needUpdate) {\r\n            columnsController.beginUpdate();\r\n            cellWidth = Math.floor(cellWidth);\r\n            contentWidth = correctContentWidth(contentWidth, visibleColumns);\r\n            setColumnWidth(column, cellWidth, contentWidth, adaptColumnWidthByRatio);\r\n            if (isNextColumnMode) {\r\n                nextCellWidth = Math.floor(nextCellWidth);\r\n                setColumnWidth(nextColumn, nextCellWidth, contentWidth, adaptColumnWidthByRatio)\r\n            } else {\r\n                var columnWidths = this._columnHeadersView.getColumnWidths();\r\n                columnWidths[resizingInfo.currentColumnIndex] = cellWidth;\r\n                var hasScroll = columnWidths.reduce(function(totalWidth, width) {\r\n                    return totalWidth + width\r\n                }, 0) > this._rowsView.contentWidth();\r\n                if (!hasScroll) {\r\n                    var lastColumnIndex = _uiGrid_core4.default.getLastResizableColumnIndex(visibleColumns);\r\n                    if (lastColumnIndex >= 0) {\r\n                        columnsController.columnOption(visibleColumns[lastColumnIndex].index, \"visibleWidth\", \"auto\")\r\n                    }\r\n                }\r\n                for (var i = 0; i < columnWidths.length; i++) {\r\n                    if (visibleColumns[i] && visibleColumns[i] !== column && void 0 === visibleColumns[i].width) {\r\n                        columnsController.columnOption(visibleColumns[i].index, \"width\", columnWidths[i])\r\n                    }\r\n                }\r\n            }\r\n            columnsController.endUpdate();\r\n            if (!isNextColumnMode) {\r\n                this.component.updateDimensions();\r\n                var scrollable = this.component.getScrollable();\r\n                if (scrollable && isRtlParentStyle) {\r\n                    var left = scrollable.$content().width() - scrollable._container().width() - this._scrollRight;\r\n                    scrollable.scrollTo({\r\n                        left: left\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        return needUpdate\r\n    },\r\n    _subscribeToCallback: function(callback, handler) {\r\n        callback.add(handler);\r\n        this._subscribesToCallbacks.push({\r\n            callback: callback,\r\n            handler: handler\r\n        })\r\n    },\r\n    _unsubscribeFromCallbacks: function() {\r\n        for (var i = 0; i < this._subscribesToCallbacks.length; i++) {\r\n            var subscribe = this._subscribesToCallbacks[i];\r\n            subscribe.callback.remove(subscribe.handler)\r\n        }\r\n        this._subscribesToCallbacks = []\r\n    },\r\n    _unsubscribes: function() {\r\n        this._unsubscribeFromEvents();\r\n        this._unsubscribeFromCallbacks()\r\n    },\r\n    _init: function() {\r\n        var that = this;\r\n        var generatePointsByColumnsHandler = function() {\r\n            if (!that._isResizing) {\r\n                that.pointsByColumns(null)\r\n            }\r\n        };\r\n        var generatePointsByColumnsScrollHandler = function(offset) {\r\n            if (that._scrollLeft !== offset.left) {\r\n                that._scrollLeft = offset.left;\r\n                that.pointsByColumns(null)\r\n            }\r\n        };\r\n        that._columnsSeparatorView = that.getView(\"columnsSeparatorView\");\r\n        that._columnHeadersView = that.getView(\"columnHeadersView\");\r\n        that._trackerView = that.getView(\"trackerView\");\r\n        that._rowsView = that.getView(\"rowsView\");\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._tablePositionController = that.getController(\"tablePosition\");\r\n        that._$parentContainer = that.component.$element();\r\n        that._subscribeToCallback(that._columnHeadersView.renderCompleted, generatePointsByColumnsHandler);\r\n        that._subscribeToCallback(that._columnHeadersView.resizeCompleted, generatePointsByColumnsHandler);\r\n        that._subscribeToCallback(that._columnsSeparatorView.renderCompleted, function() {\r\n            that._unsubscribeFromEvents();\r\n            that._subscribeToEvents()\r\n        });\r\n        that._subscribeToCallback(that._rowsView.renderCompleted, function() {\r\n            that._rowsView.scrollChanged.remove(generatePointsByColumnsScrollHandler);\r\n            that._rowsView.scrollChanged.add(generatePointsByColumnsScrollHandler)\r\n        });\r\n        var previousScrollbarVisibility = 0 !== that._rowsView.getScrollbarWidth();\r\n        var previousTableHeight = 0;\r\n        that._subscribeToCallback(that.getController(\"tablePosition\").positionChanged, function(e) {\r\n            if (that._isResizing && !that._rowsView.isResizing) {\r\n                var scrollbarVisibility = 0 !== that._rowsView.getScrollbarWidth();\r\n                if (previousScrollbarVisibility !== scrollbarVisibility || previousTableHeight && previousTableHeight !== e.height) {\r\n                    previousScrollbarVisibility = scrollbarVisibility;\r\n                    previousTableHeight = e.height;\r\n                    that.component.updateDimensions()\r\n                } else {\r\n                    that._rowsView.updateFreeSpaceRowHeight()\r\n                }\r\n            }\r\n            previousTableHeight = e.height\r\n        })\r\n    },\r\n    optionChanged: function(args) {\r\n        this.callBase(args);\r\n        if (\"allowColumnResizing\" === args.name) {\r\n            if (args.value) {\r\n                this._init();\r\n                this._subscribeToEvents()\r\n            } else {\r\n                this._unsubscribes()\r\n            }\r\n        }\r\n    },\r\n    isResizing: function() {\r\n        return this._isResizing\r\n    },\r\n    init: function() {\r\n        this._subscribesToCallbacks = [];\r\n        if (allowResizing(this)) {\r\n            this._init()\r\n        }\r\n    },\r\n    pointsByColumns: function(value) {\r\n        if (void 0 !== value) {\r\n            this._pointsByColumns = value\r\n        } else {\r\n            if (!this._pointsByColumns) {\r\n                this._generatePointsByColumns()\r\n            }\r\n            return this._pointsByColumns\r\n        }\r\n    },\r\n    dispose: function() {\r\n        this._unsubscribes();\r\n        this.callBase()\r\n    }\r\n});\r\nvar TablePositionViewController = _uiGrid_core2.default.ViewController.inherit({\r\n    update: function(top) {\r\n        var that = this;\r\n        var params = {};\r\n        var $element = that._columnHeadersView.element();\r\n        var offset = $element && $element.offset();\r\n        var offsetTop = offset && offset.top || 0;\r\n        var diffOffsetTop = _type2.default.isDefined(top) ? Math.abs(top - offsetTop) : 0;\r\n        var columnsHeadersHeight = that._columnHeadersView ? that._columnHeadersView.getHeight() : 0;\r\n        var scrollBarWidth = that._rowsView.getScrollbarWidth(true);\r\n        var rowsHeight = that._rowsView ? that._rowsView.height() - scrollBarWidth : 0;\r\n        var columnsResizerController = that.component.getController(\"columnsResizer\");\r\n        var draggingHeaderView = that.component.getView(\"draggingHeaderView\");\r\n        params.height = columnsHeadersHeight;\r\n        var isDraggingOrResizing = false !== columnsResizerController.isResizing() || draggingHeaderView.isDragging();\r\n        if (isDraggingOrResizing) {\r\n            params.height += rowsHeight - diffOffsetTop\r\n        }\r\n        if (null !== top && $element && $element.length) {\r\n            params.top = $element[0].offsetTop + diffOffsetTop\r\n        }\r\n        that.positionChanged.fire(params)\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that.callBase();\r\n        that._columnHeadersView = this.getView(\"columnHeadersView\");\r\n        that._rowsView = this.getView(\"rowsView\");\r\n        that._pagerView = this.getView(\"pagerView\");\r\n        that._rowsView.resizeCompleted.add(function() {\r\n            if (that.option(\"allowColumnResizing\")) {\r\n                var targetPoint = that.getController(\"columnsResizer\")._targetPoint;\r\n                that.update(targetPoint ? targetPoint.y : null)\r\n            }\r\n        })\r\n    },\r\n    ctor: function(component) {\r\n        this.callBase(component);\r\n        this.positionChanged = (0, _callbacks2.default)()\r\n    }\r\n});\r\nvar DraggingHeaderViewController = _uiGrid_core2.default.ViewController.inherit({\r\n    _generatePointsByColumns: function(options) {\r\n        var that = this;\r\n        return _uiGrid_core4.default.getPointsByColumns(options.columnElements, function(point) {\r\n            return that._pointCreated(point, options.columns, options.targetDraggingPanel.getName(), options.sourceColumn)\r\n        }, options.isVerticalOrientation, options.startColumnIndex)\r\n    },\r\n    _pointCreated: function(point, columns, location, sourceColumn) {\r\n        var targetColumn = columns[point.columnIndex];\r\n        var prevColumn = columns[point.columnIndex - 1];\r\n        switch (location) {\r\n            case \"columnChooser\":\r\n                return true;\r\n            case \"headers\":\r\n                return sourceColumn && !sourceColumn.allowReordering || (!targetColumn || !targetColumn.allowReordering) && (!prevColumn || !prevColumn.allowReordering);\r\n            default:\r\n                return 0 === columns.length\r\n        }\r\n    },\r\n    _subscribeToEvents: function(draggingHeader, draggingPanels) {\r\n        var that = this;\r\n        (0, _iterator.each)(draggingPanels, function(_, draggingPanel) {\r\n            if (draggingPanel) {\r\n                var columns;\r\n                var rowCount = draggingPanel.getRowCount ? draggingPanel.getRowCount() : 1;\r\n                var nameDraggingPanel = draggingPanel.getName();\r\n                var subscribeToEvents = function(index, columnElement) {\r\n                    if (!columnElement) {\r\n                        return\r\n                    }\r\n                    var $columnElement = (0, _renderer2.default)(columnElement);\r\n                    var column = columns[index];\r\n                    if (draggingPanel.allowDragging(column, nameDraggingPanel, draggingPanels)) {\r\n                        $columnElement.addClass(that.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS));\r\n                        _events_engine2.default.on($columnElement, (0, _utils.addNamespace)(_drag2.default.start, MODULE_NAMESPACE), that.createAction(function(args) {\r\n                            var e = args.event;\r\n                            var eventData = (0, _utils.eventData)(e);\r\n                            draggingHeader.dragHeader({\r\n                                deltaX: eventData.x - (0, _renderer2.default)(e.currentTarget).offset().left,\r\n                                deltaY: eventData.y - (0, _renderer2.default)(e.currentTarget).offset().top,\r\n                                sourceColumn: column,\r\n                                index: column.index,\r\n                                columnIndex: index,\r\n                                columnElement: $columnElement,\r\n                                sourceLocation: nameDraggingPanel,\r\n                                draggingPanels: draggingPanels,\r\n                                rowIndex: that._columnsController.getRowIndex(column.index, true)\r\n                            })\r\n                        }));\r\n                        _events_engine2.default.on($columnElement, (0, _utils.addNamespace)(_drag2.default.move, MODULE_NAMESPACE), {\r\n                            that: draggingHeader\r\n                        }, that.createAction(draggingHeader.moveHeader));\r\n                        _events_engine2.default.on($columnElement, (0, _utils.addNamespace)(_drag2.default.end, MODULE_NAMESPACE), {\r\n                            that: draggingHeader\r\n                        }, that.createAction(draggingHeader.dropHeader))\r\n                    }\r\n                };\r\n                for (var i = 0; i < rowCount; i++) {\r\n                    var columnElements = draggingPanel.getColumnElements(i) || [];\r\n                    if (columnElements.length) {\r\n                        columns = draggingPanel.getColumns(i) || [];\r\n                        (0, _iterator.each)(columnElements, subscribeToEvents)\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    },\r\n    _unsubscribeFromEvents: function(draggingHeader, draggingPanels) {\r\n        var that = this;\r\n        (0, _iterator.each)(draggingPanels, function(_, draggingPanel) {\r\n            if (draggingPanel) {\r\n                var columnElements = draggingPanel.getColumnElements() || [];\r\n                (0, _iterator.each)(columnElements, function(index, columnElement) {\r\n                    var $columnElement = (0, _renderer2.default)(columnElement);\r\n                    _events_engine2.default.off($columnElement, (0, _utils.addNamespace)(_drag2.default.start, MODULE_NAMESPACE));\r\n                    _events_engine2.default.off($columnElement, (0, _utils.addNamespace)(_drag2.default.move, MODULE_NAMESPACE));\r\n                    _events_engine2.default.off($columnElement, (0, _utils.addNamespace)(_drag2.default.end, MODULE_NAMESPACE));\r\n                    $columnElement.removeClass(that.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS))\r\n                })\r\n            }\r\n        })\r\n    },\r\n    _getSeparator: function(targetLocation) {\r\n        return \"headers\" === targetLocation ? this._columnsSeparatorView : this._blockSeparatorView\r\n    },\r\n    hideSeparators: function(type) {\r\n        var blockSeparator = this._blockSeparatorView;\r\n        var columnsSeparator = this._columnsSeparatorView;\r\n        this._animationColumnIndex = null;\r\n        blockSeparator && blockSeparator.hide();\r\n        \"block\" !== type && columnsSeparator && columnsSeparator.hide()\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that.callBase();\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._columnHeadersView = that.getView(\"columnHeadersView\");\r\n        that._columnsSeparatorView = that.getView(\"columnsSeparatorView\");\r\n        that._draggingHeaderView = that.getView(\"draggingHeaderView\");\r\n        that._rowsView = that.getView(\"rowsView\");\r\n        that._blockSeparatorView = that.getView(\"blockSeparatorView\");\r\n        that._headerPanelView = that.getView(\"headerPanel\");\r\n        that._columnChooserView = that.getView(\"columnChooserView\");\r\n        var subscribeToEvents = function() {\r\n            if (that._draggingHeaderView) {\r\n                var draggingPanels = [that._columnChooserView, that._columnHeadersView, that._headerPanelView];\r\n                that._unsubscribeFromEvents(that._draggingHeaderView, draggingPanels);\r\n                that._subscribeToEvents(that._draggingHeaderView, draggingPanels)\r\n            }\r\n        };\r\n        that._columnHeadersView.renderCompleted.add(subscribeToEvents);\r\n        that._headerPanelView && that._headerPanelView.renderCompleted.add(subscribeToEvents);\r\n        that._columnChooserView && that._columnChooserView.renderCompleted.add(subscribeToEvents)\r\n    },\r\n    allowDrop: function(parameters) {\r\n        return this._columnsController.allowMoveColumn(parameters.sourceColumnIndex, parameters.targetColumnIndex, parameters.sourceLocation, parameters.targetLocation)\r\n    },\r\n    drag: function(parameters) {\r\n        var sourceIndex = parameters.sourceIndex;\r\n        var sourceLocation = parameters.sourceLocation;\r\n        var sourceColumnElement = parameters.sourceColumnElement;\r\n        var headersView = this._columnHeadersView;\r\n        var rowsView = this._rowsView;\r\n        if (sourceColumnElement) {\r\n            sourceColumnElement.css({\r\n                opacity: COLUMN_OPACITY\r\n            });\r\n            if (\"headers\" === sourceLocation) {\r\n                headersView && headersView.setRowsOpacity(sourceIndex, COLUMN_OPACITY);\r\n                rowsView && rowsView.setRowsOpacity(sourceIndex, COLUMN_OPACITY)\r\n            }\r\n        }\r\n    },\r\n    dock: function(parameters) {\r\n        var that = this;\r\n        var targetColumnIndex = _type2.default.isObject(parameters.targetColumnIndex) ? parameters.targetColumnIndex.columnIndex : parameters.targetColumnIndex;\r\n        var sourceLocation = parameters.sourceLocation;\r\n        var targetLocation = parameters.targetLocation;\r\n        var separator = that._getSeparator(targetLocation);\r\n        var hasTargetVisibleIndex = targetColumnIndex >= 0;\r\n        var showSeparator = function() {\r\n            if (that._animationColumnIndex !== targetColumnIndex) {\r\n                that.hideSeparators();\r\n                separator.element()[parameters.isLast ? \"insertAfter\" : \"insertBefore\"](parameters.targetColumnElement);\r\n                that._animationColumnIndex = targetColumnIndex;\r\n                separator.show(targetLocation)\r\n            }\r\n        };\r\n        that._columnHeadersView.element().find(\".\" + HEADER_ROW_CLASS).toggleClass(that.addWidgetPrefix(HEADERS_DROP_HIGHLIGHT_CLASS), \"headers\" !== sourceLocation && \"headers\" === targetLocation && !hasTargetVisibleIndex);\r\n        if (separator) {\r\n            if (that.allowDrop(parameters) && hasTargetVisibleIndex) {\r\n                if (\"group\" === targetLocation || \"columnChooser\" === targetLocation) {\r\n                    showSeparator()\r\n                } else {\r\n                    that.hideSeparators(\"block\");\r\n                    that.getController(\"tablePosition\").update(parameters.posY);\r\n                    separator.moveByX(parameters.posX - separator.width());\r\n                    separator.show()\r\n                }\r\n            } else {\r\n                that.hideSeparators()\r\n            }\r\n        }\r\n    },\r\n    drop: function(parameters) {\r\n        var sourceColumnElement = parameters.sourceColumnElement;\r\n        if (sourceColumnElement) {\r\n            sourceColumnElement.css({\r\n                opacity: \"\"\r\n            });\r\n            this._columnHeadersView.setRowsOpacity(parameters.sourceIndex, \"\");\r\n            this._rowsView.setRowsOpacity(parameters.sourceIndex, \"\");\r\n            this._columnHeadersView.element().find(\".\" + HEADER_ROW_CLASS).removeClass(this.addWidgetPrefix(HEADERS_DROP_HIGHLIGHT_CLASS))\r\n        }\r\n        if (this.allowDrop(parameters)) {\r\n            var separator = this._getSeparator(parameters.targetLocation);\r\n            if (separator) {\r\n                separator.hide()\r\n            }\r\n            this._columnsController.moveColumn(parameters.sourceColumnIndex, parameters.targetColumnIndex, parameters.sourceLocation, parameters.targetLocation)\r\n        }\r\n    },\r\n    dispose: function() {\r\n        if (this._draggingHeaderView) {\r\n            this._unsubscribeFromEvents(this._draggingHeaderView, [this._columnChooserView, this._columnHeadersView, this._headerPanelView])\r\n        }\r\n    }\r\n});\r\nmodule.exports = {\r\n    views: {\r\n        columnsSeparatorView: ColumnsSeparatorView,\r\n        blockSeparatorView: BlockSeparatorView,\r\n        draggingHeaderView: DraggingHeaderView,\r\n        trackerView: TrackerView\r\n    },\r\n    controllers: {\r\n        draggingHeader: DraggingHeaderViewController,\r\n        tablePosition: TablePositionViewController,\r\n        columnsResizer: ColumnsResizerViewController\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: {\r\n                _needUpdateRowHeight: function(itemCount) {\r\n                    var wordWrapEnabled = this.option(\"wordWrapEnabled\");\r\n                    var columnsResizerController = this.getController(\"columnsResizer\");\r\n                    var isResizing = columnsResizerController.isResizing();\r\n                    return this.callBase.apply(this, arguments) || itemCount > 0 && wordWrapEnabled && isResizing\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            editorFactory: {\r\n                renderFocusOverlay: function() {\r\n                    if (this.getController(\"columnsResizer\").isResizing()) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}