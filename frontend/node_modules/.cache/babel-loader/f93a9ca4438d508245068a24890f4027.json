{"ast":null,"code":"/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.row_dragging.js)\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _renderer = require(\"../../core/renderer\");\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _sortable = require(\"../sortable\");\n\nvar _sortable2 = _interopRequireDefault(_sortable);\n\nvar _uiGrid_core = require(\"./ui.grid_core.utils\");\n\nvar _browser = require(\"../../core/utils/browser\");\n\nvar _browser2 = _interopRequireDefault(_browser);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar COMMAND_HANDLE_CLASS = \"dx-command-drag\";\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\nvar HANDLE_ICON_CLASS = \"drag-icon\";\nvar ROWS_VIEW = \"rowsview\";\nvar SORTABLE_WITHOUT_HANDLE_CLASS = \"dx-sortable-without-handle\";\nvar RowDraggingExtender = {\n  init: function () {\n    this.callBase.apply(this, arguments);\n\n    this._updateHandleColumn();\n  },\n  _allowReordering: function () {\n    var rowDragging = this.option(\"rowDragging\");\n    return !!(rowDragging && (rowDragging.allowReordering || rowDragging.allowDropInsideItem || rowDragging.group));\n  },\n  _updateHandleColumn: function () {\n    var rowDragging = this.option(\"rowDragging\");\n\n    var allowReordering = this._allowReordering();\n\n    var columnsController = this._columnsController;\n    var isHandleColumnVisible = allowReordering && rowDragging.showDragIcons;\n    columnsController && columnsController.addCommandColumn({\n      type: \"drag\",\n      command: \"drag\",\n      visibleIndex: -2,\n      alignment: \"center\",\n      cssClass: COMMAND_HANDLE_CLASS,\n      width: \"auto\",\n      cellTemplate: this._getHandleTemplate(),\n      visible: isHandleColumnVisible\n    });\n    columnsController.columnOption(\"type:drag\", \"visible\", isHandleColumnVisible);\n  },\n  _renderContent: function () {\n    var _this = this;\n\n    var rowDragging = this.option(\"rowDragging\");\n\n    var allowReordering = this._allowReordering();\n\n    var $content = this.callBase.apply(this, arguments);\n    var isFixedTableRendering = this._isFixedTableRendering;\n    var sortableName = \"_sortable\";\n    var sortableFixedName = \"_sortableFixed\";\n    var currentSortableName = isFixedTableRendering ? sortableFixedName : sortableName;\n    var anotherSortableName = isFixedTableRendering ? sortableName : sortableFixedName;\n\n    if (allowReordering && $content.length) {\n      this[currentSortableName] = this._createComponent($content, _sortable2.default, (0, _extend.extend)({\n        component: this.component,\n        contentTemplate: null,\n        filter: \"> table > tbody > .dx-row:not(.dx-freespace-row):not(.dx-virtual-row)\",\n        dragTemplate: this._getDraggableRowTemplate(),\n        handle: rowDragging.showDragIcons && \".\".concat(COMMAND_HANDLE_CLASS),\n        dropFeedbackMode: \"indicate\"\n      }, rowDragging, {\n        onDragStart: function (e) {\n          var _rowDragging$onDragSt;\n\n          var row = e.component.getVisibleRows()[e.fromIndex];\n          e.itemData = row && row.data;\n          var isDataRow = row && \"data\" === row.rowType;\n          e.cancel = !isDataRow;\n          null === (_rowDragging$onDragSt = rowDragging.onDragStart) || void 0 === _rowDragging$onDragSt ? void 0 : _rowDragging$onDragSt.call(rowDragging, e);\n        },\n        dropFeedbackMode: _browser2.default.msie ? \"indicate\" : rowDragging.dropFeedbackMode,\n        onOptionChanged: function (e) {\n          var hasFixedSortable = _this[sortableFixedName];\n\n          if (hasFixedSortable) {\n            if (\"fromIndex\" === e.name || \"toIndex\" === e.name) {\n              _this[anotherSortableName].option(e.name, e.value);\n            }\n          }\n        }\n      }));\n      $content.toggleClass(SORTABLE_WITHOUT_HANDLE_CLASS, !rowDragging.showDragIcons);\n    }\n\n    return $content;\n  },\n  _getDraggableGridOptions: function (options) {\n    var gridOptions = this.option();\n    var columns = this.getColumns();\n    var $rowElement = (0, _renderer2.default)(this.getRowElement(options.rowIndex));\n    return {\n      dataSource: [{\n        id: 1,\n        parentId: 0\n      }],\n      showBorders: true,\n      showColumnHeaders: false,\n      scrolling: {\n        useNative: false,\n        showScrollbar: false\n      },\n      pager: {\n        visible: false\n      },\n      loadingTimeout: void 0,\n      columnFixing: gridOptions.columnFixing,\n      columnAutoWidth: gridOptions.columnAutoWidth,\n      showColumnLines: gridOptions.showColumnLines,\n      columns: columns.map(function (column) {\n        return {\n          width: column.width || column.visibleWidth,\n          fixed: column.fixed,\n          fixedPosition: column.fixedPosition\n        };\n      }),\n      onRowPrepared: function (e) {\n        var rowsView = e.component.getView(\"rowsView\");\n        (0, _renderer2.default)(e.rowElement).replaceWith($rowElement.eq(rowsView._isFixedTableRendering ? 1 : 0).clone());\n      }\n    };\n  },\n  _getDraggableRowTemplate: function () {\n    var _this2 = this;\n\n    return function (options) {\n      var $rootElement = _this2.component.$element();\n\n      var $dataGridContainer = (0, _renderer2.default)(\"<div>\").width($rootElement.width());\n\n      var items = _this2._dataController.items();\n\n      var row = items && items[options.fromIndex];\n\n      var gridOptions = _this2._getDraggableGridOptions(row);\n\n      _this2._createComponent($dataGridContainer, _this2.component.NAME, gridOptions);\n\n      $dataGridContainer.find(\".dx-gridbase-container\").children(\":not(.\".concat(_this2.addWidgetPrefix(ROWS_VIEW), \")\")).hide();\n      return $dataGridContainer;\n    };\n  },\n  _getHandleTemplate: function () {\n    var _this3 = this;\n\n    return function (container, options) {\n      if (\"data\" === options.rowType) {\n        (0, _renderer2.default)(container).addClass(CELL_FOCUS_DISABLED_CLASS);\n        return (0, _renderer2.default)(\"<span>\").addClass(_this3.addWidgetPrefix(HANDLE_ICON_CLASS));\n      } else {\n        (0, _uiGrid_core.setEmptyText)((0, _renderer2.default)(container));\n      }\n    };\n  },\n  optionChanged: function (args) {\n    if (\"rowDragging\" === args.name) {\n      this._updateHandleColumn();\n\n      this._invalidate(true, true);\n\n      args.handled = true;\n    }\n\n    this.callBase.apply(this, arguments);\n  }\n};\nmodule.exports = {\n  defaultOptions: function () {\n    return {\n      rowDragging: {\n        showDragIcons: true,\n        dropFeedbackMode: \"indicate\",\n        allowReordering: false,\n        allowDropInsideItem: false\n      }\n    };\n  },\n  extenders: {\n    views: {\n      rowsView: RowDraggingExtender\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/ticketSystem/frontend/node_modules/devextreme/ui/grid_core/ui.grid_core.row_dragging.js"],"names":["_renderer","require","_renderer2","_interopRequireDefault","_extend","_sortable","_sortable2","_uiGrid_core","_browser","_browser2","obj","__esModule","COMMAND_HANDLE_CLASS","CELL_FOCUS_DISABLED_CLASS","HANDLE_ICON_CLASS","ROWS_VIEW","SORTABLE_WITHOUT_HANDLE_CLASS","RowDraggingExtender","init","callBase","apply","arguments","_updateHandleColumn","_allowReordering","rowDragging","option","allowReordering","allowDropInsideItem","group","columnsController","_columnsController","isHandleColumnVisible","showDragIcons","addCommandColumn","type","command","visibleIndex","alignment","cssClass","width","cellTemplate","_getHandleTemplate","visible","columnOption","_renderContent","_this","$content","isFixedTableRendering","_isFixedTableRendering","sortableName","sortableFixedName","currentSortableName","anotherSortableName","length","_createComponent","default","extend","component","contentTemplate","filter","dragTemplate","_getDraggableRowTemplate","handle","concat","dropFeedbackMode","onDragStart","e","_rowDragging$onDragSt","row","getVisibleRows","fromIndex","itemData","data","isDataRow","rowType","cancel","call","msie","onOptionChanged","hasFixedSortable","name","value","toggleClass","_getDraggableGridOptions","options","gridOptions","columns","getColumns","$rowElement","getRowElement","rowIndex","dataSource","id","parentId","showBorders","showColumnHeaders","scrolling","useNative","showScrollbar","pager","loadingTimeout","columnFixing","columnAutoWidth","showColumnLines","map","column","visibleWidth","fixed","fixedPosition","onRowPrepared","rowsView","getView","rowElement","replaceWith","eq","clone","_this2","$rootElement","$element","$dataGridContainer","items","_dataController","NAME","find","children","addWidgetPrefix","hide","_this3","container","addClass","setEmptyText","optionChanged","args","_invalidate","handled","module","exports","defaultOptions","extenders","views"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.row_dragging.js)\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _renderer = require(\"../../core/renderer\");\r\nvar _renderer2 = _interopRequireDefault(_renderer);\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _sortable = require(\"../sortable\");\r\nvar _sortable2 = _interopRequireDefault(_sortable);\r\nvar _uiGrid_core = require(\"./ui.grid_core.utils\");\r\nvar _browser = require(\"../../core/utils/browser\");\r\nvar _browser2 = _interopRequireDefault(_browser);\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar COMMAND_HANDLE_CLASS = \"dx-command-drag\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar HANDLE_ICON_CLASS = \"drag-icon\";\r\nvar ROWS_VIEW = \"rowsview\";\r\nvar SORTABLE_WITHOUT_HANDLE_CLASS = \"dx-sortable-without-handle\";\r\nvar RowDraggingExtender = {\r\n    init: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._updateHandleColumn()\r\n    },\r\n    _allowReordering: function() {\r\n        var rowDragging = this.option(\"rowDragging\");\r\n        return !!(rowDragging && (rowDragging.allowReordering || rowDragging.allowDropInsideItem || rowDragging.group))\r\n    },\r\n    _updateHandleColumn: function() {\r\n        var rowDragging = this.option(\"rowDragging\");\r\n        var allowReordering = this._allowReordering();\r\n        var columnsController = this._columnsController;\r\n        var isHandleColumnVisible = allowReordering && rowDragging.showDragIcons;\r\n        columnsController && columnsController.addCommandColumn({\r\n            type: \"drag\",\r\n            command: \"drag\",\r\n            visibleIndex: -2,\r\n            alignment: \"center\",\r\n            cssClass: COMMAND_HANDLE_CLASS,\r\n            width: \"auto\",\r\n            cellTemplate: this._getHandleTemplate(),\r\n            visible: isHandleColumnVisible\r\n        });\r\n        columnsController.columnOption(\"type:drag\", \"visible\", isHandleColumnVisible)\r\n    },\r\n    _renderContent: function() {\r\n        var _this = this;\r\n        var rowDragging = this.option(\"rowDragging\");\r\n        var allowReordering = this._allowReordering();\r\n        var $content = this.callBase.apply(this, arguments);\r\n        var isFixedTableRendering = this._isFixedTableRendering;\r\n        var sortableName = \"_sortable\";\r\n        var sortableFixedName = \"_sortableFixed\";\r\n        var currentSortableName = isFixedTableRendering ? sortableFixedName : sortableName;\r\n        var anotherSortableName = isFixedTableRendering ? sortableName : sortableFixedName;\r\n        if (allowReordering && $content.length) {\r\n            this[currentSortableName] = this._createComponent($content, _sortable2.default, (0, _extend.extend)({\r\n                component: this.component,\r\n                contentTemplate: null,\r\n                filter: \"> table > tbody > .dx-row:not(.dx-freespace-row):not(.dx-virtual-row)\",\r\n                dragTemplate: this._getDraggableRowTemplate(),\r\n                handle: rowDragging.showDragIcons && \".\".concat(COMMAND_HANDLE_CLASS),\r\n                dropFeedbackMode: \"indicate\"\r\n            }, rowDragging, {\r\n                onDragStart: function(e) {\r\n                    var _rowDragging$onDragSt;\r\n                    var row = e.component.getVisibleRows()[e.fromIndex];\r\n                    e.itemData = row && row.data;\r\n                    var isDataRow = row && \"data\" === row.rowType;\r\n                    e.cancel = !isDataRow;\r\n                    null === (_rowDragging$onDragSt = rowDragging.onDragStart) || void 0 === _rowDragging$onDragSt ? void 0 : _rowDragging$onDragSt.call(rowDragging, e)\r\n                },\r\n                dropFeedbackMode: _browser2.default.msie ? \"indicate\" : rowDragging.dropFeedbackMode,\r\n                onOptionChanged: function(e) {\r\n                    var hasFixedSortable = _this[sortableFixedName];\r\n                    if (hasFixedSortable) {\r\n                        if (\"fromIndex\" === e.name || \"toIndex\" === e.name) {\r\n                            _this[anotherSortableName].option(e.name, e.value)\r\n                        }\r\n                    }\r\n                }\r\n            }));\r\n            $content.toggleClass(SORTABLE_WITHOUT_HANDLE_CLASS, !rowDragging.showDragIcons)\r\n        }\r\n        return $content\r\n    },\r\n    _getDraggableGridOptions: function(options) {\r\n        var gridOptions = this.option();\r\n        var columns = this.getColumns();\r\n        var $rowElement = (0, _renderer2.default)(this.getRowElement(options.rowIndex));\r\n        return {\r\n            dataSource: [{\r\n                id: 1,\r\n                parentId: 0\r\n            }],\r\n            showBorders: true,\r\n            showColumnHeaders: false,\r\n            scrolling: {\r\n                useNative: false,\r\n                showScrollbar: false\r\n            },\r\n            pager: {\r\n                visible: false\r\n            },\r\n            loadingTimeout: void 0,\r\n            columnFixing: gridOptions.columnFixing,\r\n            columnAutoWidth: gridOptions.columnAutoWidth,\r\n            showColumnLines: gridOptions.showColumnLines,\r\n            columns: columns.map(function(column) {\r\n                return {\r\n                    width: column.width || column.visibleWidth,\r\n                    fixed: column.fixed,\r\n                    fixedPosition: column.fixedPosition\r\n                }\r\n            }),\r\n            onRowPrepared: function(e) {\r\n                var rowsView = e.component.getView(\"rowsView\");\r\n                (0, _renderer2.default)(e.rowElement).replaceWith($rowElement.eq(rowsView._isFixedTableRendering ? 1 : 0).clone())\r\n            }\r\n        }\r\n    },\r\n    _getDraggableRowTemplate: function() {\r\n        var _this2 = this;\r\n        return function(options) {\r\n            var $rootElement = _this2.component.$element();\r\n            var $dataGridContainer = (0, _renderer2.default)(\"<div>\").width($rootElement.width());\r\n            var items = _this2._dataController.items();\r\n            var row = items && items[options.fromIndex];\r\n            var gridOptions = _this2._getDraggableGridOptions(row);\r\n            _this2._createComponent($dataGridContainer, _this2.component.NAME, gridOptions);\r\n            $dataGridContainer.find(\".dx-gridbase-container\").children(\":not(.\".concat(_this2.addWidgetPrefix(ROWS_VIEW), \")\")).hide();\r\n            return $dataGridContainer\r\n        }\r\n    },\r\n    _getHandleTemplate: function() {\r\n        var _this3 = this;\r\n        return function(container, options) {\r\n            if (\"data\" === options.rowType) {\r\n                (0, _renderer2.default)(container).addClass(CELL_FOCUS_DISABLED_CLASS);\r\n                return (0, _renderer2.default)(\"<span>\").addClass(_this3.addWidgetPrefix(HANDLE_ICON_CLASS))\r\n            } else {\r\n                (0, _uiGrid_core.setEmptyText)((0, _renderer2.default)(container))\r\n            }\r\n        }\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"rowDragging\" === args.name) {\r\n            this._updateHandleColumn();\r\n            this._invalidate(true, true);\r\n            args.handled = true\r\n        }\r\n        this.callBase.apply(this, arguments)\r\n    }\r\n};\r\nmodule.exports = {\r\n    defaultOptions: function() {\r\n        return {\r\n            rowDragging: {\r\n                showDragIcons: true,\r\n                dropFeedbackMode: \"indicate\",\r\n                allowReordering: false,\r\n                allowDropInsideItem: false\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: RowDraggingExtender\r\n        }\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}