{"ast":null,"code":"/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.filter_row.js)\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _renderer = require(\"../../core/renderer\");\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _events_engine = require(\"../../events/core/events_engine\");\n\nvar _events_engine2 = _interopRequireDefault(_events_engine);\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _utils = require(\"../../events/utils\");\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _iterator2 = _interopRequireDefault(_iterator);\n\nvar _uiGrid_core = require(\"./ui.grid_core.modules\");\n\nvar _uiGrid_core2 = _interopRequireDefault(_uiGrid_core);\n\nvar _uiGrid_core3 = require(\"./ui.grid_core.utils\");\n\nvar _uiGrid_core4 = _interopRequireDefault(_uiGrid_core3);\n\nvar _message = require(\"../../localization/message\");\n\nvar _message2 = _interopRequireDefault(_message);\n\nvar _editor = require(\"../editor/editor\");\n\nvar _editor2 = _interopRequireDefault(_editor);\n\nvar _overlay = require(\"../overlay\");\n\nvar _overlay2 = _interopRequireDefault(_overlay);\n\nvar _menu = require(\"../menu\");\n\nvar _menu2 = _interopRequireDefault(_menu);\n\nvar _accessibility = require(\"../shared/accessibility\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar OPERATION_ICONS = {\n  \"=\": \"filter-operation-equals\",\n  \"<>\": \"filter-operation-not-equals\",\n  \"<\": \"filter-operation-less\",\n  \"<=\": \"filter-operation-less-equal\",\n  \">\": \"filter-operation-greater\",\n  \">=\": \"filter-operation-greater-equal\",\n  \"default\": \"filter-operation-default\",\n  notcontains: \"filter-operation-not-contains\",\n  contains: \"filter-operation-contains\",\n  startswith: \"filter-operation-starts-with\",\n  endswith: \"filter-operation-ends-with\",\n  between: \"filter-operation-between\"\n};\nvar OPERATION_DESCRIPTORS = {\n  \"=\": \"equal\",\n  \"<>\": \"notEqual\",\n  \"<\": \"lessThan\",\n  \"<=\": \"lessThanOrEqual\",\n  \">\": \"greaterThan\",\n  \">=\": \"greaterThanOrEqual\",\n  startswith: \"startsWith\",\n  contains: \"contains\",\n  notcontains: \"notContains\",\n  endswith: \"endsWith\",\n  between: \"between\"\n};\nvar FILTERING_TIMEOUT = 700;\nvar CORRECT_FILTER_RANGE_OVERLAY_WIDTH = 1;\nvar FILTER_ROW_CLASS = \"filter-row\";\nvar FILTER_RANGE_OVERLAY_CLASS = \"filter-range-overlay\";\nvar FILTER_RANGE_START_CLASS = \"filter-range-start\";\nvar FILTER_RANGE_END_CLASS = \"filter-range-end\";\nvar MENU_CLASS = \"dx-menu\";\nvar EDITOR_WITH_MENU_CLASS = \"dx-editor-with-menu\";\nvar EDITOR_CONTAINER_CLASS = \"dx-editor-container\";\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\nvar FILTER_MENU = \"dx-filter-menu\";\nvar APPLY_BUTTON_CLASS = \"dx-apply-button\";\nvar HIGHLIGHT_OUTLINE_CLASS = \"dx-highlight-outline\";\nvar FOCUSED_CLASS = \"dx-focused\";\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\nvar FILTER_RANGE_CONTENT_CLASS = \"dx-filter-range-content\";\nvar FILTER_MODIFIED_CLASS = \"dx-filter-modified\";\nvar EDITORS_INPUT_SELECTOR = \"input:not([type='hidden'])\";\nvar BETWEEN_OPERATION_DATA_TYPES = [\"date\", \"datetime\", \"number\"];\n\nfunction isOnClickApplyFilterMode(that) {\n  return \"onClick\" === that.option(\"filterRow.applyFilter\");\n}\n\nvar ColumnHeadersViewFilterRowExtender = function () {\n  var getEditorInstance = function ($editorContainer) {\n    var $editor = $editorContainer && $editorContainer.children();\n    var componentNames = $editor && $editor.data(\"dxComponents\");\n    var editor = componentNames && componentNames.length && $editor.data(componentNames[0]);\n\n    if (editor instanceof _editor2.default) {\n      return editor;\n    }\n  };\n\n  var getRangeTextByFilterValue = function (that, column) {\n    var result = \"\";\n    var rangeEnd = \"\";\n    var filterValue = getColumnFilterValue(that, column);\n\n    var formatOptions = _uiGrid_core4.default.getFormatOptionsByColumn(column, \"filterRow\");\n\n    if (Array.isArray(filterValue)) {\n      result = _uiGrid_core4.default.formatValue(filterValue[0], formatOptions);\n      rangeEnd = _uiGrid_core4.default.formatValue(filterValue[1], formatOptions);\n\n      if (\"\" !== rangeEnd) {\n        result += \" - \" + rangeEnd;\n      }\n    } else {\n      if ((0, _type.isDefined)(filterValue)) {\n        result = _uiGrid_core4.default.formatValue(filterValue, formatOptions);\n      }\n    }\n\n    return result;\n  };\n\n  function getColumnFilterValue(that, column) {\n    if (column) {\n      return isOnClickApplyFilterMode(that) && void 0 !== column.bufferedFilterValue ? column.bufferedFilterValue : column.filterValue;\n    }\n  }\n\n  var getColumnSelectedFilterOperation = function (that, column) {\n    if (column) {\n      return isOnClickApplyFilterMode(that) && void 0 !== column.bufferedSelectedFilterOperation ? column.bufferedSelectedFilterOperation : column.selectedFilterOperation;\n    }\n  };\n\n  var isValidFilterValue = function (filterValue, column) {\n    if (column && BETWEEN_OPERATION_DATA_TYPES.indexOf(column.dataType) >= 0 && Array.isArray(filterValue)) {\n      return false;\n    }\n\n    return void 0 !== filterValue;\n  };\n\n  var getFilterValue = function (that, columnIndex, $editorContainer) {\n    var column = that._columnsController.columnOption(columnIndex);\n\n    var filterValue = getColumnFilterValue(that, column);\n    var isFilterRange = $editorContainer.closest(\".\" + that.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).length;\n    var isRangeStart = $editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS));\n\n    if (filterValue && Array.isArray(filterValue) && \"between\" === getColumnSelectedFilterOperation(that, column)) {\n      if (isRangeStart) {\n        return filterValue[0];\n      } else {\n        return filterValue[1];\n      }\n    }\n\n    return !isFilterRange && isValidFilterValue(filterValue, column) ? filterValue : null;\n  };\n\n  var normalizeFilterValue = function (that, filterValue, column, $editorContainer) {\n    if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\n      var columnFilterValue = getColumnFilterValue(that, column);\n\n      if ($editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS))) {\n        return [filterValue, Array.isArray(columnFilterValue) ? columnFilterValue[1] : void 0];\n      } else {\n        return [Array.isArray(columnFilterValue) ? columnFilterValue[0] : columnFilterValue, filterValue];\n      }\n    }\n\n    return filterValue;\n  };\n\n  var updateFilterValue = function (that, options) {\n    var value = \"\" === options.value ? null : options.value;\n    var $editorContainer = options.container;\n\n    var column = that._columnsController.columnOption(options.column.index);\n\n    var filterValue = getFilterValue(that, column.index, $editorContainer);\n\n    if (!(0, _type.isDefined)(filterValue) && !(0, _type.isDefined)(value)) {\n      return;\n    }\n\n    that._applyFilterViewController.setHighLight($editorContainer, filterValue !== value);\n\n    that._columnsController.columnOption(column.index, isOnClickApplyFilterMode(that) ? \"bufferedFilterValue\" : \"filterValue\", normalizeFilterValue(that, value, column, $editorContainer), options.notFireEvent);\n  };\n\n  return {\n    _updateEditorValue: function (column, $editorContainer) {\n      var that = this;\n      var editor = getEditorInstance($editorContainer);\n      editor && editor.option(\"value\", getFilterValue(that, column.index, $editorContainer));\n    },\n    _columnOptionChanged: function (e) {\n      var that = this;\n      var optionNames = e.optionNames;\n      var $cell;\n      var $editorContainer;\n      var $editorRangeElements;\n      var $menu;\n\n      if (_uiGrid_core4.default.checkChanges(optionNames, [\"filterValue\", \"bufferedFilterValue\", \"selectedFilterOperation\", \"bufferedSelectedFilterOperation\"]) && void 0 !== e.columnIndex) {\n        var visibleIndex = that._columnsController.getVisibleIndex(e.columnIndex);\n\n        var column = that._columnsController.columnOption(e.columnIndex);\n\n        $cell = that._getCellElement(that.element().find(\".\" + that.addWidgetPrefix(FILTER_ROW_CLASS)).index(), visibleIndex) || (0, _renderer2.default)();\n        $editorContainer = $cell.find(\".\" + EDITOR_CONTAINER_CLASS).first();\n\n        if (optionNames.filterValue || optionNames.bufferedFilterValue) {\n          that._updateEditorValue(column, $editorContainer);\n\n          var overlayInstance = $cell.find(\".\" + that.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).data(\"dxOverlay\");\n\n          if (overlayInstance) {\n            $editorRangeElements = overlayInstance.$content().find(\".\" + EDITOR_CONTAINER_CLASS);\n\n            that._updateEditorValue(column, $editorRangeElements.first());\n\n            that._updateEditorValue(column, $editorRangeElements.last());\n          }\n\n          if (!overlayInstance || !overlayInstance.option(\"visible\")) {\n            that._updateFilterRangeContent($cell, getRangeTextByFilterValue(that, column));\n          }\n        }\n\n        if (optionNames.selectedFilterOperation || optionNames.bufferedSelectedFilterOperation) {\n          if (visibleIndex >= 0 && column) {\n            $menu = $cell.find(\".\" + MENU_CLASS);\n\n            if ($menu.length) {\n              that._updateFilterOperationChooser($menu, column, $editorContainer);\n\n              if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\n                that._renderFilterRangeContent($cell, column);\n              } else {\n                if ($editorContainer.find(\".\" + FILTER_RANGE_CONTENT_CLASS).length) {\n                  that._renderEditor($editorContainer, that._getEditorOptions($editorContainer, column));\n\n                  that._hideFilterRange();\n                }\n              }\n            }\n          }\n        }\n\n        return;\n      }\n\n      that.callBase(e);\n    },\n    _renderCore: function () {\n      this._filterRangeOverlayInstance = null;\n      this.callBase.apply(this, arguments);\n    },\n    _resizeCore: function () {\n      this.callBase.apply(this, arguments);\n      this._filterRangeOverlayInstance && this._filterRangeOverlayInstance.repaint();\n    },\n    isFilterRowVisible: function () {\n      return this._isElementVisible(this.option(\"filterRow\"));\n    },\n    isVisible: function () {\n      return this.callBase() || this.isFilterRowVisible();\n    },\n    init: function () {\n      this.callBase();\n      this._applyFilterViewController = this.getController(\"applyFilter\");\n    },\n    _initFilterRangeOverlay: function ($cell, column) {\n      var that = this;\n      var sharedData = {};\n      var $editorContainer = $cell.find(\".dx-editor-container\");\n      var $overlay = (0, _renderer2.default)(\"<div>\").addClass(that.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).appendTo($cell);\n      return that._createComponent($overlay, _overlay2.default, {\n        height: \"auto\",\n        shading: false,\n        showTitle: false,\n        focusStateEnabled: false,\n        closeOnTargetScroll: false,\n        closeOnOutsideClick: true,\n        animation: false,\n        position: {\n          my: \"top\",\n          at: \"top\",\n          of: $editorContainer.length && $editorContainer || $cell,\n          offset: \"0 -1\"\n        },\n        contentTemplate: function (contentElement) {\n          var editorOptions;\n          var $editor = (0, _renderer2.default)(\"<div>\").addClass(EDITOR_CONTAINER_CLASS + \" \" + that.addWidgetPrefix(FILTER_RANGE_START_CLASS)).appendTo(contentElement);\n          column = that._columnsController.columnOption(column.index);\n          editorOptions = that._getEditorOptions($editor, column);\n          editorOptions.sharedData = sharedData;\n\n          that._renderEditor($editor, editorOptions);\n\n          _events_engine2.default.on($editor.find(EDITORS_INPUT_SELECTOR), \"keydown\", function (e) {\n            var $prevElement = $cell.find(\"[tabindex]\").not(e.target).first();\n\n            if (\"tab\" === (0, _utils.normalizeKeyName)(e) && e.shiftKey) {\n              e.preventDefault();\n\n              that._hideFilterRange();\n\n              if (!$prevElement.length) {\n                $prevElement = $cell.prev().find(\"[tabindex]\").last();\n              }\n\n              _events_engine2.default.trigger($prevElement, \"focus\");\n            }\n          });\n\n          $editor = (0, _renderer2.default)(\"<div>\").addClass(EDITOR_CONTAINER_CLASS + \" \" + that.addWidgetPrefix(FILTER_RANGE_END_CLASS)).appendTo(contentElement);\n          editorOptions = that._getEditorOptions($editor, column);\n          editorOptions.sharedData = sharedData;\n\n          that._renderEditor($editor, editorOptions);\n\n          _events_engine2.default.on($editor.find(EDITORS_INPUT_SELECTOR), \"keydown\", function (e) {\n            if (\"tab\" === (0, _utils.normalizeKeyName)(e) && !e.shiftKey) {\n              e.preventDefault();\n\n              that._hideFilterRange();\n\n              _events_engine2.default.trigger($cell.next().find(\"[tabindex]\").first(), \"focus\");\n            }\n          });\n\n          return (0, _renderer2.default)(contentElement).addClass(that.getWidgetContainerClass());\n        },\n        onShown: function (e) {\n          var $editor = e.component.$content().find(\".\" + EDITOR_CONTAINER_CLASS).first();\n\n          _events_engine2.default.trigger($editor.find(EDITORS_INPUT_SELECTOR), \"focus\");\n        },\n        onHidden: function () {\n          column = that._columnsController.columnOption(column.index);\n          $cell.find(\".\" + MENU_CLASS).parent().addClass(EDITOR_WITH_MENU_CLASS);\n\n          if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\n            that._updateFilterRangeContent($cell, getRangeTextByFilterValue(that, column));\n\n            that.component.updateDimensions();\n          }\n        }\n      });\n    },\n    _updateFilterRangeOverlay: function (options) {\n      var overlayInstance = this._filterRangeOverlayInstance;\n      overlayInstance && overlayInstance.option(options);\n    },\n    _showFilterRange: function ($cell, column) {\n      var that = this;\n      var $overlay = $cell.children(\".\" + that.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS));\n      var overlayInstance = $overlay.length && $overlay.data(\"dxOverlay\");\n\n      if (!overlayInstance && column) {\n        overlayInstance = that._initFilterRangeOverlay($cell, column);\n      }\n\n      if (!overlayInstance.option(\"visible\")) {\n        that._filterRangeOverlayInstance && that._filterRangeOverlayInstance.hide();\n        that._filterRangeOverlayInstance = overlayInstance;\n\n        that._updateFilterRangeOverlay({\n          width: $cell.outerWidth(true) + CORRECT_FILTER_RANGE_OVERLAY_WIDTH\n        });\n\n        that._filterRangeOverlayInstance && that._filterRangeOverlayInstance.show();\n      }\n    },\n    _hideFilterRange: function () {\n      var overlayInstance = this._filterRangeOverlayInstance;\n      overlayInstance && overlayInstance.hide();\n    },\n    getFilterRangeOverlayInstance: function () {\n      return this._filterRangeOverlayInstance;\n    },\n    _createRow: function (row) {\n      var _this = this;\n\n      var $row = this.callBase(row);\n\n      if (\"filter\" === row.rowType) {\n        $row.addClass(this.addWidgetPrefix(FILTER_ROW_CLASS));\n\n        if (!this.option(\"useLegacyKeyboardNavigation\")) {\n          _events_engine2.default.on($row, \"keydown\", function (event) {\n            return (0, _accessibility.selectView)(\"filterRow\", _this, event);\n          });\n        }\n      }\n\n      return $row;\n    },\n    _getRows: function () {\n      var result = this.callBase();\n\n      if (this.isFilterRowVisible()) {\n        result.push({\n          rowType: \"filter\"\n        });\n      }\n\n      return result;\n    },\n    _renderFilterCell: function (cell, options) {\n      var that = this;\n      var column = options.column;\n      var $cell = (0, _renderer2.default)(cell);\n\n      if (that.component.option(\"showColumnHeaders\")) {\n        that.setAria(\"describedby\", column.headerId, $cell);\n      }\n\n      that.setAria(\"label\", _message2.default.format(\"dxDataGrid-ariaFilterCell\"), $cell);\n      $cell.addClass(EDITOR_CELL_CLASS);\n      var $container = (0, _renderer2.default)(\"<div>\").appendTo($cell);\n      var $editorContainer = (0, _renderer2.default)(\"<div>\").addClass(EDITOR_CONTAINER_CLASS).appendTo($container);\n\n      if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\n        that._renderFilterRangeContent($cell, column);\n      } else {\n        var editorOptions = that._getEditorOptions($editorContainer, column);\n\n        that._renderEditor($editorContainer, editorOptions);\n      }\n\n      var alignment = column.alignment;\n\n      if (alignment && \"center\" !== alignment) {\n        $cell.find(EDITORS_INPUT_SELECTOR).first().css(\"textAlign\", column.alignment);\n      }\n\n      if (column.filterOperations && column.filterOperations.length) {\n        that._renderFilterOperationChooser($container, column, $editorContainer);\n      }\n    },\n    _renderCellContent: function ($cell, options) {\n      var that = this;\n      var column = options.column;\n\n      if (\"filter\" === options.rowType) {\n        if (column.command) {\n          $cell.html(\"&nbsp;\");\n        } else {\n          if (column.allowFiltering) {\n            that.renderTemplate($cell, that._renderFilterCell.bind(that), options).done(function () {\n              that._updateCell($cell, options);\n            });\n            return;\n          }\n        }\n      }\n\n      that.callBase($cell, options);\n    },\n    _getEditorOptions: function ($editorContainer, column) {\n      var that = this;\n      var accessibilityOptions = {\n        editorOptions: {\n          inputAttr: that._getFilterInputAccessibilityAttributes(column)\n        }\n      };\n      var result = (0, _extend.extend)(accessibilityOptions, column, {\n        value: getFilterValue(that, column.index, $editorContainer),\n        parentType: \"filterRow\",\n        showAllText: that.option(\"filterRow.showAllText\"),\n        updateValueTimeout: \"onClick\" === that.option(\"filterRow.applyFilter\") ? 0 : FILTERING_TIMEOUT,\n        width: null,\n        setValue: function (value, notFireEvent) {\n          updateFilterValue(that, {\n            column: column,\n            value: value,\n            container: $editorContainer,\n            notFireEvent: notFireEvent\n          });\n        }\n      });\n\n      if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\n        if ($editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS))) {\n          result.placeholder = that.option(\"filterRow.betweenStartText\");\n        } else {\n          result.placeholder = that.option(\"filterRow.betweenEndText\");\n        }\n      }\n\n      return result;\n    },\n    _getFilterInputAccessibilityAttributes: function (column) {\n      var columnAriaLabel = _message2.default.format(\"dxDataGrid-ariaFilterCell\");\n\n      if (this.component.option(\"showColumnHeaders\")) {\n        return {\n          \"aria-label\": columnAriaLabel,\n          \"aria-describedby\": column.headerId\n        };\n      }\n\n      return {\n        \"aria-label\": columnAriaLabel\n      };\n    },\n    _renderEditor: function ($editorContainer, options) {\n      $editorContainer.empty();\n      return this.getController(\"editorFactory\").createEditor((0, _renderer2.default)(\"<div>\").appendTo($editorContainer), options);\n    },\n    _renderFilterRangeContent: function ($cell, column) {\n      var that = this;\n      var $editorContainer = $cell.find(\".\" + EDITOR_CONTAINER_CLASS).first();\n      $editorContainer.empty();\n      var $filterRangeContent = (0, _renderer2.default)(\"<div>\").addClass(FILTER_RANGE_CONTENT_CLASS).attr(\"tabindex\", this.option(\"tabIndex\"));\n\n      _events_engine2.default.on($filterRangeContent, \"focusin\", function () {\n        that._showFilterRange($cell, column);\n      });\n\n      $filterRangeContent.appendTo($editorContainer);\n\n      that._updateFilterRangeContent($cell, getRangeTextByFilterValue(that, column));\n    },\n    _updateFilterRangeContent: function ($cell, value) {\n      var $filterRangeContent = $cell.find(\".\" + FILTER_RANGE_CONTENT_CLASS);\n\n      if ($filterRangeContent.length) {\n        if (\"\" === value) {\n          $filterRangeContent.html(\"&nbsp;\");\n        } else {\n          $filterRangeContent.text(value);\n        }\n      }\n    },\n    _updateFilterOperationChooser: function ($menu, column, $editorContainer) {\n      var that = this;\n      var isCellWasFocused;\n\n      var restoreFocus = function () {\n        var menu = _menu2.default.getInstance($menu);\n\n        menu && menu.option(\"focusedElement\", null);\n        isCellWasFocused && that._focusEditor($editorContainer);\n      };\n\n      that._createComponent($menu, _menu2.default, {\n        integrationOptions: {},\n        activeStateEnabled: false,\n        selectionMode: \"single\",\n        cssClass: that.getWidgetContainerClass() + \" \" + CELL_FOCUS_DISABLED_CLASS + \" \" + FILTER_MENU,\n        showFirstSubmenuMode: \"onHover\",\n        hideSubmenuOnMouseLeave: true,\n        items: [{\n          disabled: column.filterOperations && column.filterOperations.length ? false : true,\n          icon: OPERATION_ICONS[getColumnSelectedFilterOperation(that, column) || \"default\"],\n          selectable: false,\n          items: that._getFilterOperationMenuItems(column)\n        }],\n        onItemClick: function (properties) {\n          var selectedFilterOperation = properties.itemData.name;\n          var columnSelectedFilterOperation = getColumnSelectedFilterOperation(that, column);\n          var notFocusEditor = false;\n          var isOnClickMode = isOnClickApplyFilterMode(that);\n          var options = {};\n\n          if (properties.itemData.items || selectedFilterOperation && selectedFilterOperation === columnSelectedFilterOperation) {\n            return;\n          }\n\n          if (selectedFilterOperation) {\n            options[isOnClickMode ? \"bufferedSelectedFilterOperation\" : \"selectedFilterOperation\"] = selectedFilterOperation;\n\n            if (\"between\" === selectedFilterOperation || \"between\" === columnSelectedFilterOperation) {\n              notFocusEditor = \"between\" === selectedFilterOperation;\n              options[isOnClickMode ? \"bufferedFilterValue\" : \"filterValue\"] = null;\n            }\n          } else {\n            options[isOnClickMode ? \"bufferedFilterValue\" : \"filterValue\"] = null;\n            options[isOnClickMode ? \"bufferedSelectedFilterOperation\" : \"selectedFilterOperation\"] = column.defaultSelectedFilterOperation || null;\n          }\n\n          that._columnsController.columnOption(column.index, options);\n\n          that._applyFilterViewController.setHighLight($editorContainer, true);\n\n          if (!selectedFilterOperation) {\n            var editor = getEditorInstance($editorContainer);\n\n            if (editor && \"dxDateBox\" === editor.NAME && !editor.option(\"isValid\")) {\n              editor.reset();\n              editor.option(\"isValid\", true);\n            }\n          }\n\n          if (!notFocusEditor) {\n            that._focusEditor($editorContainer);\n          } else {\n            that._showFilterRange($editorContainer.closest(\".\" + EDITOR_CELL_CLASS), column);\n          }\n        },\n        onSubmenuShown: function () {\n          isCellWasFocused = that._isEditorFocused($editorContainer);\n          that.getController(\"editorFactory\").loseFocus();\n        },\n        onSubmenuHiding: function () {\n          _events_engine2.default.trigger($menu, \"blur\");\n\n          restoreFocus();\n        },\n        onContentReady: function (e) {\n          _events_engine2.default.on($menu, \"blur\", function () {\n            var menu = e.component;\n\n            menu._hideSubmenu(menu._visibleSubmenu);\n\n            restoreFocus();\n          });\n        },\n        rtlEnabled: that.option(\"rtlEnabled\")\n      });\n    },\n    _isEditorFocused: function ($container) {\n      return $container.hasClass(FOCUSED_CLASS) || $container.parents(\".\" + FOCUSED_CLASS).length;\n    },\n    _focusEditor: function ($container) {\n      this.getController(\"editorFactory\").focus($container);\n\n      _events_engine2.default.trigger($container.find(EDITORS_INPUT_SELECTOR), \"focus\");\n    },\n    _renderFilterOperationChooser: function ($container, column, $editorContainer) {\n      var that = this;\n      var $menu;\n\n      if (that.option(\"filterRow.showOperationChooser\")) {\n        $container.addClass(EDITOR_WITH_MENU_CLASS);\n        $menu = (0, _renderer2.default)(\"<div>\").prependTo($container);\n\n        that._updateFilterOperationChooser($menu, column, $editorContainer);\n      }\n    },\n    _getFilterOperationMenuItems: function (column) {\n      var that = this;\n      var result = [{}];\n      var filterRowOptions = that.option(\"filterRow\");\n      var operationDescriptions = filterRowOptions && filterRowOptions.operationDescriptions || {};\n\n      if (column.filterOperations && column.filterOperations.length) {\n        var availableFilterOperations = column.filterOperations.filter(function (value) {\n          return (0, _type.isDefined)(OPERATION_DESCRIPTORS[value]);\n        });\n        result = _iterator2.default.map(availableFilterOperations, function (value) {\n          var descriptionName = OPERATION_DESCRIPTORS[value];\n          return {\n            name: value,\n            selected: (getColumnSelectedFilterOperation(that, column) || column.defaultFilterOperation) === value,\n            text: operationDescriptions[descriptionName],\n            icon: OPERATION_ICONS[value]\n          };\n        });\n        result.push({\n          name: null,\n          text: filterRowOptions && filterRowOptions.resetOperationText,\n          icon: OPERATION_ICONS.default\n        });\n      }\n\n      return result;\n    },\n    optionChanged: function (args) {\n      var that = this;\n\n      switch (args.name) {\n        case \"filterRow\":\n        case \"showColumnLines\":\n          this._invalidate(true, true);\n\n          args.handled = true;\n          break;\n\n        default:\n          that.callBase(args);\n      }\n    }\n  };\n}();\n\nvar DataControllerFilterRowExtender = {\n  skipCalculateColumnFilters: function () {\n    return false;\n  },\n  _calculateAdditionalFilter: function () {\n    if (this.skipCalculateColumnFilters()) {\n      return this.callBase();\n    }\n\n    var filters = [this.callBase()];\n\n    var columns = this._columnsController.getVisibleColumns(null, true);\n\n    _iterator2.default.each(columns, function () {\n      if (this.allowFiltering && this.calculateFilterExpression && (0, _type.isDefined)(this.filterValue)) {\n        var filter = this.createFilterExpression(this.filterValue, this.selectedFilterOperation || this.defaultFilterOperation, \"filterRow\");\n        filters.push(filter);\n      }\n    });\n\n    return _uiGrid_core4.default.combineFilters(filters);\n  }\n};\nexports.ApplyFilterViewController = _uiGrid_core2.default.ViewController.inherit({\n  _getHeaderPanel: function () {\n    if (!this._headerPanel) {\n      this._headerPanel = this.getView(\"headerPanel\");\n    }\n\n    return this._headerPanel;\n  },\n  setHighLight: function ($element, value) {\n    if (isOnClickApplyFilterMode(this)) {\n      $element && $element.toggleClass(HIGHLIGHT_OUTLINE_CLASS, value) && $element.closest(\".\" + EDITOR_CELL_CLASS).toggleClass(FILTER_MODIFIED_CLASS, value);\n\n      this._getHeaderPanel().enableApplyButton(value);\n    }\n  },\n  applyFilter: function () {\n    var columnsController = this.getController(\"columns\");\n    var columns = columnsController.getColumns();\n    columnsController.beginUpdate();\n\n    for (var i = 0; i < columns.length; i++) {\n      var column = columns[i];\n\n      if (void 0 !== column.bufferedFilterValue) {\n        columnsController.columnOption(i, \"filterValue\", column.bufferedFilterValue);\n        column.bufferedFilterValue = void 0;\n      }\n\n      if (void 0 !== column.bufferedSelectedFilterOperation) {\n        columnsController.columnOption(i, \"selectedFilterOperation\", column.bufferedSelectedFilterOperation);\n        column.bufferedSelectedFilterOperation = void 0;\n      }\n    }\n\n    columnsController.endUpdate();\n    this.removeHighLights();\n  },\n  removeHighLights: function () {\n    if (isOnClickApplyFilterMode(this)) {\n      var columnHeadersViewElement = this.getView(\"columnHeadersView\").element();\n      columnHeadersViewElement.find(\".\" + this.addWidgetPrefix(FILTER_ROW_CLASS) + \" .\" + HIGHLIGHT_OUTLINE_CLASS).removeClass(HIGHLIGHT_OUTLINE_CLASS);\n      columnHeadersViewElement.find(\".\" + this.addWidgetPrefix(FILTER_ROW_CLASS) + \" .\" + FILTER_MODIFIED_CLASS).removeClass(FILTER_MODIFIED_CLASS);\n\n      this._getHeaderPanel().enableApplyButton(false);\n    }\n  }\n});\nmodule.exports = {\n  defaultOptions: function () {\n    return {\n      filterRow: {\n        visible: false,\n        showOperationChooser: true,\n        showAllText: _message2.default.format(\"dxDataGrid-filterRowShowAllText\"),\n        resetOperationText: _message2.default.format(\"dxDataGrid-filterRowResetOperationText\"),\n        applyFilter: \"auto\",\n        applyFilterText: _message2.default.format(\"dxDataGrid-applyFilterText\"),\n        operationDescriptions: {\n          equal: _message2.default.format(\"dxDataGrid-filterRowOperationEquals\"),\n          notEqual: _message2.default.format(\"dxDataGrid-filterRowOperationNotEquals\"),\n          lessThan: _message2.default.format(\"dxDataGrid-filterRowOperationLess\"),\n          lessThanOrEqual: _message2.default.format(\"dxDataGrid-filterRowOperationLessOrEquals\"),\n          greaterThan: _message2.default.format(\"dxDataGrid-filterRowOperationGreater\"),\n          greaterThanOrEqual: _message2.default.format(\"dxDataGrid-filterRowOperationGreaterOrEquals\"),\n          startsWith: _message2.default.format(\"dxDataGrid-filterRowOperationStartsWith\"),\n          contains: _message2.default.format(\"dxDataGrid-filterRowOperationContains\"),\n          notContains: _message2.default.format(\"dxDataGrid-filterRowOperationNotContains\"),\n          endsWith: _message2.default.format(\"dxDataGrid-filterRowOperationEndsWith\"),\n          between: _message2.default.format(\"dxDataGrid-filterRowOperationBetween\"),\n          isBlank: _message2.default.format(\"dxFilterBuilder-filterOperationIsBlank\"),\n          isNotBlank: _message2.default.format(\"dxFilterBuilder-filterOperationIsNotBlank\")\n        },\n        betweenStartText: _message2.default.format(\"dxDataGrid-filterRowOperationBetweenStartText\"),\n        betweenEndText: _message2.default.format(\"dxDataGrid-filterRowOperationBetweenEndText\")\n      }\n    };\n  },\n  controllers: {\n    applyFilter: exports.ApplyFilterViewController\n  },\n  extenders: {\n    controllers: {\n      data: DataControllerFilterRowExtender,\n      columnsResizer: {\n        _startResizing: function () {\n          var that = this;\n          that.callBase.apply(that, arguments);\n\n          if (that.isResizing()) {\n            var overlayInstance = that._columnHeadersView.getFilterRangeOverlayInstance();\n\n            if (overlayInstance) {\n              var cellIndex = overlayInstance.$element().closest(\"td\").index();\n\n              if (cellIndex === that._targetPoint.columnIndex || cellIndex === that._targetPoint.columnIndex + 1) {\n                overlayInstance.$content().hide();\n              }\n            }\n          }\n        },\n        _endResizing: function () {\n          var that = this;\n          var $cell;\n\n          if (that.isResizing()) {\n            var overlayInstance = that._columnHeadersView.getFilterRangeOverlayInstance();\n\n            if (overlayInstance) {\n              $cell = overlayInstance.$element().closest(\"td\");\n\n              that._columnHeadersView._updateFilterRangeOverlay({\n                width: $cell.outerWidth(true) + CORRECT_FILTER_RANGE_OVERLAY_WIDTH\n              });\n\n              overlayInstance.$content().show();\n            }\n          }\n\n          that.callBase.apply(that, arguments);\n        }\n      }\n    },\n    views: {\n      columnHeadersView: ColumnHeadersViewFilterRowExtender,\n      headerPanel: {\n        _getToolbarItems: function () {\n          var items = this.callBase();\n\n          var filterItem = this._prepareFilterItem(items);\n\n          return filterItem.concat(items);\n        },\n        _prepareFilterItem: function () {\n          var that = this;\n          var filterItem = [];\n\n          if (that._isShowApplyFilterButton()) {\n            var hintText = that.option(\"filterRow.applyFilterText\");\n\n            var columns = that._columnsController.getColumns();\n\n            var disabled = !columns.filter(function (column) {\n              return void 0 !== column.bufferedFilterValue;\n            }).length;\n\n            var onInitialized = function (e) {\n              (0, _renderer2.default)(e.element).addClass(that._getToolbarButtonClass(APPLY_BUTTON_CLASS));\n            };\n\n            var onClickHandler = function () {\n              that._applyFilterViewController.applyFilter();\n            };\n\n            var toolbarItem = {\n              widget: \"dxButton\",\n              options: {\n                icon: \"apply-filter\",\n                disabled: disabled,\n                onClick: onClickHandler,\n                hint: hintText,\n                text: hintText,\n                onInitialized: onInitialized\n              },\n              showText: \"inMenu\",\n              name: \"applyFilterButton\",\n              location: \"after\",\n              locateInMenu: \"auto\",\n              sortIndex: 10\n            };\n            filterItem.push(toolbarItem);\n          }\n\n          return filterItem;\n        },\n        _isShowApplyFilterButton: function () {\n          var filterRowOptions = this.option(\"filterRow\");\n          return filterRowOptions && filterRowOptions.visible && \"onClick\" === filterRowOptions.applyFilter;\n        },\n        init: function () {\n          this.callBase();\n          this._dataController = this.getController(\"data\");\n          this._applyFilterViewController = this.getController(\"applyFilter\");\n        },\n        enableApplyButton: function (value) {\n          this.setToolbarItemDisabled(\"applyFilterButton\", !value);\n        },\n        isVisible: function () {\n          return this.callBase() || this._isShowApplyFilterButton();\n        },\n        optionChanged: function (args) {\n          if (\"filterRow\" === args.name) {\n            this._invalidate();\n\n            args.handled = true;\n          } else {\n            this.callBase(args);\n          }\n        }\n      }\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/ticketSystem/frontend/node_modules/devextreme/ui/grid_core/ui.grid_core.filter_row.js"],"names":["_renderer","require","_renderer2","_interopRequireDefault","_events_engine","_events_engine2","_type","_extend","_utils","_iterator","_iterator2","_uiGrid_core","_uiGrid_core2","_uiGrid_core3","_uiGrid_core4","_message","_message2","_editor","_editor2","_overlay","_overlay2","_menu","_menu2","_accessibility","obj","__esModule","OPERATION_ICONS","notcontains","contains","startswith","endswith","between","OPERATION_DESCRIPTORS","FILTERING_TIMEOUT","CORRECT_FILTER_RANGE_OVERLAY_WIDTH","FILTER_ROW_CLASS","FILTER_RANGE_OVERLAY_CLASS","FILTER_RANGE_START_CLASS","FILTER_RANGE_END_CLASS","MENU_CLASS","EDITOR_WITH_MENU_CLASS","EDITOR_CONTAINER_CLASS","EDITOR_CELL_CLASS","FILTER_MENU","APPLY_BUTTON_CLASS","HIGHLIGHT_OUTLINE_CLASS","FOCUSED_CLASS","CELL_FOCUS_DISABLED_CLASS","FILTER_RANGE_CONTENT_CLASS","FILTER_MODIFIED_CLASS","EDITORS_INPUT_SELECTOR","BETWEEN_OPERATION_DATA_TYPES","isOnClickApplyFilterMode","that","option","ColumnHeadersViewFilterRowExtender","getEditorInstance","$editorContainer","$editor","children","componentNames","data","editor","length","default","getRangeTextByFilterValue","column","result","rangeEnd","filterValue","getColumnFilterValue","formatOptions","getFormatOptionsByColumn","Array","isArray","formatValue","isDefined","bufferedFilterValue","getColumnSelectedFilterOperation","bufferedSelectedFilterOperation","selectedFilterOperation","isValidFilterValue","indexOf","dataType","getFilterValue","columnIndex","_columnsController","columnOption","isFilterRange","closest","addWidgetPrefix","isRangeStart","hasClass","normalizeFilterValue","columnFilterValue","updateFilterValue","options","value","container","index","_applyFilterViewController","setHighLight","notFireEvent","_updateEditorValue","_columnOptionChanged","e","optionNames","$cell","$editorRangeElements","$menu","checkChanges","visibleIndex","getVisibleIndex","_getCellElement","element","find","first","overlayInstance","$content","last","_updateFilterRangeContent","_updateFilterOperationChooser","_renderFilterRangeContent","_renderEditor","_getEditorOptions","_hideFilterRange","callBase","_renderCore","_filterRangeOverlayInstance","apply","arguments","_resizeCore","repaint","isFilterRowVisible","_isElementVisible","isVisible","init","getController","_initFilterRangeOverlay","sharedData","$overlay","addClass","appendTo","_createComponent","height","shading","showTitle","focusStateEnabled","closeOnTargetScroll","closeOnOutsideClick","animation","position","my","at","of","offset","contentTemplate","contentElement","editorOptions","on","$prevElement","not","target","normalizeKeyName","shiftKey","preventDefault","prev","trigger","next","getWidgetContainerClass","onShown","component","onHidden","parent","updateDimensions","_updateFilterRangeOverlay","_showFilterRange","hide","width","outerWidth","show","getFilterRangeOverlayInstance","_createRow","row","_this","$row","rowType","event","selectView","_getRows","push","_renderFilterCell","cell","setAria","headerId","format","$container","alignment","css","filterOperations","_renderFilterOperationChooser","_renderCellContent","command","html","allowFiltering","renderTemplate","bind","done","_updateCell","accessibilityOptions","inputAttr","_getFilterInputAccessibilityAttributes","extend","parentType","showAllText","updateValueTimeout","setValue","placeholder","columnAriaLabel","empty","createEditor","$filterRangeContent","attr","text","isCellWasFocused","restoreFocus","menu","getInstance","_focusEditor","integrationOptions","activeStateEnabled","selectionMode","cssClass","showFirstSubmenuMode","hideSubmenuOnMouseLeave","items","disabled","icon","selectable","_getFilterOperationMenuItems","onItemClick","properties","itemData","name","columnSelectedFilterOperation","notFocusEditor","isOnClickMode","defaultSelectedFilterOperation","NAME","reset","onSubmenuShown","_isEditorFocused","loseFocus","onSubmenuHiding","onContentReady","_hideSubmenu","_visibleSubmenu","rtlEnabled","parents","focus","prependTo","filterRowOptions","operationDescriptions","availableFilterOperations","filter","map","descriptionName","selected","defaultFilterOperation","resetOperationText","optionChanged","args","_invalidate","handled","DataControllerFilterRowExtender","skipCalculateColumnFilters","_calculateAdditionalFilter","filters","columns","getVisibleColumns","each","calculateFilterExpression","createFilterExpression","combineFilters","exports","ApplyFilterViewController","ViewController","inherit","_getHeaderPanel","_headerPanel","getView","$element","toggleClass","enableApplyButton","applyFilter","columnsController","getColumns","beginUpdate","i","endUpdate","removeHighLights","columnHeadersViewElement","removeClass","module","defaultOptions","filterRow","visible","showOperationChooser","applyFilterText","equal","notEqual","lessThan","lessThanOrEqual","greaterThan","greaterThanOrEqual","startsWith","notContains","endsWith","isBlank","isNotBlank","betweenStartText","betweenEndText","controllers","extenders","columnsResizer","_startResizing","isResizing","_columnHeadersView","cellIndex","_targetPoint","_endResizing","views","columnHeadersView","headerPanel","_getToolbarItems","filterItem","_prepareFilterItem","concat","_isShowApplyFilterButton","hintText","onInitialized","_getToolbarButtonClass","onClickHandler","toolbarItem","widget","onClick","hint","showText","location","locateInMenu","sortIndex","_dataController","setToolbarItemDisabled"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.filter_row.js)\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _renderer = require(\"../../core/renderer\");\r\nvar _renderer2 = _interopRequireDefault(_renderer);\r\nvar _events_engine = require(\"../../events/core/events_engine\");\r\nvar _events_engine2 = _interopRequireDefault(_events_engine);\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _utils = require(\"../../events/utils\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _iterator2 = _interopRequireDefault(_iterator);\r\nvar _uiGrid_core = require(\"./ui.grid_core.modules\");\r\nvar _uiGrid_core2 = _interopRequireDefault(_uiGrid_core);\r\nvar _uiGrid_core3 = require(\"./ui.grid_core.utils\");\r\nvar _uiGrid_core4 = _interopRequireDefault(_uiGrid_core3);\r\nvar _message = require(\"../../localization/message\");\r\nvar _message2 = _interopRequireDefault(_message);\r\nvar _editor = require(\"../editor/editor\");\r\nvar _editor2 = _interopRequireDefault(_editor);\r\nvar _overlay = require(\"../overlay\");\r\nvar _overlay2 = _interopRequireDefault(_overlay);\r\nvar _menu = require(\"../menu\");\r\nvar _menu2 = _interopRequireDefault(_menu);\r\nvar _accessibility = require(\"../shared/accessibility\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar OPERATION_ICONS = {\r\n    \"=\": \"filter-operation-equals\",\r\n    \"<>\": \"filter-operation-not-equals\",\r\n    \"<\": \"filter-operation-less\",\r\n    \"<=\": \"filter-operation-less-equal\",\r\n    \">\": \"filter-operation-greater\",\r\n    \">=\": \"filter-operation-greater-equal\",\r\n    \"default\": \"filter-operation-default\",\r\n    notcontains: \"filter-operation-not-contains\",\r\n    contains: \"filter-operation-contains\",\r\n    startswith: \"filter-operation-starts-with\",\r\n    endswith: \"filter-operation-ends-with\",\r\n    between: \"filter-operation-between\"\r\n};\r\nvar OPERATION_DESCRIPTORS = {\r\n    \"=\": \"equal\",\r\n    \"<>\": \"notEqual\",\r\n    \"<\": \"lessThan\",\r\n    \"<=\": \"lessThanOrEqual\",\r\n    \">\": \"greaterThan\",\r\n    \">=\": \"greaterThanOrEqual\",\r\n    startswith: \"startsWith\",\r\n    contains: \"contains\",\r\n    notcontains: \"notContains\",\r\n    endswith: \"endsWith\",\r\n    between: \"between\"\r\n};\r\nvar FILTERING_TIMEOUT = 700;\r\nvar CORRECT_FILTER_RANGE_OVERLAY_WIDTH = 1;\r\nvar FILTER_ROW_CLASS = \"filter-row\";\r\nvar FILTER_RANGE_OVERLAY_CLASS = \"filter-range-overlay\";\r\nvar FILTER_RANGE_START_CLASS = \"filter-range-start\";\r\nvar FILTER_RANGE_END_CLASS = \"filter-range-end\";\r\nvar MENU_CLASS = \"dx-menu\";\r\nvar EDITOR_WITH_MENU_CLASS = \"dx-editor-with-menu\";\r\nvar EDITOR_CONTAINER_CLASS = \"dx-editor-container\";\r\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nvar FILTER_MENU = \"dx-filter-menu\";\r\nvar APPLY_BUTTON_CLASS = \"dx-apply-button\";\r\nvar HIGHLIGHT_OUTLINE_CLASS = \"dx-highlight-outline\";\r\nvar FOCUSED_CLASS = \"dx-focused\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar FILTER_RANGE_CONTENT_CLASS = \"dx-filter-range-content\";\r\nvar FILTER_MODIFIED_CLASS = \"dx-filter-modified\";\r\nvar EDITORS_INPUT_SELECTOR = \"input:not([type='hidden'])\";\r\nvar BETWEEN_OPERATION_DATA_TYPES = [\"date\", \"datetime\", \"number\"];\r\n\r\nfunction isOnClickApplyFilterMode(that) {\r\n    return \"onClick\" === that.option(\"filterRow.applyFilter\")\r\n}\r\nvar ColumnHeadersViewFilterRowExtender = function() {\r\n    var getEditorInstance = function($editorContainer) {\r\n        var $editor = $editorContainer && $editorContainer.children();\r\n        var componentNames = $editor && $editor.data(\"dxComponents\");\r\n        var editor = componentNames && componentNames.length && $editor.data(componentNames[0]);\r\n        if (editor instanceof _editor2.default) {\r\n            return editor\r\n        }\r\n    };\r\n    var getRangeTextByFilterValue = function(that, column) {\r\n        var result = \"\";\r\n        var rangeEnd = \"\";\r\n        var filterValue = getColumnFilterValue(that, column);\r\n        var formatOptions = _uiGrid_core4.default.getFormatOptionsByColumn(column, \"filterRow\");\r\n        if (Array.isArray(filterValue)) {\r\n            result = _uiGrid_core4.default.formatValue(filterValue[0], formatOptions);\r\n            rangeEnd = _uiGrid_core4.default.formatValue(filterValue[1], formatOptions);\r\n            if (\"\" !== rangeEnd) {\r\n                result += \" - \" + rangeEnd\r\n            }\r\n        } else {\r\n            if ((0, _type.isDefined)(filterValue)) {\r\n                result = _uiGrid_core4.default.formatValue(filterValue, formatOptions)\r\n            }\r\n        }\r\n        return result\r\n    };\r\n\r\n    function getColumnFilterValue(that, column) {\r\n        if (column) {\r\n            return isOnClickApplyFilterMode(that) && void 0 !== column.bufferedFilterValue ? column.bufferedFilterValue : column.filterValue\r\n        }\r\n    }\r\n    var getColumnSelectedFilterOperation = function(that, column) {\r\n        if (column) {\r\n            return isOnClickApplyFilterMode(that) && void 0 !== column.bufferedSelectedFilterOperation ? column.bufferedSelectedFilterOperation : column.selectedFilterOperation\r\n        }\r\n    };\r\n    var isValidFilterValue = function(filterValue, column) {\r\n        if (column && BETWEEN_OPERATION_DATA_TYPES.indexOf(column.dataType) >= 0 && Array.isArray(filterValue)) {\r\n            return false\r\n        }\r\n        return void 0 !== filterValue\r\n    };\r\n    var getFilterValue = function(that, columnIndex, $editorContainer) {\r\n        var column = that._columnsController.columnOption(columnIndex);\r\n        var filterValue = getColumnFilterValue(that, column);\r\n        var isFilterRange = $editorContainer.closest(\".\" + that.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).length;\r\n        var isRangeStart = $editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS));\r\n        if (filterValue && Array.isArray(filterValue) && \"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n            if (isRangeStart) {\r\n                return filterValue[0]\r\n            } else {\r\n                return filterValue[1]\r\n            }\r\n        }\r\n        return !isFilterRange && isValidFilterValue(filterValue, column) ? filterValue : null\r\n    };\r\n    var normalizeFilterValue = function(that, filterValue, column, $editorContainer) {\r\n        if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n            var columnFilterValue = getColumnFilterValue(that, column);\r\n            if ($editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS))) {\r\n                return [filterValue, Array.isArray(columnFilterValue) ? columnFilterValue[1] : void 0]\r\n            } else {\r\n                return [Array.isArray(columnFilterValue) ? columnFilterValue[0] : columnFilterValue, filterValue]\r\n            }\r\n        }\r\n        return filterValue\r\n    };\r\n    var updateFilterValue = function(that, options) {\r\n        var value = \"\" === options.value ? null : options.value;\r\n        var $editorContainer = options.container;\r\n        var column = that._columnsController.columnOption(options.column.index);\r\n        var filterValue = getFilterValue(that, column.index, $editorContainer);\r\n        if (!(0, _type.isDefined)(filterValue) && !(0, _type.isDefined)(value)) {\r\n            return\r\n        }\r\n        that._applyFilterViewController.setHighLight($editorContainer, filterValue !== value);\r\n        that._columnsController.columnOption(column.index, isOnClickApplyFilterMode(that) ? \"bufferedFilterValue\" : \"filterValue\", normalizeFilterValue(that, value, column, $editorContainer), options.notFireEvent)\r\n    };\r\n    return {\r\n        _updateEditorValue: function(column, $editorContainer) {\r\n            var that = this;\r\n            var editor = getEditorInstance($editorContainer);\r\n            editor && editor.option(\"value\", getFilterValue(that, column.index, $editorContainer))\r\n        },\r\n        _columnOptionChanged: function(e) {\r\n            var that = this;\r\n            var optionNames = e.optionNames;\r\n            var $cell;\r\n            var $editorContainer;\r\n            var $editorRangeElements;\r\n            var $menu;\r\n            if (_uiGrid_core4.default.checkChanges(optionNames, [\"filterValue\", \"bufferedFilterValue\", \"selectedFilterOperation\", \"bufferedSelectedFilterOperation\"]) && void 0 !== e.columnIndex) {\r\n                var visibleIndex = that._columnsController.getVisibleIndex(e.columnIndex);\r\n                var column = that._columnsController.columnOption(e.columnIndex);\r\n                $cell = that._getCellElement(that.element().find(\".\" + that.addWidgetPrefix(FILTER_ROW_CLASS)).index(), visibleIndex) || (0, _renderer2.default)();\r\n                $editorContainer = $cell.find(\".\" + EDITOR_CONTAINER_CLASS).first();\r\n                if (optionNames.filterValue || optionNames.bufferedFilterValue) {\r\n                    that._updateEditorValue(column, $editorContainer);\r\n                    var overlayInstance = $cell.find(\".\" + that.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).data(\"dxOverlay\");\r\n                    if (overlayInstance) {\r\n                        $editorRangeElements = overlayInstance.$content().find(\".\" + EDITOR_CONTAINER_CLASS);\r\n                        that._updateEditorValue(column, $editorRangeElements.first());\r\n                        that._updateEditorValue(column, $editorRangeElements.last())\r\n                    }\r\n                    if (!overlayInstance || !overlayInstance.option(\"visible\")) {\r\n                        that._updateFilterRangeContent($cell, getRangeTextByFilterValue(that, column))\r\n                    }\r\n                }\r\n                if (optionNames.selectedFilterOperation || optionNames.bufferedSelectedFilterOperation) {\r\n                    if (visibleIndex >= 0 && column) {\r\n                        $menu = $cell.find(\".\" + MENU_CLASS);\r\n                        if ($menu.length) {\r\n                            that._updateFilterOperationChooser($menu, column, $editorContainer);\r\n                            if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n                                that._renderFilterRangeContent($cell, column)\r\n                            } else {\r\n                                if ($editorContainer.find(\".\" + FILTER_RANGE_CONTENT_CLASS).length) {\r\n                                    that._renderEditor($editorContainer, that._getEditorOptions($editorContainer, column));\r\n                                    that._hideFilterRange()\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return\r\n            }\r\n            that.callBase(e)\r\n        },\r\n        _renderCore: function() {\r\n            this._filterRangeOverlayInstance = null;\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _resizeCore: function() {\r\n            this.callBase.apply(this, arguments);\r\n            this._filterRangeOverlayInstance && this._filterRangeOverlayInstance.repaint()\r\n        },\r\n        isFilterRowVisible: function() {\r\n            return this._isElementVisible(this.option(\"filterRow\"))\r\n        },\r\n        isVisible: function() {\r\n            return this.callBase() || this.isFilterRowVisible()\r\n        },\r\n        init: function() {\r\n            this.callBase();\r\n            this._applyFilterViewController = this.getController(\"applyFilter\")\r\n        },\r\n        _initFilterRangeOverlay: function($cell, column) {\r\n            var that = this;\r\n            var sharedData = {};\r\n            var $editorContainer = $cell.find(\".dx-editor-container\");\r\n            var $overlay = (0, _renderer2.default)(\"<div>\").addClass(that.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).appendTo($cell);\r\n            return that._createComponent($overlay, _overlay2.default, {\r\n                height: \"auto\",\r\n                shading: false,\r\n                showTitle: false,\r\n                focusStateEnabled: false,\r\n                closeOnTargetScroll: false,\r\n                closeOnOutsideClick: true,\r\n                animation: false,\r\n                position: {\r\n                    my: \"top\",\r\n                    at: \"top\",\r\n                    of: $editorContainer.length && $editorContainer || $cell,\r\n                    offset: \"0 -1\"\r\n                },\r\n                contentTemplate: function(contentElement) {\r\n                    var editorOptions;\r\n                    var $editor = (0, _renderer2.default)(\"<div>\").addClass(EDITOR_CONTAINER_CLASS + \" \" + that.addWidgetPrefix(FILTER_RANGE_START_CLASS)).appendTo(contentElement);\r\n                    column = that._columnsController.columnOption(column.index);\r\n                    editorOptions = that._getEditorOptions($editor, column);\r\n                    editorOptions.sharedData = sharedData;\r\n                    that._renderEditor($editor, editorOptions);\r\n                    _events_engine2.default.on($editor.find(EDITORS_INPUT_SELECTOR), \"keydown\", function(e) {\r\n                        var $prevElement = $cell.find(\"[tabindex]\").not(e.target).first();\r\n                        if (\"tab\" === (0, _utils.normalizeKeyName)(e) && e.shiftKey) {\r\n                            e.preventDefault();\r\n                            that._hideFilterRange();\r\n                            if (!$prevElement.length) {\r\n                                $prevElement = $cell.prev().find(\"[tabindex]\").last()\r\n                            }\r\n                            _events_engine2.default.trigger($prevElement, \"focus\")\r\n                        }\r\n                    });\r\n                    $editor = (0, _renderer2.default)(\"<div>\").addClass(EDITOR_CONTAINER_CLASS + \" \" + that.addWidgetPrefix(FILTER_RANGE_END_CLASS)).appendTo(contentElement);\r\n                    editorOptions = that._getEditorOptions($editor, column);\r\n                    editorOptions.sharedData = sharedData;\r\n                    that._renderEditor($editor, editorOptions);\r\n                    _events_engine2.default.on($editor.find(EDITORS_INPUT_SELECTOR), \"keydown\", function(e) {\r\n                        if (\"tab\" === (0, _utils.normalizeKeyName)(e) && !e.shiftKey) {\r\n                            e.preventDefault();\r\n                            that._hideFilterRange();\r\n                            _events_engine2.default.trigger($cell.next().find(\"[tabindex]\").first(), \"focus\")\r\n                        }\r\n                    });\r\n                    return (0, _renderer2.default)(contentElement).addClass(that.getWidgetContainerClass())\r\n                },\r\n                onShown: function(e) {\r\n                    var $editor = e.component.$content().find(\".\" + EDITOR_CONTAINER_CLASS).first();\r\n                    _events_engine2.default.trigger($editor.find(EDITORS_INPUT_SELECTOR), \"focus\")\r\n                },\r\n                onHidden: function() {\r\n                    column = that._columnsController.columnOption(column.index);\r\n                    $cell.find(\".\" + MENU_CLASS).parent().addClass(EDITOR_WITH_MENU_CLASS);\r\n                    if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n                        that._updateFilterRangeContent($cell, getRangeTextByFilterValue(that, column));\r\n                        that.component.updateDimensions()\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        _updateFilterRangeOverlay: function(options) {\r\n            var overlayInstance = this._filterRangeOverlayInstance;\r\n            overlayInstance && overlayInstance.option(options)\r\n        },\r\n        _showFilterRange: function($cell, column) {\r\n            var that = this;\r\n            var $overlay = $cell.children(\".\" + that.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS));\r\n            var overlayInstance = $overlay.length && $overlay.data(\"dxOverlay\");\r\n            if (!overlayInstance && column) {\r\n                overlayInstance = that._initFilterRangeOverlay($cell, column)\r\n            }\r\n            if (!overlayInstance.option(\"visible\")) {\r\n                that._filterRangeOverlayInstance && that._filterRangeOverlayInstance.hide();\r\n                that._filterRangeOverlayInstance = overlayInstance;\r\n                that._updateFilterRangeOverlay({\r\n                    width: $cell.outerWidth(true) + CORRECT_FILTER_RANGE_OVERLAY_WIDTH\r\n                });\r\n                that._filterRangeOverlayInstance && that._filterRangeOverlayInstance.show()\r\n            }\r\n        },\r\n        _hideFilterRange: function() {\r\n            var overlayInstance = this._filterRangeOverlayInstance;\r\n            overlayInstance && overlayInstance.hide()\r\n        },\r\n        getFilterRangeOverlayInstance: function() {\r\n            return this._filterRangeOverlayInstance\r\n        },\r\n        _createRow: function(row) {\r\n            var _this = this;\r\n            var $row = this.callBase(row);\r\n            if (\"filter\" === row.rowType) {\r\n                $row.addClass(this.addWidgetPrefix(FILTER_ROW_CLASS));\r\n                if (!this.option(\"useLegacyKeyboardNavigation\")) {\r\n                    _events_engine2.default.on($row, \"keydown\", function(event) {\r\n                        return (0, _accessibility.selectView)(\"filterRow\", _this, event)\r\n                    })\r\n                }\r\n            }\r\n            return $row\r\n        },\r\n        _getRows: function() {\r\n            var result = this.callBase();\r\n            if (this.isFilterRowVisible()) {\r\n                result.push({\r\n                    rowType: \"filter\"\r\n                })\r\n            }\r\n            return result\r\n        },\r\n        _renderFilterCell: function(cell, options) {\r\n            var that = this;\r\n            var column = options.column;\r\n            var $cell = (0, _renderer2.default)(cell);\r\n            if (that.component.option(\"showColumnHeaders\")) {\r\n                that.setAria(\"describedby\", column.headerId, $cell)\r\n            }\r\n            that.setAria(\"label\", _message2.default.format(\"dxDataGrid-ariaFilterCell\"), $cell);\r\n            $cell.addClass(EDITOR_CELL_CLASS);\r\n            var $container = (0, _renderer2.default)(\"<div>\").appendTo($cell);\r\n            var $editorContainer = (0, _renderer2.default)(\"<div>\").addClass(EDITOR_CONTAINER_CLASS).appendTo($container);\r\n            if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n                that._renderFilterRangeContent($cell, column)\r\n            } else {\r\n                var editorOptions = that._getEditorOptions($editorContainer, column);\r\n                that._renderEditor($editorContainer, editorOptions)\r\n            }\r\n            var alignment = column.alignment;\r\n            if (alignment && \"center\" !== alignment) {\r\n                $cell.find(EDITORS_INPUT_SELECTOR).first().css(\"textAlign\", column.alignment)\r\n            }\r\n            if (column.filterOperations && column.filterOperations.length) {\r\n                that._renderFilterOperationChooser($container, column, $editorContainer)\r\n            }\r\n        },\r\n        _renderCellContent: function($cell, options) {\r\n            var that = this;\r\n            var column = options.column;\r\n            if (\"filter\" === options.rowType) {\r\n                if (column.command) {\r\n                    $cell.html(\"&nbsp;\")\r\n                } else {\r\n                    if (column.allowFiltering) {\r\n                        that.renderTemplate($cell, that._renderFilterCell.bind(that), options).done(function() {\r\n                            that._updateCell($cell, options)\r\n                        });\r\n                        return\r\n                    }\r\n                }\r\n            }\r\n            that.callBase($cell, options)\r\n        },\r\n        _getEditorOptions: function($editorContainer, column) {\r\n            var that = this;\r\n            var accessibilityOptions = {\r\n                editorOptions: {\r\n                    inputAttr: that._getFilterInputAccessibilityAttributes(column)\r\n                }\r\n            };\r\n            var result = (0, _extend.extend)(accessibilityOptions, column, {\r\n                value: getFilterValue(that, column.index, $editorContainer),\r\n                parentType: \"filterRow\",\r\n                showAllText: that.option(\"filterRow.showAllText\"),\r\n                updateValueTimeout: \"onClick\" === that.option(\"filterRow.applyFilter\") ? 0 : FILTERING_TIMEOUT,\r\n                width: null,\r\n                setValue: function(value, notFireEvent) {\r\n                    updateFilterValue(that, {\r\n                        column: column,\r\n                        value: value,\r\n                        container: $editorContainer,\r\n                        notFireEvent: notFireEvent\r\n                    })\r\n                }\r\n            });\r\n            if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n                if ($editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS))) {\r\n                    result.placeholder = that.option(\"filterRow.betweenStartText\")\r\n                } else {\r\n                    result.placeholder = that.option(\"filterRow.betweenEndText\")\r\n                }\r\n            }\r\n            return result\r\n        },\r\n        _getFilterInputAccessibilityAttributes: function(column) {\r\n            var columnAriaLabel = _message2.default.format(\"dxDataGrid-ariaFilterCell\");\r\n            if (this.component.option(\"showColumnHeaders\")) {\r\n                return {\r\n                    \"aria-label\": columnAriaLabel,\r\n                    \"aria-describedby\": column.headerId\r\n                }\r\n            }\r\n            return {\r\n                \"aria-label\": columnAriaLabel\r\n            }\r\n        },\r\n        _renderEditor: function($editorContainer, options) {\r\n            $editorContainer.empty();\r\n            return this.getController(\"editorFactory\").createEditor((0, _renderer2.default)(\"<div>\").appendTo($editorContainer), options)\r\n        },\r\n        _renderFilterRangeContent: function($cell, column) {\r\n            var that = this;\r\n            var $editorContainer = $cell.find(\".\" + EDITOR_CONTAINER_CLASS).first();\r\n            $editorContainer.empty();\r\n            var $filterRangeContent = (0, _renderer2.default)(\"<div>\").addClass(FILTER_RANGE_CONTENT_CLASS).attr(\"tabindex\", this.option(\"tabIndex\"));\r\n            _events_engine2.default.on($filterRangeContent, \"focusin\", function() {\r\n                that._showFilterRange($cell, column)\r\n            });\r\n            $filterRangeContent.appendTo($editorContainer);\r\n            that._updateFilterRangeContent($cell, getRangeTextByFilterValue(that, column))\r\n        },\r\n        _updateFilterRangeContent: function($cell, value) {\r\n            var $filterRangeContent = $cell.find(\".\" + FILTER_RANGE_CONTENT_CLASS);\r\n            if ($filterRangeContent.length) {\r\n                if (\"\" === value) {\r\n                    $filterRangeContent.html(\"&nbsp;\")\r\n                } else {\r\n                    $filterRangeContent.text(value)\r\n                }\r\n            }\r\n        },\r\n        _updateFilterOperationChooser: function($menu, column, $editorContainer) {\r\n            var that = this;\r\n            var isCellWasFocused;\r\n            var restoreFocus = function() {\r\n                var menu = _menu2.default.getInstance($menu);\r\n                menu && menu.option(\"focusedElement\", null);\r\n                isCellWasFocused && that._focusEditor($editorContainer)\r\n            };\r\n            that._createComponent($menu, _menu2.default, {\r\n                integrationOptions: {},\r\n                activeStateEnabled: false,\r\n                selectionMode: \"single\",\r\n                cssClass: that.getWidgetContainerClass() + \" \" + CELL_FOCUS_DISABLED_CLASS + \" \" + FILTER_MENU,\r\n                showFirstSubmenuMode: \"onHover\",\r\n                hideSubmenuOnMouseLeave: true,\r\n                items: [{\r\n                    disabled: column.filterOperations && column.filterOperations.length ? false : true,\r\n                    icon: OPERATION_ICONS[getColumnSelectedFilterOperation(that, column) || \"default\"],\r\n                    selectable: false,\r\n                    items: that._getFilterOperationMenuItems(column)\r\n                }],\r\n                onItemClick: function(properties) {\r\n                    var selectedFilterOperation = properties.itemData.name;\r\n                    var columnSelectedFilterOperation = getColumnSelectedFilterOperation(that, column);\r\n                    var notFocusEditor = false;\r\n                    var isOnClickMode = isOnClickApplyFilterMode(that);\r\n                    var options = {};\r\n                    if (properties.itemData.items || selectedFilterOperation && selectedFilterOperation === columnSelectedFilterOperation) {\r\n                        return\r\n                    }\r\n                    if (selectedFilterOperation) {\r\n                        options[isOnClickMode ? \"bufferedSelectedFilterOperation\" : \"selectedFilterOperation\"] = selectedFilterOperation;\r\n                        if (\"between\" === selectedFilterOperation || \"between\" === columnSelectedFilterOperation) {\r\n                            notFocusEditor = \"between\" === selectedFilterOperation;\r\n                            options[isOnClickMode ? \"bufferedFilterValue\" : \"filterValue\"] = null\r\n                        }\r\n                    } else {\r\n                        options[isOnClickMode ? \"bufferedFilterValue\" : \"filterValue\"] = null;\r\n                        options[isOnClickMode ? \"bufferedSelectedFilterOperation\" : \"selectedFilterOperation\"] = column.defaultSelectedFilterOperation || null\r\n                    }\r\n                    that._columnsController.columnOption(column.index, options);\r\n                    that._applyFilterViewController.setHighLight($editorContainer, true);\r\n                    if (!selectedFilterOperation) {\r\n                        var editor = getEditorInstance($editorContainer);\r\n                        if (editor && \"dxDateBox\" === editor.NAME && !editor.option(\"isValid\")) {\r\n                            editor.reset();\r\n                            editor.option(\"isValid\", true)\r\n                        }\r\n                    }\r\n                    if (!notFocusEditor) {\r\n                        that._focusEditor($editorContainer)\r\n                    } else {\r\n                        that._showFilterRange($editorContainer.closest(\".\" + EDITOR_CELL_CLASS), column)\r\n                    }\r\n                },\r\n                onSubmenuShown: function() {\r\n                    isCellWasFocused = that._isEditorFocused($editorContainer);\r\n                    that.getController(\"editorFactory\").loseFocus()\r\n                },\r\n                onSubmenuHiding: function() {\r\n                    _events_engine2.default.trigger($menu, \"blur\");\r\n                    restoreFocus()\r\n                },\r\n                onContentReady: function(e) {\r\n                    _events_engine2.default.on($menu, \"blur\", function() {\r\n                        var menu = e.component;\r\n                        menu._hideSubmenu(menu._visibleSubmenu);\r\n                        restoreFocus()\r\n                    })\r\n                },\r\n                rtlEnabled: that.option(\"rtlEnabled\")\r\n            })\r\n        },\r\n        _isEditorFocused: function($container) {\r\n            return $container.hasClass(FOCUSED_CLASS) || $container.parents(\".\" + FOCUSED_CLASS).length\r\n        },\r\n        _focusEditor: function($container) {\r\n            this.getController(\"editorFactory\").focus($container);\r\n            _events_engine2.default.trigger($container.find(EDITORS_INPUT_SELECTOR), \"focus\")\r\n        },\r\n        _renderFilterOperationChooser: function($container, column, $editorContainer) {\r\n            var that = this;\r\n            var $menu;\r\n            if (that.option(\"filterRow.showOperationChooser\")) {\r\n                $container.addClass(EDITOR_WITH_MENU_CLASS);\r\n                $menu = (0, _renderer2.default)(\"<div>\").prependTo($container);\r\n                that._updateFilterOperationChooser($menu, column, $editorContainer)\r\n            }\r\n        },\r\n        _getFilterOperationMenuItems: function(column) {\r\n            var that = this;\r\n            var result = [{}];\r\n            var filterRowOptions = that.option(\"filterRow\");\r\n            var operationDescriptions = filterRowOptions && filterRowOptions.operationDescriptions || {};\r\n            if (column.filterOperations && column.filterOperations.length) {\r\n                var availableFilterOperations = column.filterOperations.filter(function(value) {\r\n                    return (0, _type.isDefined)(OPERATION_DESCRIPTORS[value])\r\n                });\r\n                result = _iterator2.default.map(availableFilterOperations, function(value) {\r\n                    var descriptionName = OPERATION_DESCRIPTORS[value];\r\n                    return {\r\n                        name: value,\r\n                        selected: (getColumnSelectedFilterOperation(that, column) || column.defaultFilterOperation) === value,\r\n                        text: operationDescriptions[descriptionName],\r\n                        icon: OPERATION_ICONS[value]\r\n                    }\r\n                });\r\n                result.push({\r\n                    name: null,\r\n                    text: filterRowOptions && filterRowOptions.resetOperationText,\r\n                    icon: OPERATION_ICONS.default\r\n                })\r\n            }\r\n            return result\r\n        },\r\n        optionChanged: function(args) {\r\n            var that = this;\r\n            switch (args.name) {\r\n                case \"filterRow\":\r\n                case \"showColumnLines\":\r\n                    this._invalidate(true, true);\r\n                    args.handled = true;\r\n                    break;\r\n                default:\r\n                    that.callBase(args)\r\n            }\r\n        }\r\n    }\r\n}();\r\nvar DataControllerFilterRowExtender = {\r\n    skipCalculateColumnFilters: function() {\r\n        return false\r\n    },\r\n    _calculateAdditionalFilter: function() {\r\n        if (this.skipCalculateColumnFilters()) {\r\n            return this.callBase()\r\n        }\r\n        var filters = [this.callBase()];\r\n        var columns = this._columnsController.getVisibleColumns(null, true);\r\n        _iterator2.default.each(columns, function() {\r\n            if (this.allowFiltering && this.calculateFilterExpression && (0, _type.isDefined)(this.filterValue)) {\r\n                var filter = this.createFilterExpression(this.filterValue, this.selectedFilterOperation || this.defaultFilterOperation, \"filterRow\");\r\n                filters.push(filter)\r\n            }\r\n        });\r\n        return _uiGrid_core4.default.combineFilters(filters)\r\n    }\r\n};\r\nexports.ApplyFilterViewController = _uiGrid_core2.default.ViewController.inherit({\r\n    _getHeaderPanel: function() {\r\n        if (!this._headerPanel) {\r\n            this._headerPanel = this.getView(\"headerPanel\")\r\n        }\r\n        return this._headerPanel\r\n    },\r\n    setHighLight: function($element, value) {\r\n        if (isOnClickApplyFilterMode(this)) {\r\n            $element && $element.toggleClass(HIGHLIGHT_OUTLINE_CLASS, value) && $element.closest(\".\" + EDITOR_CELL_CLASS).toggleClass(FILTER_MODIFIED_CLASS, value);\r\n            this._getHeaderPanel().enableApplyButton(value)\r\n        }\r\n    },\r\n    applyFilter: function() {\r\n        var columnsController = this.getController(\"columns\");\r\n        var columns = columnsController.getColumns();\r\n        columnsController.beginUpdate();\r\n        for (var i = 0; i < columns.length; i++) {\r\n            var column = columns[i];\r\n            if (void 0 !== column.bufferedFilterValue) {\r\n                columnsController.columnOption(i, \"filterValue\", column.bufferedFilterValue);\r\n                column.bufferedFilterValue = void 0\r\n            }\r\n            if (void 0 !== column.bufferedSelectedFilterOperation) {\r\n                columnsController.columnOption(i, \"selectedFilterOperation\", column.bufferedSelectedFilterOperation);\r\n                column.bufferedSelectedFilterOperation = void 0\r\n            }\r\n        }\r\n        columnsController.endUpdate();\r\n        this.removeHighLights()\r\n    },\r\n    removeHighLights: function() {\r\n        if (isOnClickApplyFilterMode(this)) {\r\n            var columnHeadersViewElement = this.getView(\"columnHeadersView\").element();\r\n            columnHeadersViewElement.find(\".\" + this.addWidgetPrefix(FILTER_ROW_CLASS) + \" .\" + HIGHLIGHT_OUTLINE_CLASS).removeClass(HIGHLIGHT_OUTLINE_CLASS);\r\n            columnHeadersViewElement.find(\".\" + this.addWidgetPrefix(FILTER_ROW_CLASS) + \" .\" + FILTER_MODIFIED_CLASS).removeClass(FILTER_MODIFIED_CLASS);\r\n            this._getHeaderPanel().enableApplyButton(false)\r\n        }\r\n    }\r\n});\r\nmodule.exports = {\r\n    defaultOptions: function() {\r\n        return {\r\n            filterRow: {\r\n                visible: false,\r\n                showOperationChooser: true,\r\n                showAllText: _message2.default.format(\"dxDataGrid-filterRowShowAllText\"),\r\n                resetOperationText: _message2.default.format(\"dxDataGrid-filterRowResetOperationText\"),\r\n                applyFilter: \"auto\",\r\n                applyFilterText: _message2.default.format(\"dxDataGrid-applyFilterText\"),\r\n                operationDescriptions: {\r\n                    equal: _message2.default.format(\"dxDataGrid-filterRowOperationEquals\"),\r\n                    notEqual: _message2.default.format(\"dxDataGrid-filterRowOperationNotEquals\"),\r\n                    lessThan: _message2.default.format(\"dxDataGrid-filterRowOperationLess\"),\r\n                    lessThanOrEqual: _message2.default.format(\"dxDataGrid-filterRowOperationLessOrEquals\"),\r\n                    greaterThan: _message2.default.format(\"dxDataGrid-filterRowOperationGreater\"),\r\n                    greaterThanOrEqual: _message2.default.format(\"dxDataGrid-filterRowOperationGreaterOrEquals\"),\r\n                    startsWith: _message2.default.format(\"dxDataGrid-filterRowOperationStartsWith\"),\r\n                    contains: _message2.default.format(\"dxDataGrid-filterRowOperationContains\"),\r\n                    notContains: _message2.default.format(\"dxDataGrid-filterRowOperationNotContains\"),\r\n                    endsWith: _message2.default.format(\"dxDataGrid-filterRowOperationEndsWith\"),\r\n                    between: _message2.default.format(\"dxDataGrid-filterRowOperationBetween\"),\r\n                    isBlank: _message2.default.format(\"dxFilterBuilder-filterOperationIsBlank\"),\r\n                    isNotBlank: _message2.default.format(\"dxFilterBuilder-filterOperationIsNotBlank\")\r\n                },\r\n                betweenStartText: _message2.default.format(\"dxDataGrid-filterRowOperationBetweenStartText\"),\r\n                betweenEndText: _message2.default.format(\"dxDataGrid-filterRowOperationBetweenEndText\")\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        applyFilter: exports.ApplyFilterViewController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: DataControllerFilterRowExtender,\r\n            columnsResizer: {\r\n                _startResizing: function() {\r\n                    var that = this;\r\n                    that.callBase.apply(that, arguments);\r\n                    if (that.isResizing()) {\r\n                        var overlayInstance = that._columnHeadersView.getFilterRangeOverlayInstance();\r\n                        if (overlayInstance) {\r\n                            var cellIndex = overlayInstance.$element().closest(\"td\").index();\r\n                            if (cellIndex === that._targetPoint.columnIndex || cellIndex === that._targetPoint.columnIndex + 1) {\r\n                                overlayInstance.$content().hide()\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                _endResizing: function() {\r\n                    var that = this;\r\n                    var $cell;\r\n                    if (that.isResizing()) {\r\n                        var overlayInstance = that._columnHeadersView.getFilterRangeOverlayInstance();\r\n                        if (overlayInstance) {\r\n                            $cell = overlayInstance.$element().closest(\"td\");\r\n                            that._columnHeadersView._updateFilterRangeOverlay({\r\n                                width: $cell.outerWidth(true) + CORRECT_FILTER_RANGE_OVERLAY_WIDTH\r\n                            });\r\n                            overlayInstance.$content().show()\r\n                        }\r\n                    }\r\n                    that.callBase.apply(that, arguments)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewFilterRowExtender,\r\n            headerPanel: {\r\n                _getToolbarItems: function() {\r\n                    var items = this.callBase();\r\n                    var filterItem = this._prepareFilterItem(items);\r\n                    return filterItem.concat(items)\r\n                },\r\n                _prepareFilterItem: function() {\r\n                    var that = this;\r\n                    var filterItem = [];\r\n                    if (that._isShowApplyFilterButton()) {\r\n                        var hintText = that.option(\"filterRow.applyFilterText\");\r\n                        var columns = that._columnsController.getColumns();\r\n                        var disabled = !columns.filter(function(column) {\r\n                            return void 0 !== column.bufferedFilterValue\r\n                        }).length;\r\n                        var onInitialized = function(e) {\r\n                            (0, _renderer2.default)(e.element).addClass(that._getToolbarButtonClass(APPLY_BUTTON_CLASS))\r\n                        };\r\n                        var onClickHandler = function() {\r\n                            that._applyFilterViewController.applyFilter()\r\n                        };\r\n                        var toolbarItem = {\r\n                            widget: \"dxButton\",\r\n                            options: {\r\n                                icon: \"apply-filter\",\r\n                                disabled: disabled,\r\n                                onClick: onClickHandler,\r\n                                hint: hintText,\r\n                                text: hintText,\r\n                                onInitialized: onInitialized\r\n                            },\r\n                            showText: \"inMenu\",\r\n                            name: \"applyFilterButton\",\r\n                            location: \"after\",\r\n                            locateInMenu: \"auto\",\r\n                            sortIndex: 10\r\n                        };\r\n                        filterItem.push(toolbarItem)\r\n                    }\r\n                    return filterItem\r\n                },\r\n                _isShowApplyFilterButton: function() {\r\n                    var filterRowOptions = this.option(\"filterRow\");\r\n                    return filterRowOptions && filterRowOptions.visible && \"onClick\" === filterRowOptions.applyFilter\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._dataController = this.getController(\"data\");\r\n                    this._applyFilterViewController = this.getController(\"applyFilter\")\r\n                },\r\n                enableApplyButton: function(value) {\r\n                    this.setToolbarItemDisabled(\"applyFilterButton\", !value)\r\n                },\r\n                isVisible: function() {\r\n                    return this.callBase() || this._isShowApplyFilterButton()\r\n                },\r\n                optionChanged: function(args) {\r\n                    if (\"filterRow\" === args.name) {\r\n                        this._invalidate();\r\n                        args.handled = true\r\n                    } else {\r\n                        this.callBase(args)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}