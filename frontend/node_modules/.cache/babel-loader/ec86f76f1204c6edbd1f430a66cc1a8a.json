{"ast":null,"code":"/**\r\n * DevExtreme (ui/shared/filtering.js)\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar typeUtils = require(\"../../core/utils/type\");\n\nvar inArray = require(\"../../core/utils/array\").inArray;\n\nvar iteratorUtils = require(\"../../core/utils/iterator\");\n\nvar DEFAULT_DATE_INTERVAL = [\"year\", \"month\", \"day\"];\nvar DEFAULT_DATETIME_INTERVAL = [\"year\", \"month\", \"day\", \"hour\", \"minute\"];\n\nmodule.exports = function () {\n  var getFilterSelector = function (column, target) {\n    var selector = column.dataField || column.selector;\n\n    if (\"search\" === target) {\n      selector = column.displayField || column.calculateDisplayValue || selector;\n    }\n\n    return selector;\n  };\n\n  var isZeroTime = function (date) {\n    return date.getHours() + date.getMinutes() + date.getSeconds() + date.getMilliseconds() < 1;\n  };\n\n  var isDateType = function (dataType) {\n    return \"date\" === dataType || \"datetime\" === dataType;\n  };\n\n  var getDateValues = function (dateValue) {\n    if (typeUtils.isDate(dateValue)) {\n      return [dateValue.getFullYear(), dateValue.getMonth(), dateValue.getDate(), dateValue.getHours(), dateValue.getMinutes(), dateValue.getSeconds()];\n    }\n\n    return iteratorUtils.map((\"\" + dateValue).split(\"/\"), function (value, index) {\n      return 1 === index ? Number(value) - 1 : Number(value);\n    });\n  };\n\n  var getFilterExpressionByRange = function (filterValue, target) {\n    var column = this;\n    var endFilterValue;\n    var startFilterExpression;\n    var endFilterExpression;\n    var selector = getFilterSelector(column, target);\n\n    if (Array.isArray(filterValue) && typeUtils.isDefined(filterValue[0]) && typeUtils.isDefined(filterValue[1])) {\n      startFilterExpression = [selector, \">=\", filterValue[0]];\n      endFilterExpression = [selector, \"<=\", filterValue[1]];\n\n      if (isDateType(column.dataType) && isZeroTime(filterValue[1])) {\n        endFilterValue = new Date(filterValue[1].getTime());\n\n        if (\"date\" === column.dataType) {\n          endFilterValue.setDate(filterValue[1].getDate() + 1);\n        }\n\n        endFilterExpression = [selector, \"<\", endFilterValue];\n      }\n\n      return [startFilterExpression, \"and\", endFilterExpression];\n    }\n  };\n\n  var getFilterExpressionForDate = function (filterValue, selectedFilterOperation, target) {\n    var column = this;\n    var dateStart;\n    var dateEnd;\n    var dateInterval;\n    var values = getDateValues(filterValue);\n    var selector = getFilterSelector(column, target);\n\n    if (\"headerFilter\" === target) {\n      dateInterval = module.exports.getGroupInterval(column)[values.length - 1];\n    } else {\n      if (\"datetime\" === column.dataType) {\n        dateInterval = \"minute\";\n      }\n    }\n\n    switch (dateInterval) {\n      case \"year\":\n        dateStart = new Date(values[0], 0, 1);\n        dateEnd = new Date(values[0] + 1, 0, 1);\n        break;\n\n      case \"month\":\n        dateStart = new Date(values[0], values[1], 1);\n        dateEnd = new Date(values[0], values[1] + 1, 1);\n        break;\n\n      case \"quarter\":\n        dateStart = new Date(values[0], 3 * values[1], 1);\n        dateEnd = new Date(values[0], 3 * values[1] + 3, 1);\n        break;\n\n      case \"hour\":\n        dateStart = new Date(values[0], values[1], values[2], values[3]);\n        dateEnd = new Date(values[0], values[1], values[2], values[3] + 1);\n        break;\n\n      case \"minute\":\n        dateStart = new Date(values[0], values[1], values[2], values[3], values[4]);\n        dateEnd = new Date(values[0], values[1], values[2], values[3], values[4] + 1);\n        break;\n\n      case \"second\":\n        dateStart = new Date(values[0], values[1], values[2], values[3], values[4], values[5]);\n        dateEnd = new Date(values[0], values[1], values[2], values[3], values[4], values[5] + 1);\n        break;\n\n      default:\n        dateStart = new Date(values[0], values[1], values[2]);\n        dateEnd = new Date(values[0], values[1], values[2] + 1);\n    }\n\n    switch (selectedFilterOperation) {\n      case \"<\":\n        return [selector, \"<\", dateStart];\n\n      case \"<=\":\n        return [selector, \"<\", dateEnd];\n\n      case \">\":\n        return [selector, \">=\", dateEnd];\n\n      case \">=\":\n        return [selector, \">=\", dateStart];\n\n      case \"<>\":\n        return [[selector, \"<\", dateStart], \"or\", [selector, \">=\", dateEnd]];\n\n      default:\n        return [[selector, \">=\", dateStart], \"and\", [selector, \"<\", dateEnd]];\n    }\n  };\n\n  var getFilterExpressionForNumber = function (filterValue, selectedFilterOperation, target) {\n    var column = this;\n    var selector = getFilterSelector(column, target);\n    var groupInterval = module.exports.getGroupInterval(column);\n\n    if (\"headerFilter\" === target && groupInterval && typeUtils.isDefined(filterValue)) {\n      var values = (\"\" + filterValue).split(\"/\");\n      var value = Number(values[values.length - 1]);\n      var interval = groupInterval[values.length - 1];\n      var startFilterValue = [selector, \">=\", value];\n      var endFilterValue = [selector, \"<\", value + interval];\n      var condition = [startFilterValue, \"and\", endFilterValue];\n      return condition;\n    }\n\n    return [selector, selectedFilterOperation || \"=\", filterValue];\n  };\n\n  return {\n    defaultCalculateFilterExpression: function (filterValue, selectedFilterOperation, target) {\n      var column = this;\n      var selector = getFilterSelector(column, target);\n      var isSearchByDisplayValue = column.calculateDisplayValue && \"search\" === target;\n      var dataType = isSearchByDisplayValue && column.lookup && column.lookup.dataType || column.dataType;\n      var filter = null;\n\n      if ((\"headerFilter\" === target || \"filterBuilder\" === target) && null === filterValue) {\n        filter = [selector, selectedFilterOperation || \"=\", null];\n\n        if (\"string\" === dataType) {\n          filter = [filter, \"=\" === selectedFilterOperation ? \"or\" : \"and\", [selector, selectedFilterOperation || \"=\", \"\"]];\n        }\n      } else {\n        if (\"string\" === dataType && (!column.lookup || isSearchByDisplayValue)) {\n          filter = [selector, selectedFilterOperation || \"contains\", filterValue];\n        } else {\n          if (\"between\" === selectedFilterOperation) {\n            return getFilterExpressionByRange.apply(column, [filterValue, target]);\n          } else {\n            if (isDateType(dataType) && typeUtils.isDefined(filterValue)) {\n              return getFilterExpressionForDate.apply(column, arguments);\n            } else {\n              if (\"number\" === dataType) {\n                return getFilterExpressionForNumber.apply(column, arguments);\n              } else {\n                if (\"object\" !== dataType) {\n                  filter = [selector, selectedFilterOperation || \"=\", filterValue];\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return filter;\n    },\n    getGroupInterval: function (column) {\n      var index;\n      var result = [];\n      var dateIntervals = [\"year\", \"month\", \"day\", \"hour\", \"minute\", \"second\"];\n      var groupInterval = column.headerFilter && column.headerFilter.groupInterval;\n      var interval = \"quarter\" === groupInterval ? \"month\" : groupInterval;\n\n      if (isDateType(column.dataType) && null !== groupInterval) {\n        result = \"datetime\" === column.dataType ? DEFAULT_DATETIME_INTERVAL : DEFAULT_DATE_INTERVAL;\n        index = inArray(interval, dateIntervals);\n\n        if (index >= 0) {\n          result = dateIntervals.slice(0, index);\n          result.push(groupInterval);\n          return result;\n        }\n\n        return result;\n      } else {\n        if (typeUtils.isDefined(groupInterval)) {\n          return Array.isArray(groupInterval) ? groupInterval : [groupInterval];\n        }\n      }\n    }\n  };\n}();","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/ticketSystem/frontend/node_modules/devextreme/ui/shared/filtering.js"],"names":["typeUtils","require","inArray","iteratorUtils","DEFAULT_DATE_INTERVAL","DEFAULT_DATETIME_INTERVAL","module","exports","getFilterSelector","column","target","selector","dataField","displayField","calculateDisplayValue","isZeroTime","date","getHours","getMinutes","getSeconds","getMilliseconds","isDateType","dataType","getDateValues","dateValue","isDate","getFullYear","getMonth","getDate","map","split","value","index","Number","getFilterExpressionByRange","filterValue","endFilterValue","startFilterExpression","endFilterExpression","Array","isArray","isDefined","Date","getTime","setDate","getFilterExpressionForDate","selectedFilterOperation","dateStart","dateEnd","dateInterval","values","getGroupInterval","length","getFilterExpressionForNumber","groupInterval","interval","startFilterValue","condition","defaultCalculateFilterExpression","isSearchByDisplayValue","lookup","filter","apply","arguments","result","dateIntervals","headerFilter","slice","push"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/shared/filtering.js)\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar typeUtils = require(\"../../core/utils/type\");\r\nvar inArray = require(\"../../core/utils/array\").inArray;\r\nvar iteratorUtils = require(\"../../core/utils/iterator\");\r\nvar DEFAULT_DATE_INTERVAL = [\"year\", \"month\", \"day\"];\r\nvar DEFAULT_DATETIME_INTERVAL = [\"year\", \"month\", \"day\", \"hour\", \"minute\"];\r\nmodule.exports = function() {\r\n    var getFilterSelector = function(column, target) {\r\n        var selector = column.dataField || column.selector;\r\n        if (\"search\" === target) {\r\n            selector = column.displayField || column.calculateDisplayValue || selector\r\n        }\r\n        return selector\r\n    };\r\n    var isZeroTime = function(date) {\r\n        return date.getHours() + date.getMinutes() + date.getSeconds() + date.getMilliseconds() < 1\r\n    };\r\n    var isDateType = function(dataType) {\r\n        return \"date\" === dataType || \"datetime\" === dataType\r\n    };\r\n    var getDateValues = function(dateValue) {\r\n        if (typeUtils.isDate(dateValue)) {\r\n            return [dateValue.getFullYear(), dateValue.getMonth(), dateValue.getDate(), dateValue.getHours(), dateValue.getMinutes(), dateValue.getSeconds()]\r\n        }\r\n        return iteratorUtils.map((\"\" + dateValue).split(\"/\"), function(value, index) {\r\n            return 1 === index ? Number(value) - 1 : Number(value)\r\n        })\r\n    };\r\n    var getFilterExpressionByRange = function(filterValue, target) {\r\n        var column = this;\r\n        var endFilterValue;\r\n        var startFilterExpression;\r\n        var endFilterExpression;\r\n        var selector = getFilterSelector(column, target);\r\n        if (Array.isArray(filterValue) && typeUtils.isDefined(filterValue[0]) && typeUtils.isDefined(filterValue[1])) {\r\n            startFilterExpression = [selector, \">=\", filterValue[0]];\r\n            endFilterExpression = [selector, \"<=\", filterValue[1]];\r\n            if (isDateType(column.dataType) && isZeroTime(filterValue[1])) {\r\n                endFilterValue = new Date(filterValue[1].getTime());\r\n                if (\"date\" === column.dataType) {\r\n                    endFilterValue.setDate(filterValue[1].getDate() + 1)\r\n                }\r\n                endFilterExpression = [selector, \"<\", endFilterValue]\r\n            }\r\n            return [startFilterExpression, \"and\", endFilterExpression]\r\n        }\r\n    };\r\n    var getFilterExpressionForDate = function(filterValue, selectedFilterOperation, target) {\r\n        var column = this;\r\n        var dateStart;\r\n        var dateEnd;\r\n        var dateInterval;\r\n        var values = getDateValues(filterValue);\r\n        var selector = getFilterSelector(column, target);\r\n        if (\"headerFilter\" === target) {\r\n            dateInterval = module.exports.getGroupInterval(column)[values.length - 1]\r\n        } else {\r\n            if (\"datetime\" === column.dataType) {\r\n                dateInterval = \"minute\"\r\n            }\r\n        }\r\n        switch (dateInterval) {\r\n            case \"year\":\r\n                dateStart = new Date(values[0], 0, 1);\r\n                dateEnd = new Date(values[0] + 1, 0, 1);\r\n                break;\r\n            case \"month\":\r\n                dateStart = new Date(values[0], values[1], 1);\r\n                dateEnd = new Date(values[0], values[1] + 1, 1);\r\n                break;\r\n            case \"quarter\":\r\n                dateStart = new Date(values[0], 3 * values[1], 1);\r\n                dateEnd = new Date(values[0], 3 * values[1] + 3, 1);\r\n                break;\r\n            case \"hour\":\r\n                dateStart = new Date(values[0], values[1], values[2], values[3]);\r\n                dateEnd = new Date(values[0], values[1], values[2], values[3] + 1);\r\n                break;\r\n            case \"minute\":\r\n                dateStart = new Date(values[0], values[1], values[2], values[3], values[4]);\r\n                dateEnd = new Date(values[0], values[1], values[2], values[3], values[4] + 1);\r\n                break;\r\n            case \"second\":\r\n                dateStart = new Date(values[0], values[1], values[2], values[3], values[4], values[5]);\r\n                dateEnd = new Date(values[0], values[1], values[2], values[3], values[4], values[5] + 1);\r\n                break;\r\n            default:\r\n                dateStart = new Date(values[0], values[1], values[2]);\r\n                dateEnd = new Date(values[0], values[1], values[2] + 1)\r\n        }\r\n        switch (selectedFilterOperation) {\r\n            case \"<\":\r\n                return [selector, \"<\", dateStart];\r\n            case \"<=\":\r\n                return [selector, \"<\", dateEnd];\r\n            case \">\":\r\n                return [selector, \">=\", dateEnd];\r\n            case \">=\":\r\n                return [selector, \">=\", dateStart];\r\n            case \"<>\":\r\n                return [\r\n                    [selector, \"<\", dateStart], \"or\", [selector, \">=\", dateEnd]\r\n                ];\r\n            default:\r\n                return [\r\n                    [selector, \">=\", dateStart], \"and\", [selector, \"<\", dateEnd]\r\n                ]\r\n        }\r\n    };\r\n    var getFilterExpressionForNumber = function(filterValue, selectedFilterOperation, target) {\r\n        var column = this;\r\n        var selector = getFilterSelector(column, target);\r\n        var groupInterval = module.exports.getGroupInterval(column);\r\n        if (\"headerFilter\" === target && groupInterval && typeUtils.isDefined(filterValue)) {\r\n            var values = (\"\" + filterValue).split(\"/\");\r\n            var value = Number(values[values.length - 1]);\r\n            var interval = groupInterval[values.length - 1];\r\n            var startFilterValue = [selector, \">=\", value];\r\n            var endFilterValue = [selector, \"<\", value + interval];\r\n            var condition = [startFilterValue, \"and\", endFilterValue];\r\n            return condition\r\n        }\r\n        return [selector, selectedFilterOperation || \"=\", filterValue]\r\n    };\r\n    return {\r\n        defaultCalculateFilterExpression: function(filterValue, selectedFilterOperation, target) {\r\n            var column = this;\r\n            var selector = getFilterSelector(column, target);\r\n            var isSearchByDisplayValue = column.calculateDisplayValue && \"search\" === target;\r\n            var dataType = isSearchByDisplayValue && column.lookup && column.lookup.dataType || column.dataType;\r\n            var filter = null;\r\n            if ((\"headerFilter\" === target || \"filterBuilder\" === target) && null === filterValue) {\r\n                filter = [selector, selectedFilterOperation || \"=\", null];\r\n                if (\"string\" === dataType) {\r\n                    filter = [filter, \"=\" === selectedFilterOperation ? \"or\" : \"and\", [selector, selectedFilterOperation || \"=\", \"\"]]\r\n                }\r\n            } else {\r\n                if (\"string\" === dataType && (!column.lookup || isSearchByDisplayValue)) {\r\n                    filter = [selector, selectedFilterOperation || \"contains\", filterValue]\r\n                } else {\r\n                    if (\"between\" === selectedFilterOperation) {\r\n                        return getFilterExpressionByRange.apply(column, [filterValue, target])\r\n                    } else {\r\n                        if (isDateType(dataType) && typeUtils.isDefined(filterValue)) {\r\n                            return getFilterExpressionForDate.apply(column, arguments)\r\n                        } else {\r\n                            if (\"number\" === dataType) {\r\n                                return getFilterExpressionForNumber.apply(column, arguments)\r\n                            } else {\r\n                                if (\"object\" !== dataType) {\r\n                                    filter = [selector, selectedFilterOperation || \"=\", filterValue]\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return filter\r\n        },\r\n        getGroupInterval: function(column) {\r\n            var index;\r\n            var result = [];\r\n            var dateIntervals = [\"year\", \"month\", \"day\", \"hour\", \"minute\", \"second\"];\r\n            var groupInterval = column.headerFilter && column.headerFilter.groupInterval;\r\n            var interval = \"quarter\" === groupInterval ? \"month\" : groupInterval;\r\n            if (isDateType(column.dataType) && null !== groupInterval) {\r\n                result = \"datetime\" === column.dataType ? DEFAULT_DATETIME_INTERVAL : DEFAULT_DATE_INTERVAL;\r\n                index = inArray(interval, dateIntervals);\r\n                if (index >= 0) {\r\n                    result = dateIntervals.slice(0, index);\r\n                    result.push(groupInterval);\r\n                    return result\r\n                }\r\n                return result\r\n            } else {\r\n                if (typeUtils.isDefined(groupInterval)) {\r\n                    return Array.isArray(groupInterval) ? groupInterval : [groupInterval]\r\n                }\r\n            }\r\n        }\r\n    }\r\n}();\r\n"]},"metadata":{},"sourceType":"script"}