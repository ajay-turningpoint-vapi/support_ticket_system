{"ast":null,"code":"/**\r\n * DevExtreme (ui/form/ui.form.js)\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _renderer = require(\"../../core/renderer\");\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _events_engine = require(\"../../events/core/events_engine\");\n\nvar _events_engine2 = _interopRequireDefault(_events_engine);\n\nvar _component_registrator = require(\"../../core/component_registrator\");\n\nvar _component_registrator2 = _interopRequireDefault(_component_registrator);\n\nvar _guid = require(\"../../core/guid\");\n\nvar _guid2 = _interopRequireDefault(_guid);\n\nvar _common = require(\"../../core/utils/common\");\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _array = require(\"../../core/utils/array\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _string = require(\"../../core/utils/string\");\n\nvar _browser = require(\"../../core/utils/browser\");\n\nvar _browser2 = _interopRequireDefault(_browser);\n\nvar _dom = require(\"../../core/utils/dom\");\n\nvar _message = require(\"../../localization/message\");\n\nvar _message2 = _interopRequireDefault(_message);\n\nvar _ui = require(\"../widget/ui.widget\");\n\nvar _ui2 = _interopRequireDefault(_ui);\n\nvar _editor = require(\"../editor/editor\");\n\nvar _editor2 = _interopRequireDefault(_editor);\n\nvar _window = require(\"../../core/utils/window\");\n\nvar _validation_engine = require(\"../validation_engine\");\n\nvar _validation_engine2 = _interopRequireDefault(_validation_engine);\n\nvar _uiForm = require(\"./ui.form.layout_manager\");\n\nvar _uiForm2 = _interopRequireDefault(_uiForm);\n\nvar _uiForm3 = require(\"./ui.form.items_runtime_info\");\n\nvar _uiForm4 = _interopRequireDefault(_uiForm3);\n\nvar _tab_panel = require(\"../tab_panel\");\n\nvar _tab_panel2 = _interopRequireDefault(_tab_panel);\n\nvar _ui3 = require(\"../scroll_view/ui.scrollable\");\n\nvar _ui4 = _interopRequireDefault(_ui3);\n\nvar _deferred = require(\"../../core/utils/deferred\");\n\nvar _themes = require(\"../themes\");\n\nvar _themes2 = _interopRequireDefault(_themes);\n\nvar _uiForm5 = require(\"./ui.form.item_options_actions\");\n\nvar _uiForm6 = _interopRequireDefault(_uiForm5);\n\nvar _uiForm7 = require(\"./ui.form.utils\");\n\nrequire(\"../validation_summary\");\n\nrequire(\"../validation_group\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) {\n    return;\n  }\n\n  if (\"string\" === typeof o) {\n    return _arrayLikeToArray(o, minLen);\n  }\n\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n\n  if (\"Object\" === n && o.constructor) {\n    n = o.constructor.name;\n  }\n\n  if (\"Map\" === n || \"Set\" === n) {\n    return Array.from(o);\n  }\n\n  if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) {\n    return _arrayLikeToArray(o, minLen);\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (\"undefined\" !== typeof Symbol && Symbol.iterator in Object(iter)) {\n    return Array.from(iter);\n  }\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    return _arrayLikeToArray(arr);\n  }\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (null == len || len > arr.length) {\n    len = arr.length;\n  }\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar FORM_CLASS = \"dx-form\";\nvar FIELD_ITEM_CLASS = \"dx-field-item\";\nvar FIELD_ITEM_LABEL_TEXT_CLASS = \"dx-field-item-label-text\";\nvar FORM_GROUP_CLASS = \"dx-form-group\";\nvar FORM_GROUP_CONTENT_CLASS = \"dx-form-group-content\";\nvar FORM_GROUP_WITH_CAPTION_CLASS = \"dx-form-group-with-caption\";\nvar FORM_GROUP_CAPTION_CLASS = \"dx-form-group-caption\";\nvar HIDDEN_LABEL_CLASS = \"dx-layout-manager-hidden-label\";\nvar FIELD_ITEM_LABEL_CLASS = \"dx-field-item-label\";\nvar FIELD_ITEM_LABEL_CONTENT_CLASS = \"dx-field-item-label-content\";\nvar FIELD_ITEM_TAB_CLASS = \"dx-field-item-tab\";\nvar FORM_FIELD_ITEM_COL_CLASS = \"dx-col-\";\nvar GROUP_COL_COUNT_CLASS = \"dx-group-colcount-\";\nvar GROUP_COL_COUNT_ATTR = \"group-col-count\";\nvar FIELD_ITEM_CONTENT_CLASS = \"dx-field-item-content\";\nvar FORM_VALIDATION_SUMMARY = \"dx-form-validation-summary\";\nvar WIDGET_CLASS = \"dx-widget\";\nvar FOCUSED_STATE_CLASS = \"dx-state-focused\";\nvar ITEM_OPTIONS_FOR_VALIDATION_UPDATING = [\"items\", \"isRequired\", \"validationRules\", \"visible\"];\n\nvar Form = _ui2.default.inherit({\n  _init: function () {\n    this.callBase();\n    this._cachedColCountOptions = [];\n    this._itemsRunTimeInfo = new _uiForm4.default();\n    this._groupsColCount = [];\n\n    this._attachSyncSubscriptions();\n  },\n  _initOptions: function (options) {\n    if (!(\"screenByWidth\" in options)) {\n      options.screenByWidth = _window.defaultScreenFactorFunc;\n    }\n\n    this.callBase(options);\n  },\n  _getDefaultOptions: function () {\n    return (0, _extend.extend)(this.callBase(), {\n      formID: \"dx-\" + new _guid2.default(),\n      formData: {},\n      colCount: 1,\n      screenByWidth: null,\n      colCountByScreen: void 0,\n      labelLocation: \"left\",\n      readOnly: false,\n      onFieldDataChanged: null,\n      customizeItem: null,\n      onEditorEnterKey: null,\n      minColWidth: 200,\n      alignItemLabels: true,\n      alignItemLabelsInAllGroups: true,\n      showColonAfterLabel: true,\n      showRequiredMark: true,\n      showOptionalMark: false,\n      requiredMark: \"*\",\n      optionalMark: _message2.default.format(\"dxForm-optionalMark\"),\n      requiredMessage: _message2.default.getFormatter(\"dxForm-requiredMessage\"),\n      showValidationSummary: false,\n      items: void 0,\n      scrollingEnabled: false,\n      validationGroup: void 0,\n      stylingMode: void 0\n    });\n  },\n  _defaultOptionsRules: function () {\n    return this.callBase().concat([{\n      device: function () {\n        return _themes2.default.isMaterial();\n      },\n      options: {\n        showColonAfterLabel: false,\n        labelLocation: \"top\"\n      }\n    }]);\n  },\n  _setOptionsByReference: function () {\n    this.callBase();\n    (0, _extend.extend)(this._optionsByReference, {\n      formData: true,\n      validationGroup: true\n    });\n  },\n  _getGroupColCount: function ($element) {\n    return parseInt($element.attr(GROUP_COL_COUNT_ATTR));\n  },\n  _createHiddenElement: function (rootLayoutManager) {\n    this._$hiddenElement = (0, _renderer2.default)(\"<div>\").addClass(WIDGET_CLASS).addClass(HIDDEN_LABEL_CLASS).appendTo(\"body\");\n\n    var $hiddenLabel = rootLayoutManager._renderLabel({\n      text: \" \",\n      location: this._labelLocation()\n    }).appendTo(this._$hiddenElement);\n\n    this._hiddenLabelText = $hiddenLabel.find(\".\" + FIELD_ITEM_LABEL_TEXT_CLASS)[0];\n  },\n  _removeHiddenElement: function () {\n    this._$hiddenElement.remove();\n\n    this._hiddenLabelText = null;\n  },\n  _getLabelWidthByText: function (text) {\n    this._hiddenLabelText.innerHTML = text;\n    return this._hiddenLabelText.offsetWidth;\n  },\n  _getLabelsSelectorByCol: function (index, options) {\n    options = options || {};\n    var fieldItemClass = options.inOneColumn ? FIELD_ITEM_CLASS : FORM_FIELD_ITEM_COL_CLASS + index;\n    var cssExcludeTabbedSelector = options.excludeTabbed ? \":not(.\" + FIELD_ITEM_TAB_CLASS + \")\" : \"\";\n    var childLabelContentSelector = \"> .\" + FIELD_ITEM_LABEL_CLASS + \" > .\" + FIELD_ITEM_LABEL_CONTENT_CLASS;\n    return \".\" + fieldItemClass + cssExcludeTabbedSelector + childLabelContentSelector;\n  },\n  _getLabelText: function (labelText) {\n    var length = labelText.children.length;\n    var child;\n    var result = \"\";\n    var i;\n\n    for (i = 0; i < length; i++) {\n      child = labelText.children[i];\n      result += !(0, _string.isEmpty)(child.innerText) ? child.innerText : child.innerHTML;\n    }\n\n    return result;\n  },\n  _applyLabelsWidthByCol: function ($container, index, options) {\n    var $labelTexts = $container.find(this._getLabelsSelectorByCol(index, options));\n    var $labelTextsLength = $labelTexts.length;\n    var labelWidth;\n    var i;\n    var maxWidth = 0;\n\n    for (i = 0; i < $labelTextsLength; i++) {\n      labelWidth = this._getLabelWidthByText(this._getLabelText($labelTexts[i]));\n\n      if (labelWidth > maxWidth) {\n        maxWidth = labelWidth;\n      }\n    }\n\n    for (i = 0; i < $labelTextsLength; i++) {\n      $labelTexts[i].style.width = maxWidth + \"px\";\n    }\n  },\n  _applyLabelsWidth: function ($container, excludeTabbed, inOneColumn, colCount) {\n    colCount = inOneColumn ? 1 : colCount || this._getGroupColCount($container);\n    var applyLabelsOptions = {\n      excludeTabbed: excludeTabbed,\n      inOneColumn: inOneColumn\n    };\n    var i;\n\n    for (i = 0; i < colCount; i++) {\n      this._applyLabelsWidthByCol($container, i, applyLabelsOptions);\n    }\n  },\n  _getGroupElementsInColumn: function ($container, columnIndex, colCount) {\n    var cssColCountSelector = (0, _type.isDefined)(colCount) ? \".\" + GROUP_COL_COUNT_CLASS + colCount : \"\";\n    var groupSelector = \".\" + FORM_FIELD_ITEM_COL_CLASS + columnIndex + \" > .\" + FIELD_ITEM_CONTENT_CLASS + \" > .\" + FORM_GROUP_CLASS + cssColCountSelector;\n    return $container.find(groupSelector);\n  },\n  _applyLabelsWidthWithGroups: function ($container, colCount, excludeTabbed) {\n    var alignItemLabelsInAllGroups = this.option(\"alignItemLabelsInAllGroups\");\n\n    if (alignItemLabelsInAllGroups) {\n      this._applyLabelsWidthWithNestedGroups($container, colCount, excludeTabbed);\n    } else {\n      var $groups = this.$element().find(\".\" + FORM_GROUP_CLASS);\n      var i;\n\n      for (i = 0; i < $groups.length; i++) {\n        this._applyLabelsWidth($groups.eq(i), excludeTabbed);\n      }\n    }\n  },\n  _applyLabelsWidthWithNestedGroups: function ($container, colCount, excludeTabbed) {\n    var applyLabelsOptions = {\n      excludeTabbed: excludeTabbed\n    };\n    var colIndex;\n    var groupsColIndex;\n    var groupColIndex;\n    var $groupsByCol;\n\n    for (colIndex = 0; colIndex < colCount; colIndex++) {\n      $groupsByCol = this._getGroupElementsInColumn($container, colIndex);\n\n      this._applyLabelsWidthByCol($groupsByCol, 0, applyLabelsOptions);\n\n      for (groupsColIndex = 0; groupsColIndex < this._groupsColCount.length; groupsColIndex++) {\n        $groupsByCol = this._getGroupElementsInColumn($container, colIndex, this._groupsColCount[groupsColIndex]);\n\n        var groupColCount = this._getGroupColCount($groupsByCol);\n\n        for (groupColIndex = 1; groupColIndex < groupColCount; groupColIndex++) {\n          this._applyLabelsWidthByCol($groupsByCol, groupColIndex, applyLabelsOptions);\n        }\n      }\n    }\n  },\n  _labelLocation: function () {\n    return this.option(\"labelLocation\");\n  },\n  _alignLabelsInColumn: function (_ref) {\n    var layoutManager = _ref.layoutManager,\n        inOneColumn = _ref.inOneColumn,\n        $container = _ref.$container,\n        excludeTabbed = _ref.excludeTabbed,\n        items = _ref.items;\n\n    if (!(0, _window.hasWindow)() || \"top\" === this._labelLocation()) {\n      return;\n    }\n\n    this._createHiddenElement(layoutManager);\n\n    if (inOneColumn) {\n      this._applyLabelsWidth($container, excludeTabbed, true);\n    } else {\n      if (this._checkGrouping(items)) {\n        this._applyLabelsWidthWithGroups($container, layoutManager._getColCount(), excludeTabbed);\n      } else {\n        this._applyLabelsWidth($container, excludeTabbed, false, layoutManager._getColCount());\n      }\n    }\n\n    this._removeHiddenElement();\n  },\n  _prepareFormData: function () {\n    if (!(0, _type.isDefined)(this.option(\"formData\"))) {\n      this.option(\"formData\", {});\n    }\n  },\n  _initMarkup: function () {\n    _validation_engine2.default.addGroup(this._getValidationGroup());\n\n    this._clearCachedInstances();\n\n    this._prepareFormData();\n\n    this.$element().addClass(FORM_CLASS);\n    this.callBase();\n    this.setAria(\"role\", \"form\", this.$element());\n\n    if (this.option(\"scrollingEnabled\")) {\n      this._renderScrollable();\n    }\n\n    this._renderLayout();\n\n    this._renderValidationSummary();\n\n    this._lastMarkupScreenFactor = this._targetScreenFactor || this._getCurrentScreenFactor();\n  },\n  _getCurrentScreenFactor: function () {\n    return (0, _window.hasWindow)() ? (0, _window.getCurrentScreenFactor)(this.option(\"screenByWidth\")) : \"lg\";\n  },\n  _clearCachedInstances: function () {\n    this._itemsRunTimeInfo.clear();\n\n    this._cachedLayoutManagers = [];\n  },\n  _alignLabels: function (layoutManager, inOneColumn) {\n    this._alignLabelsInColumn({\n      $container: this.$element(),\n      layoutManager: layoutManager,\n      excludeTabbed: true,\n      items: this.option(\"items\"),\n      inOneColumn: inOneColumn\n    });\n  },\n  _clean: function () {\n    this.callBase();\n    this._groupsColCount = [];\n    this._cachedColCountOptions = [];\n    this._lastMarkupScreenFactor = void 0;\n  },\n  _renderScrollable: function () {\n    var useNativeScrolling = this.option(\"useNativeScrolling\");\n    this._scrollable = new _ui4.default(this.$element(), {\n      useNative: !!useNativeScrolling,\n      useSimulatedScrollbar: !useNativeScrolling,\n      useKeyboard: false,\n      direction: \"both\",\n      bounceEnabled: false\n    });\n  },\n  _getContent: function () {\n    return this.option(\"scrollingEnabled\") ? this._scrollable.$content() : this.$element();\n  },\n  _renderValidationSummary: function () {\n    var $validationSummary = this.$element().find(\".\" + FORM_VALIDATION_SUMMARY);\n\n    if ($validationSummary.length > 0) {\n      $validationSummary.remove();\n    }\n\n    if (this.option(\"showValidationSummary\")) {\n      var _$validationSummary = (0, _renderer2.default)(\"<div>\").addClass(FORM_VALIDATION_SUMMARY).appendTo(this._getContent());\n\n      this._validationSummary = _$validationSummary.dxValidationSummary({\n        validationGroup: this._getValidationGroup()\n      }).dxValidationSummary(\"instance\");\n    }\n  },\n  _prepareItems: function (items, parentIsTabbedItem, currentPath, isTabs) {\n    if (items) {\n      var result = [];\n\n      for (var i = 0; i < items.length; i++) {\n        var item = items[i];\n        var path = (0, _uiForm7.concatPaths)(currentPath, (0, _uiForm7.createItemPathByIndex)(i, isTabs));\n\n        var guid = this._itemsRunTimeInfo.add({\n          item: item,\n          itemIndex: i,\n          path: path\n        });\n\n        if ((0, _type.isString)(item)) {\n          item = {\n            dataField: item\n          };\n        }\n\n        if ((0, _type.isObject)(item)) {\n          var itemCopy = (0, _extend.extend)({}, item);\n          itemCopy.guid = guid;\n\n          this._tryPrepareGroupItem(itemCopy);\n\n          this._tryPrepareTabbedItem(itemCopy, path);\n\n          this._tryPrepareItemTemplate(itemCopy);\n\n          if (parentIsTabbedItem) {\n            itemCopy.cssItemClass = FIELD_ITEM_TAB_CLASS;\n          }\n\n          if (itemCopy.items) {\n            itemCopy.items = this._prepareItems(itemCopy.items, parentIsTabbedItem, path);\n          }\n\n          result.push(itemCopy);\n        } else {\n          result.push(item);\n        }\n      }\n\n      return result;\n    }\n  },\n  _tryPrepareGroupItem: function (item) {\n    if (\"group\" === item.itemType) {\n      item.alignItemLabels = (0, _common.ensureDefined)(item.alignItemLabels, true);\n\n      if (item.template) {\n        item.groupContentTemplate = this._getTemplate(item.template);\n      }\n\n      item.template = this._itemGroupTemplate.bind(this, item);\n    }\n  },\n  _tryPrepareTabbedItem: function (item, path) {\n    if (\"tabbed\" === item.itemType) {\n      item.template = this._itemTabbedTemplate.bind(this, item);\n      item.tabs = this._prepareItems(item.tabs, true, path, true);\n    }\n  },\n  _tryPrepareItemTemplate: function (item) {\n    if (item.template) {\n      item.template = this._getTemplate(item.template);\n    }\n  },\n  _checkGrouping: function (items) {\n    if (items) {\n      for (var i = 0; i < items.length; i++) {\n        var item = items[i];\n\n        if (\"group\" === item.itemType) {\n          return true;\n        }\n      }\n    }\n  },\n  _renderLayout: function () {\n    var that = this;\n    var items = that.option(\"items\");\n\n    var $content = that._getContent();\n\n    items = that._prepareItems(items);\n    that._rootLayoutManager = that._renderLayoutManager(items, $content, {\n      colCount: that.option(\"colCount\"),\n      alignItemLabels: that.option(\"alignItemLabels\"),\n      screenByWidth: this.option(\"screenByWidth\"),\n      colCountByScreen: this.option(\"colCountByScreen\"),\n      onLayoutChanged: function (inOneColumn) {\n        that._alignLabels.bind(that)(that._rootLayoutManager, inOneColumn);\n      },\n      onContentReady: function (e) {\n        that._alignLabels(e.component, e.component.isSingleColumnMode());\n      }\n    });\n  },\n  _tryGetItemsForTemplate: function (item) {\n    return item.items || [];\n  },\n  _itemTabbedTemplate: function (item, e, $container) {\n    var _this = this;\n\n    var $tabPanel = (0, _renderer2.default)(\"<div>\").appendTo($container);\n    var tabPanelOptions = (0, _extend.extend)({}, item.tabPanelOptions, {\n      dataSource: item.tabs,\n      onItemRendered: function (args) {\n        return (0, _dom.triggerShownEvent)(args.itemElement);\n      },\n      itemTemplate: function (itemData, e, container) {\n        var $container = (0, _renderer2.default)(container);\n        var alignItemLabels = (0, _common.ensureDefined)(itemData.alignItemLabels, true);\n\n        var layoutManager = _this._renderLayoutManager(_this._tryGetItemsForTemplate(itemData), $container, {\n          colCount: itemData.colCount,\n          alignItemLabels: alignItemLabels,\n          screenByWidth: _this.option(\"screenByWidth\"),\n          colCountByScreen: itemData.colCountByScreen,\n          cssItemClass: itemData.cssItemClass,\n          onLayoutChanged: function (inOneColumn) {\n            _this._alignLabelsInColumn({\n              $container: $container,\n              layoutManager: layoutManager,\n              items: itemData.items,\n              inOneColumn: inOneColumn\n            });\n          }\n        });\n\n        if (_this._itemsRunTimeInfo) {\n          _this._itemsRunTimeInfo.extendRunTimeItemInfoByKey(itemData.guid, {\n            layoutManager: layoutManager\n          });\n        }\n\n        if (alignItemLabels) {\n          _this._alignLabelsInColumn({\n            $container: $container,\n            layoutManager: layoutManager,\n            items: itemData.items,\n            inOneColumn: layoutManager.isSingleColumnMode()\n          });\n        }\n      }\n    });\n\n    var tryUpdateTabPanelInstance = function (items, instance) {\n      if (Array.isArray(items)) {\n        items.forEach(function (item) {\n          return _this._itemsRunTimeInfo.extendRunTimeItemInfoByKey(item.guid, {\n            widgetInstance: instance\n          });\n        });\n      }\n    };\n\n    var tabPanel = this._createComponent($tabPanel, _tab_panel2.default, tabPanelOptions);\n\n    tabPanel.on(\"optionChanged\", function (e) {\n      if (\"dataSource\" === e.fullName) {\n        tryUpdateTabPanelInstance(e.value, e.component);\n      }\n    });\n    tryUpdateTabPanelInstance([{\n      guid: item.guid\n    }].concat(_toConsumableArray(item.tabs)), tabPanel);\n  },\n  _itemGroupTemplate: function (item, e, $container) {\n    var $group = (0, _renderer2.default)(\"<div>\").toggleClass(FORM_GROUP_WITH_CAPTION_CLASS, (0, _type.isDefined)(item.caption) && item.caption.length).addClass(FORM_GROUP_CLASS).appendTo($container);\n    var colCount;\n    var layoutManager;\n\n    if (item.caption) {\n      (0, _renderer2.default)(\"<span>\").addClass(FORM_GROUP_CAPTION_CLASS).text(item.caption).appendTo($group);\n    }\n\n    var $groupContent = (0, _renderer2.default)(\"<div>\").addClass(FORM_GROUP_CONTENT_CLASS).appendTo($group);\n\n    if (item.groupContentTemplate) {\n      var data = {\n        formData: this.option(\"formData\"),\n        component: this\n      };\n      item.groupContentTemplate.render({\n        model: data,\n        container: (0, _dom.getPublicElement)($groupContent)\n      });\n    } else {\n      layoutManager = this._renderLayoutManager(this._tryGetItemsForTemplate(item), $groupContent, {\n        colCount: item.colCount,\n        colCountByScreen: item.colCountByScreen,\n        alignItemLabels: item.alignItemLabels,\n        cssItemClass: item.cssItemClass\n      });\n      this._itemsRunTimeInfo && this._itemsRunTimeInfo.extendRunTimeItemInfoByKey(item.guid, {\n        layoutManager: layoutManager\n      });\n      colCount = layoutManager._getColCount();\n\n      if ((0, _array.inArray)(colCount, this._groupsColCount) === -1) {\n        this._groupsColCount.push(colCount);\n      }\n\n      $group.addClass(GROUP_COL_COUNT_CLASS + colCount);\n      $group.attr(GROUP_COL_COUNT_ATTR, colCount);\n    }\n  },\n  _renderLayoutManager: function (items, $rootElement, options) {\n    var $element = (0, _renderer2.default)(\"<div>\");\n    var that = this;\n\n    var config = that._getLayoutManagerConfig(items, options);\n\n    var baseColCountByScreen = {\n      lg: options.colCount,\n      md: options.colCount,\n      sm: options.colCount,\n      xs: 1\n    };\n\n    that._cachedColCountOptions.push({\n      colCountByScreen: (0, _extend.extend)(baseColCountByScreen, options.colCountByScreen)\n    });\n\n    $element.appendTo($rootElement);\n\n    var instance = that._createComponent($element, \"dxLayoutManager\", config);\n\n    instance.on(\"autoColCountChanged\", function () {\n      that._refresh();\n    });\n\n    that._cachedLayoutManagers.push(instance);\n\n    return instance;\n  },\n  _getValidationGroup: function () {\n    return this.option(\"validationGroup\") || this;\n  },\n  _getLayoutManagerConfig: function (items, options) {\n    var _this2 = this;\n\n    var baseConfig = {\n      form: this,\n      validationGroup: this._getValidationGroup(),\n      showRequiredMark: this.option(\"showRequiredMark\"),\n      showOptionalMark: this.option(\"showOptionalMark\"),\n      requiredMark: this.option(\"requiredMark\"),\n      optionalMark: this.option(\"optionalMark\"),\n      requiredMessage: this.option(\"requiredMessage\"),\n      screenByWidth: this.option(\"screenByWidth\"),\n      layoutData: this.option(\"formData\"),\n      labelLocation: this.option(\"labelLocation\"),\n      customizeItem: this.option(\"customizeItem\"),\n      minColWidth: this.option(\"minColWidth\"),\n      showColonAfterLabel: this.option(\"showColonAfterLabel\"),\n      onEditorEnterKey: this.option(\"onEditorEnterKey\"),\n      onFieldDataChanged: function (args) {\n        if (!_this2._isDataUpdating) {\n          _this2._triggerOnFieldDataChanged(args);\n        }\n      },\n      validationBoundary: this.option(\"scrollingEnabled\") ? this.$element() : void 0\n    };\n    return (0, _extend.extend)(baseConfig, {\n      items: items,\n      onContentReady: function (args) {\n        _this2._itemsRunTimeInfo.addItemsOrExtendFrom(args.component._itemsRunTimeInfo);\n\n        options.onContentReady && options.onContentReady(args);\n      },\n      onDisposing: function (_ref2) {\n        var component = _ref2.component;\n        var nestedItemsRunTimeInfo = component.getItemsRunTimeInfo();\n\n        _this2._itemsRunTimeInfo.removeItemsByItems(nestedItemsRunTimeInfo);\n      },\n      colCount: options.colCount,\n      alignItemLabels: options.alignItemLabels,\n      cssItemClass: options.cssItemClass,\n      colCountByScreen: options.colCountByScreen,\n      onLayoutChanged: options.onLayoutChanged,\n      width: options.width\n    });\n  },\n  _createComponent: function ($element, type, config) {\n    var that = this;\n    config = config || {};\n\n    that._extendConfig(config, {\n      readOnly: that.option(\"readOnly\")\n    });\n\n    return that.callBase($element, type, config);\n  },\n  _attachSyncSubscriptions: function () {\n    var that = this;\n    that.on(\"optionChanged\", function (args) {\n      var optionFullName = args.fullName;\n\n      if (\"formData\" === optionFullName) {\n        if (!(0, _type.isDefined)(args.value)) {\n          that._options.silent(\"formData\", args.value = {});\n        }\n\n        that._triggerOnFieldDataChangedByDataSet(args.value);\n      }\n\n      if (that._cachedLayoutManagers.length) {\n        (0, _iterator.each)(that._cachedLayoutManagers, function (index, layoutManager) {\n          if (\"formData\" === optionFullName) {\n            that._isDataUpdating = true;\n            layoutManager.option(\"layoutData\", args.value);\n            that._isDataUpdating = false;\n          }\n\n          if (\"readOnly\" === args.name || \"disabled\" === args.name) {\n            layoutManager.option(optionFullName, args.value);\n          }\n        });\n      }\n    });\n  },\n  _optionChanged: function (args) {\n    var rootNameOfComplexOption = this._getRootLevelOfExpectedComplexOption(args.fullName, [\"formData\", \"items\"]);\n\n    if (rootNameOfComplexOption) {\n      this._customHandlerOfComplexOption(args, rootNameOfComplexOption);\n\n      return;\n    }\n\n    switch (args.name) {\n      case \"formData\":\n        if (!this.option(\"items\")) {\n          this._invalidate();\n        } else {\n          if ((0, _type.isEmptyObject)(args.value)) {\n            this._resetValues();\n          }\n        }\n\n        break;\n\n      case \"items\":\n      case \"colCount\":\n      case \"onFieldDataChanged\":\n      case \"onEditorEnterKey\":\n      case \"labelLocation\":\n      case \"alignItemLabels\":\n      case \"showColonAfterLabel\":\n      case \"customizeItem\":\n      case \"alignItemLabelsInAllGroups\":\n      case \"showRequiredMark\":\n      case \"showOptionalMark\":\n      case \"requiredMark\":\n      case \"optionalMark\":\n      case \"requiredMessage\":\n      case \"scrollingEnabled\":\n      case \"formID\":\n      case \"colCountByScreen\":\n      case \"screenByWidth\":\n      case \"stylingMode\":\n        this._invalidate();\n\n        break;\n\n      case \"showValidationSummary\":\n        this._renderValidationSummary();\n\n        break;\n\n      case \"minColWidth\":\n        if (\"auto\" === this.option(\"colCount\")) {\n          this._invalidate();\n        }\n\n        break;\n\n      case \"readOnly\":\n        break;\n\n      case \"width\":\n        this.callBase(args);\n\n        this._rootLayoutManager.option(args.name, args.value);\n\n        this._alignLabels(this._rootLayoutManager, this._rootLayoutManager.isSingleColumnMode());\n\n        break;\n\n      case \"visible\":\n        this.callBase(args);\n\n        if (args.value) {\n          (0, _dom.triggerShownEvent)(this.$element());\n        }\n\n        break;\n\n      case \"validationGroup\":\n        _validation_engine2.default.removeGroup(args.previousValue || this);\n\n        this._invalidate();\n\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _getRootLevelOfExpectedComplexOption: function (fullOptionName, expectedRootNames) {\n    var splitFullName = fullOptionName.split(\".\");\n    var result;\n\n    if (splitFullName.length > 1) {\n      var i;\n      var rootOptionName = splitFullName[0];\n\n      for (i = 0; i < expectedRootNames.length; i++) {\n        if (rootOptionName.search(expectedRootNames[i]) !== -1) {\n          result = expectedRootNames[i];\n        }\n      }\n    }\n\n    return result;\n  },\n  _tryCreateItemOptionAction: function (optionName, item, value, previousValue, itemPath) {\n    if (\"tabs\" === optionName) {\n      this._itemsRunTimeInfo.removeItemsByPathStartWith(\"\".concat(itemPath, \".tabs\"));\n\n      value = this._prepareItems(value, true, itemPath, true);\n    }\n\n    return (0, _uiForm6.default)(optionName, {\n      item: item,\n      value: value,\n      previousValue: previousValue,\n      itemsRunTimeInfo: this._itemsRunTimeInfo\n    });\n  },\n  _tryExecuteItemOptionAction: function (action) {\n    return action && action.tryExecute();\n  },\n  _updateValidationGroupAndSummaryIfNeeded: function (fullName) {\n    var optionName = (0, _uiForm7.getOptionNameFromFullName)(fullName);\n\n    if (ITEM_OPTIONS_FOR_VALIDATION_UPDATING.indexOf(optionName) > -1) {\n      _validation_engine2.default.addGroup(this._getValidationGroup());\n\n      if (this.option(\"showValidationSummary\")) {\n        this._validationSummary && this._validationSummary._initGroupRegistration();\n      }\n    }\n  },\n  _setLayoutManagerItemOption: function (layoutManager, optionName, value, path) {\n    var _this3 = this;\n\n    if (this._updateLockCount > 0) {\n      !layoutManager._updateLockCount && layoutManager.beginUpdate();\n\n      var key = this._itemsRunTimeInfo.getKeyByPath(path);\n\n      this.postponedOperations.add(key, function () {\n        !layoutManager._disposed && layoutManager.endUpdate();\n        return new _deferred.Deferred().resolve();\n      });\n    }\n\n    var contentReadyHandler = function contentReadyHandler(e) {\n      e.component.off(\"contentReady\", contentReadyHandler);\n\n      if ((0, _uiForm7.isFullPathContainsTabs)(path)) {\n        var tabPath = (0, _uiForm7.tryGetTabPath)(path);\n\n        var tabLayoutManager = _this3._itemsRunTimeInfo.getGroupOrTabLayoutManagerByPath(tabPath);\n\n        _this3._alignLabelsInColumn({\n          items: tabLayoutManager.option(\"items\"),\n          layoutManager: tabLayoutManager,\n          $container: tabLayoutManager.$element(),\n          inOneColumn: tabLayoutManager.isSingleColumnMode()\n        });\n      } else {\n        _this3._alignLabels(_this3._rootLayoutManager, _this3._rootLayoutManager.isSingleColumnMode());\n      }\n    };\n\n    layoutManager.on(\"contentReady\", contentReadyHandler);\n    layoutManager.option(optionName, value);\n\n    this._updateValidationGroupAndSummaryIfNeeded(optionName);\n  },\n  _tryChangeLayoutManagerItemOption: function (fullName, value) {\n    var nameParts = fullName.split(\".\");\n    var optionName = (0, _uiForm7.getOptionNameFromFullName)(fullName);\n\n    if (\"items\" === optionName && nameParts.length > 1) {\n      var itemPath = this._getItemPath(nameParts);\n\n      var layoutManager = this._itemsRunTimeInfo.getGroupOrTabLayoutManagerByPath(itemPath);\n\n      if (layoutManager) {\n        this._itemsRunTimeInfo.removeItemsByItems(layoutManager.getItemsRunTimeInfo());\n\n        var items = this._prepareItems(value, false, itemPath);\n\n        this._setLayoutManagerItemOption(layoutManager, optionName, items, itemPath);\n\n        return true;\n      }\n    } else {\n      if (nameParts.length > 2) {\n        var endPartIndex = nameParts.length - 2;\n\n        var _itemPath = this._getItemPath(nameParts.slice(0, endPartIndex));\n\n        var _layoutManager = this._itemsRunTimeInfo.getGroupOrTabLayoutManagerByPath(_itemPath);\n\n        if (_layoutManager) {\n          var fullOptionName = (0, _uiForm7.getFullOptionName)(nameParts[endPartIndex], optionName);\n\n          if (\"editorType\" === optionName) {\n            if (_layoutManager.option(fullOptionName) !== value) {\n              return false;\n            }\n          }\n\n          if (\"visible\" === optionName) {\n            var formItems = this.option((0, _uiForm7.getFullOptionName)(_itemPath, \"items\"));\n\n            if (formItems && formItems.length) {\n              var layoutManagerItems = _layoutManager.option(\"items\");\n\n              formItems.forEach(function (item, index) {\n                var layoutItem = layoutManagerItems[index];\n                layoutItem.visibleIndex = item.visibleIndex;\n              });\n            }\n          }\n\n          this._setLayoutManagerItemOption(_layoutManager, fullOptionName, value, _itemPath);\n\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n  _tryChangeLayoutManagerItemOptions: function (itemPath, options) {\n    var _this4 = this;\n\n    var result;\n    this.beginUpdate();\n    (0, _iterator.each)(options, function (optionName, optionValue) {\n      result = _this4._tryChangeLayoutManagerItemOption((0, _uiForm7.getFullOptionName)(itemPath, optionName), optionValue);\n\n      if (!result) {\n        return false;\n      }\n    });\n    this.endUpdate();\n    return result;\n  },\n  _customHandlerOfComplexOption: function (args, rootOptionName) {\n    var nameParts = args.fullName.split(\".\");\n    var value = args.value;\n\n    if (\"items\" === rootOptionName) {\n      var itemPath = this._getItemPath(nameParts);\n\n      var item = this.option(itemPath);\n      var optionNameWithoutPath = args.fullName.replace(itemPath + \".\", \"\");\n      var simpleOptionName = optionNameWithoutPath.split(\".\")[0].replace(/\\[\\d+]/, \"\");\n\n      var itemAction = this._tryCreateItemOptionAction(simpleOptionName, item, item[simpleOptionName], args.previousValue, itemPath);\n\n      if (!this._tryExecuteItemOptionAction(itemAction) && !this._tryChangeLayoutManagerItemOption(args.fullName, value)) {\n        if (item) {\n          this._changeItemOption(item, optionNameWithoutPath, value);\n\n          var items = this._generateItemsFromData(this.option(\"items\"));\n\n          this.option(\"items\", items);\n        }\n      }\n    }\n\n    if (\"formData\" === rootOptionName) {\n      var dataField = nameParts.slice(1).join(\".\");\n      var editor = this.getEditor(dataField);\n\n      if (editor) {\n        editor.option(\"value\", value);\n      } else {\n        this._triggerOnFieldDataChanged({\n          dataField: dataField,\n          value: value\n        });\n      }\n    }\n  },\n  _getItemPath: function (nameParts) {\n    var itemPath = nameParts[0];\n    var i;\n\n    for (i = 1; i < nameParts.length; i++) {\n      if (nameParts[i].search(/items\\[\\d+]|tabs\\[\\d+]/) !== -1) {\n        itemPath += \".\" + nameParts[i];\n      } else {\n        break;\n      }\n    }\n\n    return itemPath;\n  },\n  _triggerOnFieldDataChanged: function (args) {\n    this._createActionByOption(\"onFieldDataChanged\")(args);\n  },\n  _triggerOnFieldDataChangedByDataSet: function (data) {\n    var that = this;\n\n    if (data && (0, _type.isObject)(data)) {\n      (0, _iterator.each)(data, function (dataField, value) {\n        that._triggerOnFieldDataChanged({\n          dataField: dataField,\n          value: value\n        });\n      });\n    }\n  },\n  _updateFieldValue: function (dataField, value) {\n    if ((0, _type.isDefined)(this.option(\"formData\"))) {\n      var editor = this.getEditor(dataField);\n      this.option(\"formData.\" + dataField, value);\n\n      if (editor) {\n        var editorValue = editor.option(\"value\");\n\n        if (editorValue !== value) {\n          editor.option(\"value\", value);\n        }\n      }\n    }\n  },\n  _generateItemsFromData: function (items) {\n    var formData = this.option(\"formData\");\n    var result = [];\n\n    if (!items && (0, _type.isDefined)(formData)) {\n      (0, _iterator.each)(formData, function (dataField) {\n        result.push({\n          dataField: dataField\n        });\n      });\n    }\n\n    if (items) {\n      (0, _iterator.each)(items, function (index, item) {\n        if ((0, _type.isObject)(item)) {\n          result.push(item);\n        } else {\n          result.push({\n            dataField: item\n          });\n        }\n      });\n    }\n\n    return result;\n  },\n  _getItemByField: function (field, items) {\n    var that = this;\n    var fieldParts = (0, _type.isObject)(field) ? field : that._getFieldParts(field);\n    var fieldName = fieldParts.fieldName;\n    var fieldPath = fieldParts.fieldPath;\n    var resultItem;\n\n    if (items.length) {\n      (0, _iterator.each)(items, function (index, item) {\n        var itemType = item.itemType;\n\n        if (fieldPath.length) {\n          var path = fieldPath.slice();\n          item = that._getItemByFieldPath(path, fieldName, item);\n        } else {\n          if (\"group\" === itemType && !(item.caption || item.name) || \"tabbed\" === itemType && !item.name) {\n            var subItemsField = that._getSubItemField(itemType);\n\n            item.items = that._generateItemsFromData(item.items);\n            item = that._getItemByField({\n              fieldName: fieldName,\n              fieldPath: fieldPath\n            }, item[subItemsField]);\n          }\n        }\n\n        if ((0, _uiForm7.isExpectedItem)(item, fieldName)) {\n          resultItem = item;\n          return false;\n        }\n      });\n    }\n\n    return resultItem;\n  },\n  _getFieldParts: function (field) {\n    var fieldSeparator = \".\";\n    var fieldName = field;\n    var separatorIndex = fieldName.indexOf(fieldSeparator);\n    var resultPath = [];\n\n    while (separatorIndex !== -1) {\n      resultPath.push(fieldName.substr(0, separatorIndex));\n      fieldName = fieldName.substr(separatorIndex + 1);\n      separatorIndex = fieldName.indexOf(fieldSeparator);\n    }\n\n    return {\n      fieldName: fieldName,\n      fieldPath: resultPath.reverse()\n    };\n  },\n  _getItemByFieldPath: function (path, fieldName, item) {\n    var that = this;\n    var itemType = item.itemType;\n\n    var subItemsField = that._getSubItemField(itemType);\n\n    var isItemWithSubItems = \"group\" === itemType || \"tabbed\" === itemType || item.title;\n    var result;\n\n    do {\n      if (isItemWithSubItems) {\n        var name = item.name || item.caption || item.title;\n        var isGroupWithName = (0, _type.isDefined)(name);\n        var nameWithoutSpaces = (0, _uiForm7.getTextWithoutSpaces)(name);\n        var pathNode = void 0;\n        item[subItemsField] = that._generateItemsFromData(item[subItemsField]);\n\n        if (isGroupWithName) {\n          pathNode = path.pop();\n        }\n\n        if (!path.length) {\n          result = that._getItemByField(fieldName, item[subItemsField]);\n\n          if (result) {\n            break;\n          }\n        }\n\n        if (!isGroupWithName || isGroupWithName && nameWithoutSpaces === pathNode) {\n          if (path.length) {\n            result = that._searchItemInEverySubItem(path, fieldName, item[subItemsField]);\n          }\n        }\n      } else {\n        break;\n      }\n    } while (path.length && !(0, _type.isDefined)(result));\n\n    return result;\n  },\n  _getSubItemField: function (itemType) {\n    return \"tabbed\" === itemType ? \"tabs\" : \"items\";\n  },\n  _searchItemInEverySubItem: function (path, fieldName, items) {\n    var that = this;\n    var result;\n    (0, _iterator.each)(items, function (index, groupItem) {\n      result = that._getItemByFieldPath(path.slice(), fieldName, groupItem);\n\n      if (result) {\n        return false;\n      }\n    });\n\n    if (!result) {\n      result = false;\n    }\n\n    return result;\n  },\n  _changeItemOption: function (item, option, value) {\n    if ((0, _type.isObject)(item)) {\n      item[option] = value;\n    }\n  },\n  _dimensionChanged: function () {\n    var currentScreenFactor = this._getCurrentScreenFactor();\n\n    if (this._lastMarkupScreenFactor !== currentScreenFactor) {\n      if (this._isColCountChanged(this._lastMarkupScreenFactor, currentScreenFactor)) {\n        this._targetScreenFactor = currentScreenFactor;\n\n        this._refresh();\n\n        this._targetScreenFactor = void 0;\n      }\n\n      this._lastMarkupScreenFactor = currentScreenFactor;\n    }\n  },\n  _isColCountChanged: function (oldScreenSize, newScreenSize) {\n    var isChanged = false;\n    (0, _iterator.each)(this._cachedColCountOptions, function (index, item) {\n      if (item.colCountByScreen[oldScreenSize] !== item.colCountByScreen[newScreenSize]) {\n        isChanged = true;\n        return false;\n      }\n    });\n    return isChanged;\n  },\n  _refresh: function () {\n    var editorSelector = \".\" + FOCUSED_STATE_CLASS + \" input, .\" + FOCUSED_STATE_CLASS + \" textarea\";\n\n    _events_engine2.default.trigger(this.$element().find(editorSelector), \"change\");\n\n    this.callBase();\n  },\n  _resetValues: function () {\n    this._itemsRunTimeInfo.each(function (_, itemRunTimeInfo) {\n      if ((0, _type.isDefined)(itemRunTimeInfo.widgetInstance) && itemRunTimeInfo.widgetInstance instanceof _editor2.default) {\n        itemRunTimeInfo.widgetInstance.reset();\n        itemRunTimeInfo.widgetInstance.option(\"isValid\", true);\n      }\n    });\n\n    _validation_engine2.default.resetGroup(this._getValidationGroup());\n  },\n  _updateData: function (data, value, isComplexData) {\n    var that = this;\n\n    var _data = isComplexData ? value : data;\n\n    if ((0, _type.isObject)(_data)) {\n      (0, _iterator.each)(_data, function (dataField, fieldValue) {\n        that._updateData(isComplexData ? data + \".\" + dataField : dataField, fieldValue, (0, _type.isObject)(fieldValue));\n      });\n    } else {\n      if ((0, _type.isString)(data)) {\n        that._updateFieldValue(data, value);\n      }\n    }\n  },\n  registerKeyHandler: function (key, handler) {\n    this.callBase(key, handler);\n\n    this._itemsRunTimeInfo.each(function (_, itemRunTimeInfo) {\n      if ((0, _type.isDefined)(itemRunTimeInfo.widgetInstance)) {\n        itemRunTimeInfo.widgetInstance.registerKeyHandler(key, handler);\n      }\n    });\n  },\n  _focusTarget: function () {\n    return this.$element().find(\".\" + FIELD_ITEM_CONTENT_CLASS + \" [tabindex]\").first();\n  },\n  _visibilityChanged: function (visible) {\n    if (visible && _browser2.default.msie) {\n      this._refresh();\n    }\n  },\n  _dispose: function () {\n    _validation_engine2.default.removeGroup(this._getValidationGroup());\n\n    this.callBase();\n  },\n  resetValues: function () {\n    this._resetValues();\n  },\n  updateData: function (data, value) {\n    this._updateData(data, value);\n  },\n  getEditor: function (dataField) {\n    return this._itemsRunTimeInfo.findWidgetInstanceByDataField(dataField) || this._itemsRunTimeInfo.findWidgetInstanceByName(dataField);\n  },\n  getButton: function (name) {\n    return this._itemsRunTimeInfo.findWidgetInstanceByName(name);\n  },\n  updateDimensions: function () {\n    var that = this;\n    var deferred = new _deferred.Deferred();\n\n    if (that._scrollable) {\n      that._scrollable.update().done(function () {\n        deferred.resolveWith(that);\n      });\n    } else {\n      deferred.resolveWith(that);\n    }\n\n    return deferred.promise();\n  },\n  itemOption: function (id, option, value) {\n    var _this5 = this;\n\n    var items = this._generateItemsFromData(this.option(\"items\"));\n\n    var item = this._getItemByField(id, items);\n\n    var path = this._itemsRunTimeInfo.getPathFromItem(item);\n\n    if (!item) {\n      return;\n    }\n\n    switch (arguments.length) {\n      case 1:\n        return item;\n\n      case 3:\n        var itemAction = this._tryCreateItemOptionAction(option, item, value, item[option], path);\n\n        this._changeItemOption(item, option, value);\n\n        var fullName = (0, _uiForm7.getFullOptionName)(path, option);\n\n        if (!this._tryExecuteItemOptionAction(itemAction) && !this._tryChangeLayoutManagerItemOption(fullName, value)) {\n          this.option(\"items\", items);\n        }\n\n        break;\n\n      default:\n        if ((0, _type.isObject)(option)) {\n          if (!this._tryChangeLayoutManagerItemOptions(path, option)) {\n            var allowUpdateItems;\n            (0, _iterator.each)(option, function (optionName, optionValue) {\n              var itemAction = _this5._tryCreateItemOptionAction(optionName, item, optionValue, item[optionName], path);\n\n              _this5._changeItemOption(item, optionName, optionValue);\n\n              if (!allowUpdateItems && !_this5._tryExecuteItemOptionAction(itemAction)) {\n                allowUpdateItems = true;\n              }\n            });\n            allowUpdateItems && this.option(\"items\", items);\n          }\n        }\n\n    }\n  },\n  validate: function () {\n    return _validation_engine2.default.validateGroup(this._getValidationGroup());\n  },\n  getItemID: function (name) {\n    return \"dx_\" + this.option(\"formID\") + \"_\" + (name || new _guid2.default());\n  },\n  getTargetScreenFactor: function () {\n    return this._targetScreenFactor;\n  }\n});\n\n(0, _component_registrator2.default)(\"dxForm\", Form);\nmodule.exports = Form;","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/ticketSystem/frontend/node_modules/devextreme/ui/form/ui.form.js"],"names":["_renderer","require","_renderer2","_interopRequireDefault","_events_engine","_events_engine2","_component_registrator","_component_registrator2","_guid","_guid2","_common","_type","_iterator","_array","_extend","_string","_browser","_browser2","_dom","_message","_message2","_ui","_ui2","_editor","_editor2","_window","_validation_engine","_validation_engine2","_uiForm","_uiForm2","_uiForm3","_uiForm4","_tab_panel","_tab_panel2","_ui3","_ui4","_deferred","_themes","_themes2","_uiForm5","_uiForm6","_uiForm7","obj","__esModule","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","iter","Symbol","iterator","isArray","len","length","i","arr2","FORM_CLASS","FIELD_ITEM_CLASS","FIELD_ITEM_LABEL_TEXT_CLASS","FORM_GROUP_CLASS","FORM_GROUP_CONTENT_CLASS","FORM_GROUP_WITH_CAPTION_CLASS","FORM_GROUP_CAPTION_CLASS","HIDDEN_LABEL_CLASS","FIELD_ITEM_LABEL_CLASS","FIELD_ITEM_LABEL_CONTENT_CLASS","FIELD_ITEM_TAB_CLASS","FORM_FIELD_ITEM_COL_CLASS","GROUP_COL_COUNT_CLASS","GROUP_COL_COUNT_ATTR","FIELD_ITEM_CONTENT_CLASS","FORM_VALIDATION_SUMMARY","WIDGET_CLASS","FOCUSED_STATE_CLASS","ITEM_OPTIONS_FOR_VALIDATION_UPDATING","Form","default","inherit","_init","callBase","_cachedColCountOptions","_itemsRunTimeInfo","_groupsColCount","_attachSyncSubscriptions","_initOptions","options","screenByWidth","defaultScreenFactorFunc","_getDefaultOptions","extend","formID","formData","colCount","colCountByScreen","labelLocation","readOnly","onFieldDataChanged","customizeItem","onEditorEnterKey","minColWidth","alignItemLabels","alignItemLabelsInAllGroups","showColonAfterLabel","showRequiredMark","showOptionalMark","requiredMark","optionalMark","format","requiredMessage","getFormatter","showValidationSummary","items","scrollingEnabled","validationGroup","stylingMode","_defaultOptionsRules","concat","device","isMaterial","_setOptionsByReference","_optionsByReference","_getGroupColCount","$element","parseInt","attr","_createHiddenElement","rootLayoutManager","_$hiddenElement","addClass","appendTo","$hiddenLabel","_renderLabel","text","location","_labelLocation","_hiddenLabelText","find","_removeHiddenElement","remove","_getLabelWidthByText","innerHTML","offsetWidth","_getLabelsSelectorByCol","index","fieldItemClass","inOneColumn","cssExcludeTabbedSelector","excludeTabbed","childLabelContentSelector","_getLabelText","labelText","children","child","result","isEmpty","innerText","_applyLabelsWidthByCol","$container","$labelTexts","$labelTextsLength","labelWidth","maxWidth","style","width","_applyLabelsWidth","applyLabelsOptions","_getGroupElementsInColumn","columnIndex","cssColCountSelector","isDefined","groupSelector","_applyLabelsWidthWithGroups","option","_applyLabelsWidthWithNestedGroups","$groups","eq","colIndex","groupsColIndex","groupColIndex","$groupsByCol","groupColCount","_alignLabelsInColumn","_ref","layoutManager","hasWindow","_checkGrouping","_getColCount","_prepareFormData","_initMarkup","addGroup","_getValidationGroup","_clearCachedInstances","setAria","_renderScrollable","_renderLayout","_renderValidationSummary","_lastMarkupScreenFactor","_targetScreenFactor","_getCurrentScreenFactor","getCurrentScreenFactor","clear","_cachedLayoutManagers","_alignLabels","_clean","useNativeScrolling","_scrollable","useNative","useSimulatedScrollbar","useKeyboard","direction","bounceEnabled","_getContent","$content","$validationSummary","_$validationSummary","_validationSummary","dxValidationSummary","_prepareItems","parentIsTabbedItem","currentPath","isTabs","item","path","concatPaths","createItemPathByIndex","guid","add","itemIndex","isString","dataField","isObject","itemCopy","_tryPrepareGroupItem","_tryPrepareTabbedItem","_tryPrepareItemTemplate","cssItemClass","push","itemType","ensureDefined","template","groupContentTemplate","_getTemplate","_itemGroupTemplate","bind","_itemTabbedTemplate","tabs","that","_rootLayoutManager","_renderLayoutManager","onLayoutChanged","onContentReady","e","component","isSingleColumnMode","_tryGetItemsForTemplate","_this","$tabPanel","tabPanelOptions","dataSource","onItemRendered","args","triggerShownEvent","itemElement","itemTemplate","itemData","container","extendRunTimeItemInfoByKey","tryUpdateTabPanelInstance","instance","forEach","widgetInstance","tabPanel","_createComponent","on","fullName","value","$group","toggleClass","caption","$groupContent","data","render","model","getPublicElement","inArray","$rootElement","config","_getLayoutManagerConfig","baseColCountByScreen","lg","md","sm","xs","_refresh","_this2","baseConfig","form","layoutData","_isDataUpdating","_triggerOnFieldDataChanged","validationBoundary","addItemsOrExtendFrom","onDisposing","_ref2","nestedItemsRunTimeInfo","getItemsRunTimeInfo","removeItemsByItems","type","_extendConfig","optionFullName","_options","silent","_triggerOnFieldDataChangedByDataSet","each","_optionChanged","rootNameOfComplexOption","_getRootLevelOfExpectedComplexOption","_customHandlerOfComplexOption","_invalidate","isEmptyObject","_resetValues","removeGroup","previousValue","fullOptionName","expectedRootNames","splitFullName","split","rootOptionName","search","_tryCreateItemOptionAction","optionName","itemPath","removeItemsByPathStartWith","itemsRunTimeInfo","_tryExecuteItemOptionAction","action","tryExecute","_updateValidationGroupAndSummaryIfNeeded","getOptionNameFromFullName","indexOf","_initGroupRegistration","_setLayoutManagerItemOption","_this3","_updateLockCount","beginUpdate","key","getKeyByPath","postponedOperations","_disposed","endUpdate","Deferred","resolve","contentReadyHandler","off","isFullPathContainsTabs","tabPath","tryGetTabPath","tabLayoutManager","getGroupOrTabLayoutManagerByPath","_tryChangeLayoutManagerItemOption","nameParts","_getItemPath","endPartIndex","_itemPath","_layoutManager","getFullOptionName","formItems","layoutManagerItems","layoutItem","visibleIndex","_tryChangeLayoutManagerItemOptions","_this4","optionValue","optionNameWithoutPath","replace","simpleOptionName","itemAction","_changeItemOption","_generateItemsFromData","join","editor","getEditor","_createActionByOption","_updateFieldValue","editorValue","_getItemByField","field","fieldParts","_getFieldParts","fieldName","fieldPath","resultItem","_getItemByFieldPath","subItemsField","_getSubItemField","isExpectedItem","fieldSeparator","separatorIndex","resultPath","substr","reverse","isItemWithSubItems","title","isGroupWithName","nameWithoutSpaces","getTextWithoutSpaces","pathNode","pop","_searchItemInEverySubItem","groupItem","_dimensionChanged","currentScreenFactor","_isColCountChanged","oldScreenSize","newScreenSize","isChanged","editorSelector","trigger","_","itemRunTimeInfo","reset","resetGroup","_updateData","isComplexData","_data","fieldValue","registerKeyHandler","handler","_focusTarget","first","_visibilityChanged","visible","msie","_dispose","resetValues","updateData","findWidgetInstanceByDataField","findWidgetInstanceByName","getButton","updateDimensions","deferred","update","done","resolveWith","promise","itemOption","id","_this5","getPathFromItem","arguments","allowUpdateItems","validate","validateGroup","getItemID","getTargetScreenFactor","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/form/ui.form.js)\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _renderer = require(\"../../core/renderer\");\r\nvar _renderer2 = _interopRequireDefault(_renderer);\r\nvar _events_engine = require(\"../../events/core/events_engine\");\r\nvar _events_engine2 = _interopRequireDefault(_events_engine);\r\nvar _component_registrator = require(\"../../core/component_registrator\");\r\nvar _component_registrator2 = _interopRequireDefault(_component_registrator);\r\nvar _guid = require(\"../../core/guid\");\r\nvar _guid2 = _interopRequireDefault(_guid);\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _string = require(\"../../core/utils/string\");\r\nvar _browser = require(\"../../core/utils/browser\");\r\nvar _browser2 = _interopRequireDefault(_browser);\r\nvar _dom = require(\"../../core/utils/dom\");\r\nvar _message = require(\"../../localization/message\");\r\nvar _message2 = _interopRequireDefault(_message);\r\nvar _ui = require(\"../widget/ui.widget\");\r\nvar _ui2 = _interopRequireDefault(_ui);\r\nvar _editor = require(\"../editor/editor\");\r\nvar _editor2 = _interopRequireDefault(_editor);\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _validation_engine = require(\"../validation_engine\");\r\nvar _validation_engine2 = _interopRequireDefault(_validation_engine);\r\nvar _uiForm = require(\"./ui.form.layout_manager\");\r\nvar _uiForm2 = _interopRequireDefault(_uiForm);\r\nvar _uiForm3 = require(\"./ui.form.items_runtime_info\");\r\nvar _uiForm4 = _interopRequireDefault(_uiForm3);\r\nvar _tab_panel = require(\"../tab_panel\");\r\nvar _tab_panel2 = _interopRequireDefault(_tab_panel);\r\nvar _ui3 = require(\"../scroll_view/ui.scrollable\");\r\nvar _ui4 = _interopRequireDefault(_ui3);\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _themes = require(\"../themes\");\r\nvar _themes2 = _interopRequireDefault(_themes);\r\nvar _uiForm5 = require(\"./ui.form.item_options_actions\");\r\nvar _uiForm6 = _interopRequireDefault(_uiForm5);\r\nvar _uiForm7 = require(\"./ui.form.utils\");\r\nrequire(\"../validation_summary\");\r\nrequire(\"../validation_group\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _toConsumableArray(arr) {\r\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread()\r\n}\r\n\r\nfunction _nonIterableSpread() {\r\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")\r\n}\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) {\r\n    if (!o) {\r\n        return\r\n    }\r\n    if (\"string\" === typeof o) {\r\n        return _arrayLikeToArray(o, minLen)\r\n    }\r\n    var n = Object.prototype.toString.call(o).slice(8, -1);\r\n    if (\"Object\" === n && o.constructor) {\r\n        n = o.constructor.name\r\n    }\r\n    if (\"Map\" === n || \"Set\" === n) {\r\n        return Array.from(o)\r\n    }\r\n    if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) {\r\n        return _arrayLikeToArray(o, minLen)\r\n    }\r\n}\r\n\r\nfunction _iterableToArray(iter) {\r\n    if (\"undefined\" !== typeof Symbol && Symbol.iterator in Object(iter)) {\r\n        return Array.from(iter)\r\n    }\r\n}\r\n\r\nfunction _arrayWithoutHoles(arr) {\r\n    if (Array.isArray(arr)) {\r\n        return _arrayLikeToArray(arr)\r\n    }\r\n}\r\n\r\nfunction _arrayLikeToArray(arr, len) {\r\n    if (null == len || len > arr.length) {\r\n        len = arr.length\r\n    }\r\n    for (var i = 0, arr2 = new Array(len); i < len; i++) {\r\n        arr2[i] = arr[i]\r\n    }\r\n    return arr2\r\n}\r\nvar FORM_CLASS = \"dx-form\";\r\nvar FIELD_ITEM_CLASS = \"dx-field-item\";\r\nvar FIELD_ITEM_LABEL_TEXT_CLASS = \"dx-field-item-label-text\";\r\nvar FORM_GROUP_CLASS = \"dx-form-group\";\r\nvar FORM_GROUP_CONTENT_CLASS = \"dx-form-group-content\";\r\nvar FORM_GROUP_WITH_CAPTION_CLASS = \"dx-form-group-with-caption\";\r\nvar FORM_GROUP_CAPTION_CLASS = \"dx-form-group-caption\";\r\nvar HIDDEN_LABEL_CLASS = \"dx-layout-manager-hidden-label\";\r\nvar FIELD_ITEM_LABEL_CLASS = \"dx-field-item-label\";\r\nvar FIELD_ITEM_LABEL_CONTENT_CLASS = \"dx-field-item-label-content\";\r\nvar FIELD_ITEM_TAB_CLASS = \"dx-field-item-tab\";\r\nvar FORM_FIELD_ITEM_COL_CLASS = \"dx-col-\";\r\nvar GROUP_COL_COUNT_CLASS = \"dx-group-colcount-\";\r\nvar GROUP_COL_COUNT_ATTR = \"group-col-count\";\r\nvar FIELD_ITEM_CONTENT_CLASS = \"dx-field-item-content\";\r\nvar FORM_VALIDATION_SUMMARY = \"dx-form-validation-summary\";\r\nvar WIDGET_CLASS = \"dx-widget\";\r\nvar FOCUSED_STATE_CLASS = \"dx-state-focused\";\r\nvar ITEM_OPTIONS_FOR_VALIDATION_UPDATING = [\"items\", \"isRequired\", \"validationRules\", \"visible\"];\r\nvar Form = _ui2.default.inherit({\r\n    _init: function() {\r\n        this.callBase();\r\n        this._cachedColCountOptions = [];\r\n        this._itemsRunTimeInfo = new _uiForm4.default;\r\n        this._groupsColCount = [];\r\n        this._attachSyncSubscriptions()\r\n    },\r\n    _initOptions: function(options) {\r\n        if (!(\"screenByWidth\" in options)) {\r\n            options.screenByWidth = _window.defaultScreenFactorFunc\r\n        }\r\n        this.callBase(options)\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            formID: \"dx-\" + new _guid2.default,\r\n            formData: {},\r\n            colCount: 1,\r\n            screenByWidth: null,\r\n            colCountByScreen: void 0,\r\n            labelLocation: \"left\",\r\n            readOnly: false,\r\n            onFieldDataChanged: null,\r\n            customizeItem: null,\r\n            onEditorEnterKey: null,\r\n            minColWidth: 200,\r\n            alignItemLabels: true,\r\n            alignItemLabelsInAllGroups: true,\r\n            showColonAfterLabel: true,\r\n            showRequiredMark: true,\r\n            showOptionalMark: false,\r\n            requiredMark: \"*\",\r\n            optionalMark: _message2.default.format(\"dxForm-optionalMark\"),\r\n            requiredMessage: _message2.default.getFormatter(\"dxForm-requiredMessage\"),\r\n            showValidationSummary: false,\r\n            items: void 0,\r\n            scrollingEnabled: false,\r\n            validationGroup: void 0,\r\n            stylingMode: void 0\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return _themes2.default.isMaterial()\r\n            },\r\n            options: {\r\n                showColonAfterLabel: false,\r\n                labelLocation: \"top\"\r\n            }\r\n        }])\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        (0, _extend.extend)(this._optionsByReference, {\r\n            formData: true,\r\n            validationGroup: true\r\n        })\r\n    },\r\n    _getGroupColCount: function($element) {\r\n        return parseInt($element.attr(GROUP_COL_COUNT_ATTR))\r\n    },\r\n    _createHiddenElement: function(rootLayoutManager) {\r\n        this._$hiddenElement = (0, _renderer2.default)(\"<div>\").addClass(WIDGET_CLASS).addClass(HIDDEN_LABEL_CLASS).appendTo(\"body\");\r\n        var $hiddenLabel = rootLayoutManager._renderLabel({\r\n            text: \" \",\r\n            location: this._labelLocation()\r\n        }).appendTo(this._$hiddenElement);\r\n        this._hiddenLabelText = $hiddenLabel.find(\".\" + FIELD_ITEM_LABEL_TEXT_CLASS)[0]\r\n    },\r\n    _removeHiddenElement: function() {\r\n        this._$hiddenElement.remove();\r\n        this._hiddenLabelText = null\r\n    },\r\n    _getLabelWidthByText: function(text) {\r\n        this._hiddenLabelText.innerHTML = text;\r\n        return this._hiddenLabelText.offsetWidth\r\n    },\r\n    _getLabelsSelectorByCol: function(index, options) {\r\n        options = options || {};\r\n        var fieldItemClass = options.inOneColumn ? FIELD_ITEM_CLASS : FORM_FIELD_ITEM_COL_CLASS + index;\r\n        var cssExcludeTabbedSelector = options.excludeTabbed ? \":not(.\" + FIELD_ITEM_TAB_CLASS + \")\" : \"\";\r\n        var childLabelContentSelector = \"> .\" + FIELD_ITEM_LABEL_CLASS + \" > .\" + FIELD_ITEM_LABEL_CONTENT_CLASS;\r\n        return \".\" + fieldItemClass + cssExcludeTabbedSelector + childLabelContentSelector\r\n    },\r\n    _getLabelText: function(labelText) {\r\n        var length = labelText.children.length;\r\n        var child;\r\n        var result = \"\";\r\n        var i;\r\n        for (i = 0; i < length; i++) {\r\n            child = labelText.children[i];\r\n            result += !(0, _string.isEmpty)(child.innerText) ? child.innerText : child.innerHTML\r\n        }\r\n        return result\r\n    },\r\n    _applyLabelsWidthByCol: function($container, index, options) {\r\n        var $labelTexts = $container.find(this._getLabelsSelectorByCol(index, options));\r\n        var $labelTextsLength = $labelTexts.length;\r\n        var labelWidth;\r\n        var i;\r\n        var maxWidth = 0;\r\n        for (i = 0; i < $labelTextsLength; i++) {\r\n            labelWidth = this._getLabelWidthByText(this._getLabelText($labelTexts[i]));\r\n            if (labelWidth > maxWidth) {\r\n                maxWidth = labelWidth\r\n            }\r\n        }\r\n        for (i = 0; i < $labelTextsLength; i++) {\r\n            $labelTexts[i].style.width = maxWidth + \"px\"\r\n        }\r\n    },\r\n    _applyLabelsWidth: function($container, excludeTabbed, inOneColumn, colCount) {\r\n        colCount = inOneColumn ? 1 : colCount || this._getGroupColCount($container);\r\n        var applyLabelsOptions = {\r\n            excludeTabbed: excludeTabbed,\r\n            inOneColumn: inOneColumn\r\n        };\r\n        var i;\r\n        for (i = 0; i < colCount; i++) {\r\n            this._applyLabelsWidthByCol($container, i, applyLabelsOptions)\r\n        }\r\n    },\r\n    _getGroupElementsInColumn: function($container, columnIndex, colCount) {\r\n        var cssColCountSelector = (0, _type.isDefined)(colCount) ? \".\" + GROUP_COL_COUNT_CLASS + colCount : \"\";\r\n        var groupSelector = \".\" + FORM_FIELD_ITEM_COL_CLASS + columnIndex + \" > .\" + FIELD_ITEM_CONTENT_CLASS + \" > .\" + FORM_GROUP_CLASS + cssColCountSelector;\r\n        return $container.find(groupSelector)\r\n    },\r\n    _applyLabelsWidthWithGroups: function($container, colCount, excludeTabbed) {\r\n        var alignItemLabelsInAllGroups = this.option(\"alignItemLabelsInAllGroups\");\r\n        if (alignItemLabelsInAllGroups) {\r\n            this._applyLabelsWidthWithNestedGroups($container, colCount, excludeTabbed)\r\n        } else {\r\n            var $groups = this.$element().find(\".\" + FORM_GROUP_CLASS);\r\n            var i;\r\n            for (i = 0; i < $groups.length; i++) {\r\n                this._applyLabelsWidth($groups.eq(i), excludeTabbed)\r\n            }\r\n        }\r\n    },\r\n    _applyLabelsWidthWithNestedGroups: function($container, colCount, excludeTabbed) {\r\n        var applyLabelsOptions = {\r\n            excludeTabbed: excludeTabbed\r\n        };\r\n        var colIndex;\r\n        var groupsColIndex;\r\n        var groupColIndex;\r\n        var $groupsByCol;\r\n        for (colIndex = 0; colIndex < colCount; colIndex++) {\r\n            $groupsByCol = this._getGroupElementsInColumn($container, colIndex);\r\n            this._applyLabelsWidthByCol($groupsByCol, 0, applyLabelsOptions);\r\n            for (groupsColIndex = 0; groupsColIndex < this._groupsColCount.length; groupsColIndex++) {\r\n                $groupsByCol = this._getGroupElementsInColumn($container, colIndex, this._groupsColCount[groupsColIndex]);\r\n                var groupColCount = this._getGroupColCount($groupsByCol);\r\n                for (groupColIndex = 1; groupColIndex < groupColCount; groupColIndex++) {\r\n                    this._applyLabelsWidthByCol($groupsByCol, groupColIndex, applyLabelsOptions)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _labelLocation: function() {\r\n        return this.option(\"labelLocation\")\r\n    },\r\n    _alignLabelsInColumn: function(_ref) {\r\n        var layoutManager = _ref.layoutManager,\r\n            inOneColumn = _ref.inOneColumn,\r\n            $container = _ref.$container,\r\n            excludeTabbed = _ref.excludeTabbed,\r\n            items = _ref.items;\r\n        if (!(0, _window.hasWindow)() || \"top\" === this._labelLocation()) {\r\n            return\r\n        }\r\n        this._createHiddenElement(layoutManager);\r\n        if (inOneColumn) {\r\n            this._applyLabelsWidth($container, excludeTabbed, true)\r\n        } else {\r\n            if (this._checkGrouping(items)) {\r\n                this._applyLabelsWidthWithGroups($container, layoutManager._getColCount(), excludeTabbed)\r\n            } else {\r\n                this._applyLabelsWidth($container, excludeTabbed, false, layoutManager._getColCount())\r\n            }\r\n        }\r\n        this._removeHiddenElement()\r\n    },\r\n    _prepareFormData: function() {\r\n        if (!(0, _type.isDefined)(this.option(\"formData\"))) {\r\n            this.option(\"formData\", {})\r\n        }\r\n    },\r\n    _initMarkup: function() {\r\n        _validation_engine2.default.addGroup(this._getValidationGroup());\r\n        this._clearCachedInstances();\r\n        this._prepareFormData();\r\n        this.$element().addClass(FORM_CLASS);\r\n        this.callBase();\r\n        this.setAria(\"role\", \"form\", this.$element());\r\n        if (this.option(\"scrollingEnabled\")) {\r\n            this._renderScrollable()\r\n        }\r\n        this._renderLayout();\r\n        this._renderValidationSummary();\r\n        this._lastMarkupScreenFactor = this._targetScreenFactor || this._getCurrentScreenFactor()\r\n    },\r\n    _getCurrentScreenFactor: function() {\r\n        return (0, _window.hasWindow)() ? (0, _window.getCurrentScreenFactor)(this.option(\"screenByWidth\")) : \"lg\"\r\n    },\r\n    _clearCachedInstances: function() {\r\n        this._itemsRunTimeInfo.clear();\r\n        this._cachedLayoutManagers = []\r\n    },\r\n    _alignLabels: function(layoutManager, inOneColumn) {\r\n        this._alignLabelsInColumn({\r\n            $container: this.$element(),\r\n            layoutManager: layoutManager,\r\n            excludeTabbed: true,\r\n            items: this.option(\"items\"),\r\n            inOneColumn: inOneColumn\r\n        })\r\n    },\r\n    _clean: function() {\r\n        this.callBase();\r\n        this._groupsColCount = [];\r\n        this._cachedColCountOptions = [];\r\n        this._lastMarkupScreenFactor = void 0\r\n    },\r\n    _renderScrollable: function() {\r\n        var useNativeScrolling = this.option(\"useNativeScrolling\");\r\n        this._scrollable = new _ui4.default(this.$element(), {\r\n            useNative: !!useNativeScrolling,\r\n            useSimulatedScrollbar: !useNativeScrolling,\r\n            useKeyboard: false,\r\n            direction: \"both\",\r\n            bounceEnabled: false\r\n        })\r\n    },\r\n    _getContent: function() {\r\n        return this.option(\"scrollingEnabled\") ? this._scrollable.$content() : this.$element()\r\n    },\r\n    _renderValidationSummary: function() {\r\n        var $validationSummary = this.$element().find(\".\" + FORM_VALIDATION_SUMMARY);\r\n        if ($validationSummary.length > 0) {\r\n            $validationSummary.remove()\r\n        }\r\n        if (this.option(\"showValidationSummary\")) {\r\n            var _$validationSummary = (0, _renderer2.default)(\"<div>\").addClass(FORM_VALIDATION_SUMMARY).appendTo(this._getContent());\r\n            this._validationSummary = _$validationSummary.dxValidationSummary({\r\n                validationGroup: this._getValidationGroup()\r\n            }).dxValidationSummary(\"instance\")\r\n        }\r\n    },\r\n    _prepareItems: function(items, parentIsTabbedItem, currentPath, isTabs) {\r\n        if (items) {\r\n            var result = [];\r\n            for (var i = 0; i < items.length; i++) {\r\n                var item = items[i];\r\n                var path = (0, _uiForm7.concatPaths)(currentPath, (0, _uiForm7.createItemPathByIndex)(i, isTabs));\r\n                var guid = this._itemsRunTimeInfo.add({\r\n                    item: item,\r\n                    itemIndex: i,\r\n                    path: path\r\n                });\r\n                if ((0, _type.isString)(item)) {\r\n                    item = {\r\n                        dataField: item\r\n                    }\r\n                }\r\n                if ((0, _type.isObject)(item)) {\r\n                    var itemCopy = (0, _extend.extend)({}, item);\r\n                    itemCopy.guid = guid;\r\n                    this._tryPrepareGroupItem(itemCopy);\r\n                    this._tryPrepareTabbedItem(itemCopy, path);\r\n                    this._tryPrepareItemTemplate(itemCopy);\r\n                    if (parentIsTabbedItem) {\r\n                        itemCopy.cssItemClass = FIELD_ITEM_TAB_CLASS\r\n                    }\r\n                    if (itemCopy.items) {\r\n                        itemCopy.items = this._prepareItems(itemCopy.items, parentIsTabbedItem, path)\r\n                    }\r\n                    result.push(itemCopy)\r\n                } else {\r\n                    result.push(item)\r\n                }\r\n            }\r\n            return result\r\n        }\r\n    },\r\n    _tryPrepareGroupItem: function(item) {\r\n        if (\"group\" === item.itemType) {\r\n            item.alignItemLabels = (0, _common.ensureDefined)(item.alignItemLabels, true);\r\n            if (item.template) {\r\n                item.groupContentTemplate = this._getTemplate(item.template)\r\n            }\r\n            item.template = this._itemGroupTemplate.bind(this, item)\r\n        }\r\n    },\r\n    _tryPrepareTabbedItem: function(item, path) {\r\n        if (\"tabbed\" === item.itemType) {\r\n            item.template = this._itemTabbedTemplate.bind(this, item);\r\n            item.tabs = this._prepareItems(item.tabs, true, path, true)\r\n        }\r\n    },\r\n    _tryPrepareItemTemplate: function(item) {\r\n        if (item.template) {\r\n            item.template = this._getTemplate(item.template)\r\n        }\r\n    },\r\n    _checkGrouping: function(items) {\r\n        if (items) {\r\n            for (var i = 0; i < items.length; i++) {\r\n                var item = items[i];\r\n                if (\"group\" === item.itemType) {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _renderLayout: function() {\r\n        var that = this;\r\n        var items = that.option(\"items\");\r\n        var $content = that._getContent();\r\n        items = that._prepareItems(items);\r\n        that._rootLayoutManager = that._renderLayoutManager(items, $content, {\r\n            colCount: that.option(\"colCount\"),\r\n            alignItemLabels: that.option(\"alignItemLabels\"),\r\n            screenByWidth: this.option(\"screenByWidth\"),\r\n            colCountByScreen: this.option(\"colCountByScreen\"),\r\n            onLayoutChanged: function(inOneColumn) {\r\n                that._alignLabels.bind(that)(that._rootLayoutManager, inOneColumn)\r\n            },\r\n            onContentReady: function(e) {\r\n                that._alignLabels(e.component, e.component.isSingleColumnMode())\r\n            }\r\n        })\r\n    },\r\n    _tryGetItemsForTemplate: function(item) {\r\n        return item.items || []\r\n    },\r\n    _itemTabbedTemplate: function(item, e, $container) {\r\n        var _this = this;\r\n        var $tabPanel = (0, _renderer2.default)(\"<div>\").appendTo($container);\r\n        var tabPanelOptions = (0, _extend.extend)({}, item.tabPanelOptions, {\r\n            dataSource: item.tabs,\r\n            onItemRendered: function(args) {\r\n                return (0, _dom.triggerShownEvent)(args.itemElement)\r\n            },\r\n            itemTemplate: function(itemData, e, container) {\r\n                var $container = (0, _renderer2.default)(container);\r\n                var alignItemLabels = (0, _common.ensureDefined)(itemData.alignItemLabels, true);\r\n                var layoutManager = _this._renderLayoutManager(_this._tryGetItemsForTemplate(itemData), $container, {\r\n                    colCount: itemData.colCount,\r\n                    alignItemLabels: alignItemLabels,\r\n                    screenByWidth: _this.option(\"screenByWidth\"),\r\n                    colCountByScreen: itemData.colCountByScreen,\r\n                    cssItemClass: itemData.cssItemClass,\r\n                    onLayoutChanged: function(inOneColumn) {\r\n                        _this._alignLabelsInColumn({\r\n                            $container: $container,\r\n                            layoutManager: layoutManager,\r\n                            items: itemData.items,\r\n                            inOneColumn: inOneColumn\r\n                        })\r\n                    }\r\n                });\r\n                if (_this._itemsRunTimeInfo) {\r\n                    _this._itemsRunTimeInfo.extendRunTimeItemInfoByKey(itemData.guid, {\r\n                        layoutManager: layoutManager\r\n                    })\r\n                }\r\n                if (alignItemLabels) {\r\n                    _this._alignLabelsInColumn({\r\n                        $container: $container,\r\n                        layoutManager: layoutManager,\r\n                        items: itemData.items,\r\n                        inOneColumn: layoutManager.isSingleColumnMode()\r\n                    })\r\n                }\r\n            }\r\n        });\r\n        var tryUpdateTabPanelInstance = function(items, instance) {\r\n            if (Array.isArray(items)) {\r\n                items.forEach(function(item) {\r\n                    return _this._itemsRunTimeInfo.extendRunTimeItemInfoByKey(item.guid, {\r\n                        widgetInstance: instance\r\n                    })\r\n                })\r\n            }\r\n        };\r\n        var tabPanel = this._createComponent($tabPanel, _tab_panel2.default, tabPanelOptions);\r\n        tabPanel.on(\"optionChanged\", function(e) {\r\n            if (\"dataSource\" === e.fullName) {\r\n                tryUpdateTabPanelInstance(e.value, e.component)\r\n            }\r\n        });\r\n        tryUpdateTabPanelInstance([{\r\n            guid: item.guid\r\n        }].concat(_toConsumableArray(item.tabs)), tabPanel)\r\n    },\r\n    _itemGroupTemplate: function(item, e, $container) {\r\n        var $group = (0, _renderer2.default)(\"<div>\").toggleClass(FORM_GROUP_WITH_CAPTION_CLASS, (0, _type.isDefined)(item.caption) && item.caption.length).addClass(FORM_GROUP_CLASS).appendTo($container);\r\n        var colCount;\r\n        var layoutManager;\r\n        if (item.caption) {\r\n            (0, _renderer2.default)(\"<span>\").addClass(FORM_GROUP_CAPTION_CLASS).text(item.caption).appendTo($group)\r\n        }\r\n        var $groupContent = (0, _renderer2.default)(\"<div>\").addClass(FORM_GROUP_CONTENT_CLASS).appendTo($group);\r\n        if (item.groupContentTemplate) {\r\n            var data = {\r\n                formData: this.option(\"formData\"),\r\n                component: this\r\n            };\r\n            item.groupContentTemplate.render({\r\n                model: data,\r\n                container: (0, _dom.getPublicElement)($groupContent)\r\n            })\r\n        } else {\r\n            layoutManager = this._renderLayoutManager(this._tryGetItemsForTemplate(item), $groupContent, {\r\n                colCount: item.colCount,\r\n                colCountByScreen: item.colCountByScreen,\r\n                alignItemLabels: item.alignItemLabels,\r\n                cssItemClass: item.cssItemClass\r\n            });\r\n            this._itemsRunTimeInfo && this._itemsRunTimeInfo.extendRunTimeItemInfoByKey(item.guid, {\r\n                layoutManager: layoutManager\r\n            });\r\n            colCount = layoutManager._getColCount();\r\n            if ((0, _array.inArray)(colCount, this._groupsColCount) === -1) {\r\n                this._groupsColCount.push(colCount)\r\n            }\r\n            $group.addClass(GROUP_COL_COUNT_CLASS + colCount);\r\n            $group.attr(GROUP_COL_COUNT_ATTR, colCount)\r\n        }\r\n    },\r\n    _renderLayoutManager: function(items, $rootElement, options) {\r\n        var $element = (0, _renderer2.default)(\"<div>\");\r\n        var that = this;\r\n        var config = that._getLayoutManagerConfig(items, options);\r\n        var baseColCountByScreen = {\r\n            lg: options.colCount,\r\n            md: options.colCount,\r\n            sm: options.colCount,\r\n            xs: 1\r\n        };\r\n        that._cachedColCountOptions.push({\r\n            colCountByScreen: (0, _extend.extend)(baseColCountByScreen, options.colCountByScreen)\r\n        });\r\n        $element.appendTo($rootElement);\r\n        var instance = that._createComponent($element, \"dxLayoutManager\", config);\r\n        instance.on(\"autoColCountChanged\", function() {\r\n            that._refresh()\r\n        });\r\n        that._cachedLayoutManagers.push(instance);\r\n        return instance\r\n    },\r\n    _getValidationGroup: function() {\r\n        return this.option(\"validationGroup\") || this\r\n    },\r\n    _getLayoutManagerConfig: function(items, options) {\r\n        var _this2 = this;\r\n        var baseConfig = {\r\n            form: this,\r\n            validationGroup: this._getValidationGroup(),\r\n            showRequiredMark: this.option(\"showRequiredMark\"),\r\n            showOptionalMark: this.option(\"showOptionalMark\"),\r\n            requiredMark: this.option(\"requiredMark\"),\r\n            optionalMark: this.option(\"optionalMark\"),\r\n            requiredMessage: this.option(\"requiredMessage\"),\r\n            screenByWidth: this.option(\"screenByWidth\"),\r\n            layoutData: this.option(\"formData\"),\r\n            labelLocation: this.option(\"labelLocation\"),\r\n            customizeItem: this.option(\"customizeItem\"),\r\n            minColWidth: this.option(\"minColWidth\"),\r\n            showColonAfterLabel: this.option(\"showColonAfterLabel\"),\r\n            onEditorEnterKey: this.option(\"onEditorEnterKey\"),\r\n            onFieldDataChanged: function(args) {\r\n                if (!_this2._isDataUpdating) {\r\n                    _this2._triggerOnFieldDataChanged(args)\r\n                }\r\n            },\r\n            validationBoundary: this.option(\"scrollingEnabled\") ? this.$element() : void 0\r\n        };\r\n        return (0, _extend.extend)(baseConfig, {\r\n            items: items,\r\n            onContentReady: function(args) {\r\n                _this2._itemsRunTimeInfo.addItemsOrExtendFrom(args.component._itemsRunTimeInfo);\r\n                options.onContentReady && options.onContentReady(args)\r\n            },\r\n            onDisposing: function(_ref2) {\r\n                var component = _ref2.component;\r\n                var nestedItemsRunTimeInfo = component.getItemsRunTimeInfo();\r\n                _this2._itemsRunTimeInfo.removeItemsByItems(nestedItemsRunTimeInfo)\r\n            },\r\n            colCount: options.colCount,\r\n            alignItemLabels: options.alignItemLabels,\r\n            cssItemClass: options.cssItemClass,\r\n            colCountByScreen: options.colCountByScreen,\r\n            onLayoutChanged: options.onLayoutChanged,\r\n            width: options.width\r\n        })\r\n    },\r\n    _createComponent: function($element, type, config) {\r\n        var that = this;\r\n        config = config || {};\r\n        that._extendConfig(config, {\r\n            readOnly: that.option(\"readOnly\")\r\n        });\r\n        return that.callBase($element, type, config)\r\n    },\r\n    _attachSyncSubscriptions: function() {\r\n        var that = this;\r\n        that.on(\"optionChanged\", function(args) {\r\n            var optionFullName = args.fullName;\r\n            if (\"formData\" === optionFullName) {\r\n                if (!(0, _type.isDefined)(args.value)) {\r\n                    that._options.silent(\"formData\", args.value = {})\r\n                }\r\n                that._triggerOnFieldDataChangedByDataSet(args.value)\r\n            }\r\n            if (that._cachedLayoutManagers.length) {\r\n                (0, _iterator.each)(that._cachedLayoutManagers, function(index, layoutManager) {\r\n                    if (\"formData\" === optionFullName) {\r\n                        that._isDataUpdating = true;\r\n                        layoutManager.option(\"layoutData\", args.value);\r\n                        that._isDataUpdating = false\r\n                    }\r\n                    if (\"readOnly\" === args.name || \"disabled\" === args.name) {\r\n                        layoutManager.option(optionFullName, args.value)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    },\r\n    _optionChanged: function(args) {\r\n        var rootNameOfComplexOption = this._getRootLevelOfExpectedComplexOption(args.fullName, [\"formData\", \"items\"]);\r\n        if (rootNameOfComplexOption) {\r\n            this._customHandlerOfComplexOption(args, rootNameOfComplexOption);\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"formData\":\r\n                if (!this.option(\"items\")) {\r\n                    this._invalidate()\r\n                } else {\r\n                    if ((0, _type.isEmptyObject)(args.value)) {\r\n                        this._resetValues()\r\n                    }\r\n                }\r\n                break;\r\n            case \"items\":\r\n            case \"colCount\":\r\n            case \"onFieldDataChanged\":\r\n            case \"onEditorEnterKey\":\r\n            case \"labelLocation\":\r\n            case \"alignItemLabels\":\r\n            case \"showColonAfterLabel\":\r\n            case \"customizeItem\":\r\n            case \"alignItemLabelsInAllGroups\":\r\n            case \"showRequiredMark\":\r\n            case \"showOptionalMark\":\r\n            case \"requiredMark\":\r\n            case \"optionalMark\":\r\n            case \"requiredMessage\":\r\n            case \"scrollingEnabled\":\r\n            case \"formID\":\r\n            case \"colCountByScreen\":\r\n            case \"screenByWidth\":\r\n            case \"stylingMode\":\r\n                this._invalidate();\r\n                break;\r\n            case \"showValidationSummary\":\r\n                this._renderValidationSummary();\r\n                break;\r\n            case \"minColWidth\":\r\n                if (\"auto\" === this.option(\"colCount\")) {\r\n                    this._invalidate()\r\n                }\r\n                break;\r\n            case \"readOnly\":\r\n                break;\r\n            case \"width\":\r\n                this.callBase(args);\r\n                this._rootLayoutManager.option(args.name, args.value);\r\n                this._alignLabels(this._rootLayoutManager, this._rootLayoutManager.isSingleColumnMode());\r\n                break;\r\n            case \"visible\":\r\n                this.callBase(args);\r\n                if (args.value) {\r\n                    (0, _dom.triggerShownEvent)(this.$element())\r\n                }\r\n                break;\r\n            case \"validationGroup\":\r\n                _validation_engine2.default.removeGroup(args.previousValue || this);\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _getRootLevelOfExpectedComplexOption: function(fullOptionName, expectedRootNames) {\r\n        var splitFullName = fullOptionName.split(\".\");\r\n        var result;\r\n        if (splitFullName.length > 1) {\r\n            var i;\r\n            var rootOptionName = splitFullName[0];\r\n            for (i = 0; i < expectedRootNames.length; i++) {\r\n                if (rootOptionName.search(expectedRootNames[i]) !== -1) {\r\n                    result = expectedRootNames[i]\r\n                }\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    _tryCreateItemOptionAction: function(optionName, item, value, previousValue, itemPath) {\r\n        if (\"tabs\" === optionName) {\r\n            this._itemsRunTimeInfo.removeItemsByPathStartWith(\"\".concat(itemPath, \".tabs\"));\r\n            value = this._prepareItems(value, true, itemPath, true)\r\n        }\r\n        return (0, _uiForm6.default)(optionName, {\r\n            item: item,\r\n            value: value,\r\n            previousValue: previousValue,\r\n            itemsRunTimeInfo: this._itemsRunTimeInfo\r\n        })\r\n    },\r\n    _tryExecuteItemOptionAction: function(action) {\r\n        return action && action.tryExecute()\r\n    },\r\n    _updateValidationGroupAndSummaryIfNeeded: function(fullName) {\r\n        var optionName = (0, _uiForm7.getOptionNameFromFullName)(fullName);\r\n        if (ITEM_OPTIONS_FOR_VALIDATION_UPDATING.indexOf(optionName) > -1) {\r\n            _validation_engine2.default.addGroup(this._getValidationGroup());\r\n            if (this.option(\"showValidationSummary\")) {\r\n                this._validationSummary && this._validationSummary._initGroupRegistration()\r\n            }\r\n        }\r\n    },\r\n    _setLayoutManagerItemOption: function(layoutManager, optionName, value, path) {\r\n        var _this3 = this;\r\n        if (this._updateLockCount > 0) {\r\n            !layoutManager._updateLockCount && layoutManager.beginUpdate();\r\n            var key = this._itemsRunTimeInfo.getKeyByPath(path);\r\n            this.postponedOperations.add(key, function() {\r\n                !layoutManager._disposed && layoutManager.endUpdate();\r\n                return (new _deferred.Deferred).resolve()\r\n            })\r\n        }\r\n        var contentReadyHandler = function contentReadyHandler(e) {\r\n            e.component.off(\"contentReady\", contentReadyHandler);\r\n            if ((0, _uiForm7.isFullPathContainsTabs)(path)) {\r\n                var tabPath = (0, _uiForm7.tryGetTabPath)(path);\r\n                var tabLayoutManager = _this3._itemsRunTimeInfo.getGroupOrTabLayoutManagerByPath(tabPath);\r\n                _this3._alignLabelsInColumn({\r\n                    items: tabLayoutManager.option(\"items\"),\r\n                    layoutManager: tabLayoutManager,\r\n                    $container: tabLayoutManager.$element(),\r\n                    inOneColumn: tabLayoutManager.isSingleColumnMode()\r\n                })\r\n            } else {\r\n                _this3._alignLabels(_this3._rootLayoutManager, _this3._rootLayoutManager.isSingleColumnMode())\r\n            }\r\n        };\r\n        layoutManager.on(\"contentReady\", contentReadyHandler);\r\n        layoutManager.option(optionName, value);\r\n        this._updateValidationGroupAndSummaryIfNeeded(optionName)\r\n    },\r\n    _tryChangeLayoutManagerItemOption: function(fullName, value) {\r\n        var nameParts = fullName.split(\".\");\r\n        var optionName = (0, _uiForm7.getOptionNameFromFullName)(fullName);\r\n        if (\"items\" === optionName && nameParts.length > 1) {\r\n            var itemPath = this._getItemPath(nameParts);\r\n            var layoutManager = this._itemsRunTimeInfo.getGroupOrTabLayoutManagerByPath(itemPath);\r\n            if (layoutManager) {\r\n                this._itemsRunTimeInfo.removeItemsByItems(layoutManager.getItemsRunTimeInfo());\r\n                var items = this._prepareItems(value, false, itemPath);\r\n                this._setLayoutManagerItemOption(layoutManager, optionName, items, itemPath);\r\n                return true\r\n            }\r\n        } else {\r\n            if (nameParts.length > 2) {\r\n                var endPartIndex = nameParts.length - 2;\r\n                var _itemPath = this._getItemPath(nameParts.slice(0, endPartIndex));\r\n                var _layoutManager = this._itemsRunTimeInfo.getGroupOrTabLayoutManagerByPath(_itemPath);\r\n                if (_layoutManager) {\r\n                    var fullOptionName = (0, _uiForm7.getFullOptionName)(nameParts[endPartIndex], optionName);\r\n                    if (\"editorType\" === optionName) {\r\n                        if (_layoutManager.option(fullOptionName) !== value) {\r\n                            return false\r\n                        }\r\n                    }\r\n                    if (\"visible\" === optionName) {\r\n                        var formItems = this.option((0, _uiForm7.getFullOptionName)(_itemPath, \"items\"));\r\n                        if (formItems && formItems.length) {\r\n                            var layoutManagerItems = _layoutManager.option(\"items\");\r\n                            formItems.forEach(function(item, index) {\r\n                                var layoutItem = layoutManagerItems[index];\r\n                                layoutItem.visibleIndex = item.visibleIndex\r\n                            })\r\n                        }\r\n                    }\r\n                    this._setLayoutManagerItemOption(_layoutManager, fullOptionName, value, _itemPath);\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n        return false\r\n    },\r\n    _tryChangeLayoutManagerItemOptions: function(itemPath, options) {\r\n        var _this4 = this;\r\n        var result;\r\n        this.beginUpdate();\r\n        (0, _iterator.each)(options, function(optionName, optionValue) {\r\n            result = _this4._tryChangeLayoutManagerItemOption((0, _uiForm7.getFullOptionName)(itemPath, optionName), optionValue);\r\n            if (!result) {\r\n                return false\r\n            }\r\n        });\r\n        this.endUpdate();\r\n        return result\r\n    },\r\n    _customHandlerOfComplexOption: function(args, rootOptionName) {\r\n        var nameParts = args.fullName.split(\".\");\r\n        var value = args.value;\r\n        if (\"items\" === rootOptionName) {\r\n            var itemPath = this._getItemPath(nameParts);\r\n            var item = this.option(itemPath);\r\n            var optionNameWithoutPath = args.fullName.replace(itemPath + \".\", \"\");\r\n            var simpleOptionName = optionNameWithoutPath.split(\".\")[0].replace(/\\[\\d+]/, \"\");\r\n            var itemAction = this._tryCreateItemOptionAction(simpleOptionName, item, item[simpleOptionName], args.previousValue, itemPath);\r\n            if (!this._tryExecuteItemOptionAction(itemAction) && !this._tryChangeLayoutManagerItemOption(args.fullName, value)) {\r\n                if (item) {\r\n                    this._changeItemOption(item, optionNameWithoutPath, value);\r\n                    var items = this._generateItemsFromData(this.option(\"items\"));\r\n                    this.option(\"items\", items)\r\n                }\r\n            }\r\n        }\r\n        if (\"formData\" === rootOptionName) {\r\n            var dataField = nameParts.slice(1).join(\".\");\r\n            var editor = this.getEditor(dataField);\r\n            if (editor) {\r\n                editor.option(\"value\", value)\r\n            } else {\r\n                this._triggerOnFieldDataChanged({\r\n                    dataField: dataField,\r\n                    value: value\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _getItemPath: function(nameParts) {\r\n        var itemPath = nameParts[0];\r\n        var i;\r\n        for (i = 1; i < nameParts.length; i++) {\r\n            if (nameParts[i].search(/items\\[\\d+]|tabs\\[\\d+]/) !== -1) {\r\n                itemPath += \".\" + nameParts[i]\r\n            } else {\r\n                break\r\n            }\r\n        }\r\n        return itemPath\r\n    },\r\n    _triggerOnFieldDataChanged: function(args) {\r\n        this._createActionByOption(\"onFieldDataChanged\")(args)\r\n    },\r\n    _triggerOnFieldDataChangedByDataSet: function(data) {\r\n        var that = this;\r\n        if (data && (0, _type.isObject)(data)) {\r\n            (0, _iterator.each)(data, function(dataField, value) {\r\n                that._triggerOnFieldDataChanged({\r\n                    dataField: dataField,\r\n                    value: value\r\n                })\r\n            })\r\n        }\r\n    },\r\n    _updateFieldValue: function(dataField, value) {\r\n        if ((0, _type.isDefined)(this.option(\"formData\"))) {\r\n            var editor = this.getEditor(dataField);\r\n            this.option(\"formData.\" + dataField, value);\r\n            if (editor) {\r\n                var editorValue = editor.option(\"value\");\r\n                if (editorValue !== value) {\r\n                    editor.option(\"value\", value)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _generateItemsFromData: function(items) {\r\n        var formData = this.option(\"formData\");\r\n        var result = [];\r\n        if (!items && (0, _type.isDefined)(formData)) {\r\n            (0, _iterator.each)(formData, function(dataField) {\r\n                result.push({\r\n                    dataField: dataField\r\n                })\r\n            })\r\n        }\r\n        if (items) {\r\n            (0, _iterator.each)(items, function(index, item) {\r\n                if ((0, _type.isObject)(item)) {\r\n                    result.push(item)\r\n                } else {\r\n                    result.push({\r\n                        dataField: item\r\n                    })\r\n                }\r\n            })\r\n        }\r\n        return result\r\n    },\r\n    _getItemByField: function(field, items) {\r\n        var that = this;\r\n        var fieldParts = (0, _type.isObject)(field) ? field : that._getFieldParts(field);\r\n        var fieldName = fieldParts.fieldName;\r\n        var fieldPath = fieldParts.fieldPath;\r\n        var resultItem;\r\n        if (items.length) {\r\n            (0, _iterator.each)(items, function(index, item) {\r\n                var itemType = item.itemType;\r\n                if (fieldPath.length) {\r\n                    var path = fieldPath.slice();\r\n                    item = that._getItemByFieldPath(path, fieldName, item)\r\n                } else {\r\n                    if (\"group\" === itemType && !(item.caption || item.name) || \"tabbed\" === itemType && !item.name) {\r\n                        var subItemsField = that._getSubItemField(itemType);\r\n                        item.items = that._generateItemsFromData(item.items);\r\n                        item = that._getItemByField({\r\n                            fieldName: fieldName,\r\n                            fieldPath: fieldPath\r\n                        }, item[subItemsField])\r\n                    }\r\n                }\r\n                if ((0, _uiForm7.isExpectedItem)(item, fieldName)) {\r\n                    resultItem = item;\r\n                    return false\r\n                }\r\n            })\r\n        }\r\n        return resultItem\r\n    },\r\n    _getFieldParts: function(field) {\r\n        var fieldSeparator = \".\";\r\n        var fieldName = field;\r\n        var separatorIndex = fieldName.indexOf(fieldSeparator);\r\n        var resultPath = [];\r\n        while (separatorIndex !== -1) {\r\n            resultPath.push(fieldName.substr(0, separatorIndex));\r\n            fieldName = fieldName.substr(separatorIndex + 1);\r\n            separatorIndex = fieldName.indexOf(fieldSeparator)\r\n        }\r\n        return {\r\n            fieldName: fieldName,\r\n            fieldPath: resultPath.reverse()\r\n        }\r\n    },\r\n    _getItemByFieldPath: function(path, fieldName, item) {\r\n        var that = this;\r\n        var itemType = item.itemType;\r\n        var subItemsField = that._getSubItemField(itemType);\r\n        var isItemWithSubItems = \"group\" === itemType || \"tabbed\" === itemType || item.title;\r\n        var result;\r\n        do {\r\n            if (isItemWithSubItems) {\r\n                var name = item.name || item.caption || item.title;\r\n                var isGroupWithName = (0, _type.isDefined)(name);\r\n                var nameWithoutSpaces = (0, _uiForm7.getTextWithoutSpaces)(name);\r\n                var pathNode = void 0;\r\n                item[subItemsField] = that._generateItemsFromData(item[subItemsField]);\r\n                if (isGroupWithName) {\r\n                    pathNode = path.pop()\r\n                }\r\n                if (!path.length) {\r\n                    result = that._getItemByField(fieldName, item[subItemsField]);\r\n                    if (result) {\r\n                        break\r\n                    }\r\n                }\r\n                if (!isGroupWithName || isGroupWithName && nameWithoutSpaces === pathNode) {\r\n                    if (path.length) {\r\n                        result = that._searchItemInEverySubItem(path, fieldName, item[subItemsField])\r\n                    }\r\n                }\r\n            } else {\r\n                break\r\n            }\r\n        } while (path.length && !(0, _type.isDefined)(result));\r\n        return result\r\n    },\r\n    _getSubItemField: function(itemType) {\r\n        return \"tabbed\" === itemType ? \"tabs\" : \"items\"\r\n    },\r\n    _searchItemInEverySubItem: function(path, fieldName, items) {\r\n        var that = this;\r\n        var result;\r\n        (0, _iterator.each)(items, function(index, groupItem) {\r\n            result = that._getItemByFieldPath(path.slice(), fieldName, groupItem);\r\n            if (result) {\r\n                return false\r\n            }\r\n        });\r\n        if (!result) {\r\n            result = false\r\n        }\r\n        return result\r\n    },\r\n    _changeItemOption: function(item, option, value) {\r\n        if ((0, _type.isObject)(item)) {\r\n            item[option] = value\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        var currentScreenFactor = this._getCurrentScreenFactor();\r\n        if (this._lastMarkupScreenFactor !== currentScreenFactor) {\r\n            if (this._isColCountChanged(this._lastMarkupScreenFactor, currentScreenFactor)) {\r\n                this._targetScreenFactor = currentScreenFactor;\r\n                this._refresh();\r\n                this._targetScreenFactor = void 0\r\n            }\r\n            this._lastMarkupScreenFactor = currentScreenFactor\r\n        }\r\n    },\r\n    _isColCountChanged: function(oldScreenSize, newScreenSize) {\r\n        var isChanged = false;\r\n        (0, _iterator.each)(this._cachedColCountOptions, function(index, item) {\r\n            if (item.colCountByScreen[oldScreenSize] !== item.colCountByScreen[newScreenSize]) {\r\n                isChanged = true;\r\n                return false\r\n            }\r\n        });\r\n        return isChanged\r\n    },\r\n    _refresh: function() {\r\n        var editorSelector = \".\" + FOCUSED_STATE_CLASS + \" input, .\" + FOCUSED_STATE_CLASS + \" textarea\";\r\n        _events_engine2.default.trigger(this.$element().find(editorSelector), \"change\");\r\n        this.callBase()\r\n    },\r\n    _resetValues: function() {\r\n        this._itemsRunTimeInfo.each(function(_, itemRunTimeInfo) {\r\n            if ((0, _type.isDefined)(itemRunTimeInfo.widgetInstance) && itemRunTimeInfo.widgetInstance instanceof _editor2.default) {\r\n                itemRunTimeInfo.widgetInstance.reset();\r\n                itemRunTimeInfo.widgetInstance.option(\"isValid\", true)\r\n            }\r\n        });\r\n        _validation_engine2.default.resetGroup(this._getValidationGroup())\r\n    },\r\n    _updateData: function(data, value, isComplexData) {\r\n        var that = this;\r\n        var _data = isComplexData ? value : data;\r\n        if ((0, _type.isObject)(_data)) {\r\n            (0, _iterator.each)(_data, function(dataField, fieldValue) {\r\n                that._updateData(isComplexData ? data + \".\" + dataField : dataField, fieldValue, (0, _type.isObject)(fieldValue))\r\n            })\r\n        } else {\r\n            if ((0, _type.isString)(data)) {\r\n                that._updateFieldValue(data, value)\r\n            }\r\n        }\r\n    },\r\n    registerKeyHandler: function(key, handler) {\r\n        this.callBase(key, handler);\r\n        this._itemsRunTimeInfo.each(function(_, itemRunTimeInfo) {\r\n            if ((0, _type.isDefined)(itemRunTimeInfo.widgetInstance)) {\r\n                itemRunTimeInfo.widgetInstance.registerKeyHandler(key, handler)\r\n            }\r\n        })\r\n    },\r\n    _focusTarget: function() {\r\n        return this.$element().find(\".\" + FIELD_ITEM_CONTENT_CLASS + \" [tabindex]\").first()\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible && _browser2.default.msie) {\r\n            this._refresh()\r\n        }\r\n    },\r\n    _dispose: function() {\r\n        _validation_engine2.default.removeGroup(this._getValidationGroup());\r\n        this.callBase()\r\n    },\r\n    resetValues: function() {\r\n        this._resetValues()\r\n    },\r\n    updateData: function(data, value) {\r\n        this._updateData(data, value)\r\n    },\r\n    getEditor: function(dataField) {\r\n        return this._itemsRunTimeInfo.findWidgetInstanceByDataField(dataField) || this._itemsRunTimeInfo.findWidgetInstanceByName(dataField);\r\n    },\r\n    getButton: function(name) {\r\n        return this._itemsRunTimeInfo.findWidgetInstanceByName(name)\r\n    },\r\n    updateDimensions: function() {\r\n        var that = this;\r\n        var deferred = new _deferred.Deferred;\r\n        if (that._scrollable) {\r\n            that._scrollable.update().done(function() {\r\n                deferred.resolveWith(that)\r\n            })\r\n        } else {\r\n            deferred.resolveWith(that)\r\n        }\r\n        return deferred.promise()\r\n    },\r\n    itemOption: function(id, option, value) {\r\n        var _this5 = this;\r\n        var items = this._generateItemsFromData(this.option(\"items\"));\r\n        var item = this._getItemByField(id, items);\r\n        var path = this._itemsRunTimeInfo.getPathFromItem(item);\r\n        if (!item) {\r\n            return\r\n        }\r\n        switch (arguments.length) {\r\n            case 1:\r\n                return item;\r\n            case 3:\r\n                var itemAction = this._tryCreateItemOptionAction(option, item, value, item[option], path);\r\n                this._changeItemOption(item, option, value);\r\n                var fullName = (0, _uiForm7.getFullOptionName)(path, option);\r\n                if (!this._tryExecuteItemOptionAction(itemAction) && !this._tryChangeLayoutManagerItemOption(fullName, value)) {\r\n                    this.option(\"items\", items)\r\n                }\r\n                break;\r\n            default:\r\n                if ((0, _type.isObject)(option)) {\r\n                    if (!this._tryChangeLayoutManagerItemOptions(path, option)) {\r\n                        var allowUpdateItems;\r\n                        (0, _iterator.each)(option, function(optionName, optionValue) {\r\n                            var itemAction = _this5._tryCreateItemOptionAction(optionName, item, optionValue, item[optionName], path);\r\n                            _this5._changeItemOption(item, optionName, optionValue);\r\n                            if (!allowUpdateItems && !_this5._tryExecuteItemOptionAction(itemAction)) {\r\n                                allowUpdateItems = true\r\n                            }\r\n                        });\r\n                        allowUpdateItems && this.option(\"items\", items)\r\n                    }\r\n                }\r\n        }\r\n    },\r\n    validate: function() {\r\n        return _validation_engine2.default.validateGroup(this._getValidationGroup())\r\n    },\r\n    getItemID: function(name) {\r\n        return \"dx_\" + this.option(\"formID\") + \"_\" + (name || new _guid2.default)\r\n    },\r\n    getTargetScreenFactor: function() {\r\n        return this._targetScreenFactor\r\n    }\r\n});\r\n(0, _component_registrator2.default)(\"dxForm\", Form);\r\nmodule.exports = Form;\r\n"]},"metadata":{},"sourceType":"script"}