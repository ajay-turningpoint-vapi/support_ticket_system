{"ast":null,"code":"/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.keyboard_navigation.js)\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (\"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator) {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nvar _renderer = require(\"../../core/renderer\");\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _dom_adapter = require(\"../../core/dom_adapter\");\n\nvar _dom_adapter2 = _interopRequireDefault(_dom_adapter);\n\nvar _events_engine = require(\"../../events/core/events_engine\");\n\nvar _events_engine2 = _interopRequireDefault(_events_engine);\n\nvar _uiGrid_core = require(\"./ui.grid_core.modules\");\n\nvar _uiGrid_core2 = _interopRequireDefault(_uiGrid_core);\n\nvar _uiGrid_core3 = require(\"./ui.grid_core.utils\");\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _array = require(\"../../core/utils/array\");\n\nvar _selectors = require(\"../widget/selectors\");\n\nvar _utils = require(\"../../events/utils\");\n\nvar eventUtils = _interopRequireWildcard(_utils);\n\nvar _pointer = require(\"../../events/pointer\");\n\nvar _pointer2 = _interopRequireDefault(_pointer);\n\nvar _click = require(\"../../events/click\");\n\nvar _click2 = _interopRequireDefault(_click);\n\nvar _common = require(\"../../core/utils/common\");\n\nvar _accessibility = require(\"../shared/accessibility\");\n\nvar accessibility = _interopRequireWildcard(_accessibility);\n\nvar _browser = require(\"../../core/utils/browser\");\n\nvar _browser2 = _interopRequireDefault(_browser);\n\nvar _short = require(\"../../events/short\");\n\nvar _devices = require(\"../../core/devices\");\n\nvar _devices2 = _interopRequireDefault(_devices);\n\nfunction _getRequireWildcardCache() {\n  if (\"function\" !== typeof WeakMap) {\n    return null;\n  }\n\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (null === obj || \"object\" !== _typeof(obj) && \"function\" !== typeof obj) {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar ROWS_VIEW_CLASS = \"rowsview\";\nvar EDIT_FORM_CLASS = \"edit-form\";\nvar GROUP_FOOTER_CLASS = \"group-footer\";\nvar ROW_CLASS = \"dx-row\";\nvar DATA_ROW_CLASS = \"dx-data-row\";\nvar GROUP_ROW_CLASS = \"dx-group-row\";\nvar HEADER_ROW_CLASS = \"dx-header-row\";\nvar EDIT_FORM_ITEM_CLASS = \"edit-form-item\";\nvar MASTER_DETAIL_ROW_CLASS = \"dx-master-detail-row\";\nvar FREESPACE_ROW_CLASS = \"dx-freespace-row\";\nvar VIRTUAL_ROW_CLASS = \"dx-virtual-row\";\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\nvar EDIT_ROW_CLASS = \"dx-edit-row\";\nvar DROPDOWN_EDITOR_OVERLAY_CLASS = \"dx-dropdowneditor-overlay\";\nvar COMMAND_EXPAND_CLASS = \"dx-command-expand\";\nvar COMMAND_SELECT_CLASS = \"dx-command-select\";\nvar COMMAND_CELL_SELECTOR = \"[class^=dx-command]\";\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\nvar DATEBOX_WIDGET_NAME = \"dxDateBox\";\nvar FOCUS_STATE_CLASS = \"dx-state-focused\";\nvar WIDGET_CLASS = \"dx-widget\";\nvar REVERT_BUTTON_CLASS = \"dx-revert-button\";\nvar FAST_EDITING_DELETE_KEY = \"delete\";\nvar INTERACTIVE_ELEMENTS_SELECTOR = \"input:not([type='hidden']), textarea, a, select, [tabindex]\";\nvar EDIT_MODE_ROW = \"row\";\nvar EDIT_MODE_FORM = \"form\";\nvar EDIT_MODE_BATCH = \"batch\";\nvar EDIT_MODE_CELL = \"cell\";\nvar FOCUS_TYPE_ROW = \"row\";\nvar FOCUS_TYPE_CELL = \"cell\";\nvar COLUMN_HEADERS_VIEW = \"columnHeadersView\";\n\nfunction isGroupRow($row) {\n  return $row && $row.hasClass(GROUP_ROW_CLASS);\n}\n\nfunction isDetailRow($row) {\n  return $row && $row.hasClass(MASTER_DETAIL_ROW_CLASS);\n}\n\nfunction isDataRow($row) {\n  return $row && !isGroupRow($row) && !isDetailRow($row);\n}\n\nfunction isNotFocusedRow($row) {\n  return !$row || $row.hasClass(FREESPACE_ROW_CLASS) || $row.hasClass(VIRTUAL_ROW_CLASS);\n}\n\nfunction isCellElement($element) {\n  return $element.length && \"TD\" === $element[0].tagName;\n}\n\nfunction isEditorCell(that, $cell) {\n  return !that._isRowEditMode() && $cell && !$cell.hasClass(COMMAND_SELECT_CLASS) && $cell.hasClass(EDITOR_CELL_CLASS);\n}\n\nfunction isElementDefined($element) {\n  return (0, _type.isDefined)($element) && $element.length > 0;\n}\n\nfunction isMobile() {\n  return \"desktop\" !== _devices2.default.current().deviceType;\n}\n\nfunction isCellInHeaderRow($cell) {\n  return !!$cell.parent(\".\".concat(HEADER_ROW_CLASS)).length;\n}\n\nvar KeyboardNavigationController = _uiGrid_core2.default.ViewController.inherit({\n  init: function () {\n    var that = this;\n\n    if (that.isKeyboardEnabled()) {\n      accessibility.subscribeVisibilityChange();\n      that._dataController = that.getController(\"data\");\n      that._selectionController = that.getController(\"selection\");\n      that._editingController = that.getController(\"editing\");\n      that._headerPanel = that.getView(\"headerPanel\");\n      that._columnsController = that.getController(\"columns\");\n      that._fastEditingStarted = false;\n      that._focusedCellPosition = {};\n      that._canceledCellPosition = null;\n      that.getController(\"editorFactory\").focused.add(function ($element) {\n        that.setupFocusedView();\n\n        if (that._isNeedScroll) {\n          if ($element.is(\":visible\") && that._focusedView && that._focusedView.getScrollable) {\n            that._focusedView._scrollToElement($element);\n\n            that._isNeedScroll = false;\n          }\n        }\n      });\n\n      that._initViewHandlers();\n\n      that._initDocumentHandlers();\n\n      that.createAction(\"onKeyDown\");\n    }\n  },\n  _initViewHandlers: function () {\n    var _this = this;\n\n    var pointerEventAction = this.createAction(this._pointerEventHandler);\n    var rowsView = this.getView(\"rowsView\");\n    rowsView.renderCompleted.add(function (e) {\n      var $rowsView = rowsView.element();\n      var isFullUpdate = !e || \"refresh\" === e.changeType;\n      var isFocusedViewCorrect = _this._focusedView && _this._focusedView.name === rowsView.name;\n      var needUpdateFocus = false;\n      var isAppend = e && (\"append\" === e.changeType || \"prepend\" === e.changeType);\n      var clickSelector = \".\".concat(ROW_CLASS, \" > td, .\").concat(ROW_CLASS);\n      var $focusedElement = (0, _renderer2.default)(\":focus\");\n      var isFocusedElementCorrect = !$focusedElement.length || $focusedElement.closest($rowsView).length || _browser2.default.msie && $focusedElement.is(\"body\");\n      var pointerEventName = !isMobile() ? _pointer2.default.down : _click2.default.name;\n\n      _events_engine2.default.off($rowsView, eventUtils.addNamespace(pointerEventName, \"dxDataGridKeyboardNavigation\"), pointerEventAction);\n\n      _events_engine2.default.on($rowsView, eventUtils.addNamespace(pointerEventName, \"dxDataGridKeyboardNavigation\"), clickSelector, pointerEventAction);\n\n      _this._initKeyDownHandler($rowsView, function (e) {\n        return _this._keyDownHandler(e);\n      });\n\n      _this._setRowsViewAttributes($rowsView);\n\n      if (isFocusedViewCorrect && isFocusedElementCorrect) {\n        needUpdateFocus = _this._isNeedFocus ? !isAppend : _this._isHiddenFocus && isFullUpdate;\n        needUpdateFocus && _this._updateFocus(true);\n      }\n    });\n  },\n  _initDocumentHandlers: function () {\n    var that = this;\n\n    var document = _dom_adapter2.default.getDocument();\n\n    that._documentClickHandler = that.createAction(function (e) {\n      var $target = (0, _renderer2.default)(e.event.target);\n      var isCurrentRowsViewClick = that._isEventInCurrentGrid(e.event) && $target.closest(\".\".concat(that.addWidgetPrefix(ROWS_VIEW_CLASS))).length;\n      var isEditorOverlay = $target.closest(\".\".concat(DROPDOWN_EDITOR_OVERLAY_CLASS)).length;\n\n      if (!isCurrentRowsViewClick && !isEditorOverlay) {\n        that._resetFocusedCell();\n      }\n    });\n\n    _events_engine2.default.on(document, eventUtils.addNamespace(_pointer2.default.down, \"dxDataGridKeyboardNavigation\"), that._documentClickHandler);\n  },\n  _setRowsViewAttributes: function ($rowsView) {\n    var isGridEmpty = !this._dataController.getVisibleRows().length;\n\n    if (isGridEmpty) {\n      this._applyTabIndexToElement($rowsView);\n    }\n  },\n  _initKeyDownHandler: function (element, handler) {\n    _short.keyboard.off(this._keyDownListener);\n\n    this._keyDownListener = _short.keyboard.on(element, null, handler);\n  },\n  dispose: function () {\n    this.callBase();\n    this._focusedView = null;\n\n    _short.keyboard.off(this._keyDownListener);\n\n    _events_engine2.default.off(_dom_adapter2.default.getDocument(), eventUtils.addNamespace(_pointer2.default.down, \"dxDataGridKeyboardNavigation\"), this._documentClickHandler);\n\n    accessibility.unsubscribeVisibilityChange();\n  },\n  optionChanged: function (args) {\n    var that = this;\n\n    switch (args.name) {\n      case \"keyboardNavigation\":\n      case \"useLegacyKeyboardNavigation\":\n        args.handled = true;\n        break;\n\n      default:\n        that.callBase(args);\n    }\n  },\n  isRowFocusType: function () {\n    return this.focusType === FOCUS_TYPE_ROW;\n  },\n  isCellFocusType: function () {\n    return this.focusType === FOCUS_TYPE_CELL;\n  },\n  setRowFocusType: function () {\n    if (this.option(\"focusedRowEnabled\")) {\n      this.focusType = FOCUS_TYPE_ROW;\n    }\n  },\n  setCellFocusType: function () {\n    this.focusType = FOCUS_TYPE_CELL;\n  },\n  _keyDownHandler: function (e) {\n    var isEditing = this._editingController.isEditing();\n\n    var needStopPropagation = true;\n    var originalEvent = e.originalEvent;\n\n    var isHandled = this._processOnKeyDown(e);\n\n    if (originalEvent.isDefaultPrevented()) {\n      return;\n    }\n\n    this._isNeedFocus = true;\n    this._isNeedScroll = true;\n\n    this._updateFocusedCellPositionByTarget(originalEvent.target);\n\n    if (!isHandled) {\n      switch (e.keyName) {\n        case \"leftArrow\":\n        case \"rightArrow\":\n          this._leftRightKeysHandler(e, isEditing);\n\n          break;\n\n        case \"upArrow\":\n        case \"downArrow\":\n          if (e.ctrl) {\n            accessibility.selectView(\"rowsView\", this, originalEvent);\n          } else {\n            this._upDownKeysHandler(e, isEditing);\n          }\n\n          break;\n\n        case \"pageUp\":\n        case \"pageDown\":\n          this._pageUpDownKeyHandler(e);\n\n          break;\n\n        case \"space\":\n          this._spaceKeyHandler(e, isEditing);\n\n          break;\n\n        case \"A\":\n          if (e.ctrl) {\n            this._ctrlAKeyHandler(e, isEditing);\n          } else {\n            this._beginFastEditing(e.originalEvent);\n          }\n\n          break;\n\n        case \"tab\":\n          this._tabKeyHandler(e, isEditing);\n\n          break;\n\n        case \"enter\":\n          this._enterKeyHandler(e, isEditing);\n\n          break;\n\n        case \"escape\":\n          this._escapeKeyHandler(e, isEditing);\n\n          break;\n\n        case \"F\":\n          if (e.ctrl) {\n            this._ctrlFKeyHandler(e);\n          } else {\n            this._beginFastEditing(e.originalEvent);\n          }\n\n          break;\n\n        case \"F2\":\n          this._f2KeyHandler();\n\n          break;\n\n        case \"del\":\n        case \"backspace\":\n          if (this._isFastEditingAllowed() && !this._isFastEditingStarted()) {\n            this._beginFastEditing(originalEvent, true);\n          }\n\n          break;\n\n        default:\n          if (!this._beginFastEditing(originalEvent)) {\n            this._isNeedFocus = false;\n            this._isNeedScroll = false;\n            needStopPropagation = false;\n          }\n\n      }\n\n      if (needStopPropagation) {\n        originalEvent.stopPropagation();\n      }\n    }\n  },\n  _processOnKeyDown: function (eventArgs) {\n    var originalEvent = eventArgs.originalEvent;\n    var args = {\n      handled: false,\n      event: originalEvent\n    };\n    this.executeAction(\"onKeyDown\", args);\n    eventArgs.ctrl = originalEvent.ctrlKey;\n    eventArgs.alt = originalEvent.altKey;\n    eventArgs.shift = originalEvent.shiftKey;\n    return !!args.handled;\n  },\n  _closeEditCell: function () {\n    var _this2 = this;\n\n    setTimeout(function () {\n      _this2._editingController.closeEditCell();\n    });\n  },\n  _leftRightKeysHandler: function (eventArgs, isEditing) {\n    var rowIndex = this.getVisibleRowIndex();\n    var $event = eventArgs.originalEvent;\n\n    var $row = this._focusedView && this._focusedView.getRow(rowIndex);\n\n    var directionCode = this._getDirectionCodeByKey(eventArgs.keyName);\n\n    var isEditingNavigationMode = this._isFastEditingStarted();\n\n    var allowNavigate = (!isEditing || isEditingNavigationMode) && isDataRow($row);\n\n    if (allowNavigate) {\n      this.setCellFocusType();\n      isEditingNavigationMode && this._closeEditCell();\n\n      var $cell = this._getNextCell(directionCode);\n\n      if (isElementDefined($cell)) {\n        this._arrowKeysHandlerFocusCell($event, $cell);\n      }\n\n      $event && $event.preventDefault();\n    }\n  },\n  _upDownKeysHandler: function (eventArgs, isEditing) {\n    var rowIndex = this.getVisibleRowIndex();\n\n    var $row = this._focusedView && this._focusedView.getRow(rowIndex);\n\n    var $event = eventArgs.originalEvent;\n    var isUpArrow = \"upArrow\" === eventArgs.keyName;\n\n    var dataSource = this._dataController.dataSource();\n\n    var isEditingNavigationMode = this._isFastEditingStarted();\n\n    var allowNavigate = (!isEditing || isEditingNavigationMode) && $row && !isDetailRow($row);\n\n    if (allowNavigate) {\n      isEditingNavigationMode && this._closeEditCell();\n\n      if (!this._navigateNextCell($event, eventArgs.keyName)) {\n        if (this._isVirtualScrolling() && isUpArrow && dataSource && !dataSource.isLoading()) {\n          var rowHeight = $row.outerHeight();\n          rowIndex = this._focusedCellPosition.rowIndex - 1;\n\n          this._scrollBy(-rowHeight, rowIndex, $event);\n        }\n      }\n\n      $event && $event.preventDefault();\n    }\n  },\n  _pageUpDownKeyHandler: function (eventArgs) {\n    var pageIndex = this._dataController.pageIndex();\n\n    var pageCount = this._dataController.pageCount();\n\n    var pagingEnabled = this.option(\"paging.enabled\");\n    var isPageUp = \"pageUp\" === eventArgs.keyName;\n    var pageStep = isPageUp ? -1 : 1;\n    var scrollable = this.getView(\"rowsView\").getScrollable();\n\n    if (pagingEnabled && !this._isVirtualScrolling()) {\n      if ((isPageUp ? pageIndex > 0 : pageIndex < pageCount - 1) && !this._isVirtualScrolling()) {\n        this._dataController.pageIndex(pageIndex + pageStep);\n\n        eventArgs.originalEvent.preventDefault();\n      }\n    } else {\n      if (scrollable && scrollable._container().height() < scrollable.$content().height()) {\n        this._scrollBy(scrollable._container().height() * pageStep);\n\n        eventArgs.originalEvent.preventDefault();\n      }\n    }\n  },\n  _spaceKeyHandler: function (eventArgs, isEditing) {\n    var rowIndex = this.getVisibleRowIndex();\n    var $target = (0, _renderer2.default)(eventArgs.originalEvent && eventArgs.originalEvent.target);\n\n    if (this.option(\"selection\") && \"none\" !== this.option(\"selection\").mode && !isEditing) {\n      var isFocusedRowElement = \"row\" === this._getElementType($target) && this.isRowFocusType() && isDataRow($target);\n      var isFocusedSelectionCell = $target.hasClass(COMMAND_SELECT_CLASS);\n\n      if (isFocusedSelectionCell && \"onClick\" === this.option(\"selection.showCheckBoxesMode\")) {\n        this._selectionController.startSelectionWithCheckboxes();\n      }\n\n      if (isFocusedRowElement || $target.parent().hasClass(DATA_ROW_CLASS) || $target.hasClass(this.addWidgetPrefix(ROWS_VIEW_CLASS))) {\n        this._selectionController.changeItemSelection(rowIndex, {\n          shift: eventArgs.shift,\n          control: eventArgs.ctrl\n        });\n\n        eventArgs.originalEvent.preventDefault();\n      }\n    } else {\n      this._beginFastEditing(eventArgs.originalEvent);\n    }\n  },\n  _ctrlAKeyHandler: function (eventArgs, isEditing) {\n    if (!isEditing && eventArgs.ctrl && !eventArgs.alt && \"multiple\" === this.option(\"selection.mode\") && this.option(\"selection.allowSelectAll\")) {\n      this._selectionController.selectAll();\n\n      eventArgs.originalEvent.preventDefault();\n    }\n  },\n  _tabKeyHandler: function (eventArgs, isEditing) {\n    var editingOptions = this.option(\"editing\");\n    var direction = eventArgs.shift ? \"previous\" : \"next\";\n\n    var isOriginalHandlerRequired = !eventArgs.shift && this._isLastValidCell(this._focusedCellPosition) || eventArgs.shift && this._isFirstValidCell(this._focusedCellPosition);\n\n    var eventTarget = eventArgs.originalEvent.target;\n\n    var focusedViewElement = this._focusedView && this._focusedView.element();\n\n    if (this._handleTabKeyOnMasterDetailCell(eventTarget, direction)) {\n      return;\n    }\n\n    (0, _renderer2.default)(focusedViewElement).addClass(FOCUS_STATE_CLASS);\n\n    if (editingOptions && eventTarget && !isOriginalHandlerRequired) {\n      if ((0, _renderer2.default)(eventTarget).hasClass(this.addWidgetPrefix(ROWS_VIEW_CLASS))) {\n        this._resetFocusedCell();\n      }\n\n      if (isEditing) {\n        if (!this._editingCellTabHandler(eventArgs, direction)) {\n          return;\n        }\n      } else {\n        if (this._targetCellTabHandler(eventArgs, direction)) {\n          isOriginalHandlerRequired = true;\n        }\n      }\n    }\n\n    if (isOriginalHandlerRequired) {\n      this.getController(\"editorFactory\").loseFocus();\n\n      if (this._editingController.isEditing() && !this._isRowEditMode()) {\n        this._resetFocusedCell();\n\n        this._closeEditCell();\n      }\n    } else {\n      eventArgs.originalEvent.preventDefault();\n    }\n  },\n  _editingCellTabHandler: function (eventArgs, direction) {\n    var eventTarget = eventArgs.originalEvent.target;\n\n    var $cell = this._getCellElementFromTarget(eventTarget);\n\n    var isEditingAllowed;\n    var $event = eventArgs.originalEvent;\n\n    var elementType = this._getElementType(eventTarget);\n\n    if ($cell.is(COMMAND_CELL_SELECTOR)) {\n      return !this._targetCellTabHandler(eventArgs, direction);\n    }\n\n    this._updateFocusedCellPosition($cell);\n\n    var nextCellInfo = this._getNextCellByTabKey($event, direction, elementType);\n\n    $cell = nextCellInfo.$cell;\n\n    if (!$cell || this._handleTabKeyOnMasterDetailCell($cell, direction)) {\n      return false;\n    }\n\n    var column = this._columnsController.getVisibleColumns()[this.getView(\"rowsView\").getCellIndex($cell)];\n\n    var row = this._dataController.items()[this._getRowIndex($cell && $cell.parent())];\n\n    if (column.allowEditing) {\n      var _isDataRow = !row || \"data\" === row.rowType;\n\n      isEditingAllowed = this._editingController.allowUpdating({\n        row: row\n      }) ? _isDataRow : row && row.isNewRow;\n    }\n\n    if (!isEditingAllowed) {\n      this._closeEditCell();\n    }\n\n    if (this._focusCell($cell, !nextCellInfo.isHighlighted)) {\n      if (!this._isRowEditMode() && isEditingAllowed) {\n        this._editingController.editCell(this.getVisibleRowIndex(), this._focusedCellPosition.columnIndex);\n      } else {\n        this._focusInteractiveElement($cell, eventArgs.shift);\n      }\n    }\n\n    return true;\n  },\n  _targetCellTabHandler: function (eventArgs, direction) {\n    var $event = eventArgs.originalEvent;\n    var eventTarget = $event.target;\n\n    var $cell = this._getCellElementFromTarget(eventTarget);\n\n    var $lastInteractiveElement = this._getInteractiveElement($cell, !eventArgs.shift);\n\n    var isOriginalHandlerRequired = false;\n    var elementType;\n\n    if (!isEditorCell(this, $cell) && $lastInteractiveElement.length && eventTarget !== $lastInteractiveElement.get(0)) {\n      isOriginalHandlerRequired = true;\n    } else {\n      if (void 0 === this._focusedCellPosition.rowIndex && (0, _renderer2.default)(eventTarget).hasClass(ROW_CLASS)) {\n        this._updateFocusedCellPosition($cell);\n      }\n\n      elementType = this._getElementType(eventTarget);\n\n      if (this.isRowFocusType()) {\n        this.setCellFocusType();\n\n        if (\"row\" === elementType && isDataRow((0, _renderer2.default)(eventTarget))) {\n          eventTarget = this.getFirstValidCellInRow((0, _renderer2.default)(eventTarget));\n          elementType = this._getElementType(eventTarget);\n        }\n      }\n\n      var nextCellInfo = this._getNextCellByTabKey($event, direction, elementType);\n\n      $cell = nextCellInfo.$cell;\n\n      if (!$cell) {\n        return false;\n      }\n\n      $cell = this._checkNewLineTransition($event, $cell);\n\n      if (!$cell) {\n        return false;\n      }\n\n      this._focusCell($cell, !nextCellInfo.isHighlighted);\n\n      if (!isEditorCell(this, $cell)) {\n        this._focusInteractiveElement($cell, eventArgs.shift);\n      }\n    }\n\n    return isOriginalHandlerRequired;\n  },\n  _getNextCellByTabKey: function ($event, direction, elementType) {\n    var $cell = this._getNextCell(direction, elementType);\n\n    var args = $cell && this._fireFocusedCellChanging($event, $cell, true);\n\n    if (!args || args.cancel) {\n      return {};\n    }\n\n    if (args.$newCellElement) {\n      $cell = args.$newCellElement;\n    }\n\n    return {\n      $cell: $cell,\n      isHighlighted: args.isHighlighted\n    };\n  },\n  _checkNewLineTransition: function ($event, $cell) {\n    var rowIndex = this.getVisibleRowIndex();\n    var $row = $cell.parent();\n\n    if (rowIndex !== this._getRowIndex($row)) {\n      var cellPosition = this._getCellPosition($cell);\n\n      var args = this._fireFocusedRowChanging($event, $row);\n\n      if (args.cancel) {\n        return;\n      }\n\n      if (args.rowIndexChanged) {\n        this.setFocusedColumnIndex(cellPosition.columnIndex);\n        $cell = this._getFocusedCell();\n      }\n    }\n\n    return $cell;\n  },\n  _enterKeyHandler: function (eventArgs, isEditing) {\n    var $cell = this._getFocusedCell();\n\n    var rowIndex = this.getVisibleRowIndex();\n\n    var $row = this._focusedView && this._focusedView.getRow(rowIndex);\n\n    if (this.option(\"grouping.allowCollapsing\") && isGroupRow($row) || this.option(\"masterDetail.enabled\") && $cell && $cell.hasClass(COMMAND_EXPAND_CLASS)) {\n      var key = this._dataController.getKeyByRowIndex(rowIndex);\n\n      var item = this._dataController.items()[rowIndex];\n\n      if (void 0 !== key && item && item.data && !item.data.isContinuation) {\n        this._dataController.changeRowExpand(key);\n      }\n    } else {\n      this._processEnterKeyForDataCell(eventArgs, isEditing);\n    }\n  },\n  _processEnterKeyForDataCell: function (eventArgs, isEditing) {\n    var direction = this._getEnterKeyDirection(eventArgs);\n\n    var allowEditingOnEnterKey = this._allowEditingOnEnterKey();\n\n    if (isEditing || !allowEditingOnEnterKey && direction) {\n      this._handleEnterKeyEditingCell(eventArgs.originalEvent);\n\n      if (\"next\" === direction || \"previous\" === direction) {\n        this._targetCellTabHandler(eventArgs, direction);\n      } else {\n        if (\"upArrow\" === direction || \"downArrow\" === direction) {\n          this._navigateNextCell(eventArgs.originalEvent, direction);\n        }\n      }\n    } else {\n      if (allowEditingOnEnterKey) {\n        this._startEditing(eventArgs);\n      }\n    }\n  },\n  _getEnterKeyDirection: function (eventArgs) {\n    var enterKeyDirection = this.option(\"keyboardNavigation.enterKeyDirection\");\n    var isShift = eventArgs.shift;\n\n    if (\"column\" === enterKeyDirection) {\n      return isShift ? \"upArrow\" : \"downArrow\";\n    }\n\n    if (\"row\" === enterKeyDirection) {\n      return isShift ? \"previous\" : \"next\";\n    }\n  },\n  _handleEnterKeyEditingCell: function (event) {\n    var target = event.target;\n\n    var $cell = this._getCellElementFromTarget(target);\n\n    var isRowEditMode = this._isRowEditMode();\n\n    this._updateFocusedCellPosition($cell);\n\n    if (isRowEditMode) {\n      this._focusEditFormCell($cell);\n\n      setTimeout(this._editingController.saveEditData.bind(this._editingController));\n    } else {\n      _events_engine2.default.trigger((0, _renderer2.default)(target), \"change\");\n\n      this._closeEditCell();\n\n      event.preventDefault();\n    }\n  },\n  _escapeKeyHandler: function (eventArgs, isEditing) {\n    var $cell = this._getCellElementFromTarget(eventArgs.originalEvent.target);\n\n    if (isEditing) {\n      this._updateFocusedCellPosition($cell);\n\n      if (!this._isRowEditMode()) {\n        if (\"cell\" === this._editingController.getEditMode()) {\n          this._editingController.cancelEditData();\n        } else {\n          this._closeEditCell();\n        }\n      } else {\n        this._focusEditFormCell($cell);\n\n        this._editingController.cancelEditData();\n      }\n\n      eventArgs.originalEvent.preventDefault();\n    }\n  },\n  _ctrlFKeyHandler: function (eventArgs) {\n    if (this.option(\"searchPanel.visible\")) {\n      var searchTextEditor = this._headerPanel.getSearchTextEditor();\n\n      if (searchTextEditor) {\n        searchTextEditor.focus();\n        eventArgs.originalEvent.preventDefault();\n      }\n    }\n  },\n  _f2KeyHandler: function () {\n    var isEditing = this._editingController.isEditing();\n\n    var rowIndex = this.getVisibleRowIndex();\n\n    var $row = this._focusedView && this._focusedView.getRow(rowIndex);\n\n    if (!isEditing && isDataRow($row)) {\n      this._startEditing();\n    }\n  },\n  _navigateNextCell: function ($event, keyCode) {\n    var $cell = this._getNextCell(keyCode);\n\n    if ($cell && this._isCellValid($cell)) {\n      return this._arrowKeysHandlerFocusCell($event, $cell, true);\n    }\n\n    return false;\n  },\n  _arrowKeysHandlerFocusCell: function ($event, $cell, upDown) {\n    var args = this._fireFocusChangingEvents($event, $cell, upDown, true);\n\n    $cell = args.$newCellElement;\n\n    if (!args.cancel && this._isCellValid($cell)) {\n      this._focus($cell, !args.isHighlighted);\n\n      return true;\n    }\n\n    return false;\n  },\n  _beginFastEditing: function (originalEvent, isDeleting) {\n    if (!this._isFastEditingAllowed() || originalEvent.altKey || originalEvent.ctrlKey || this._editingController.isEditing()) {\n      return false;\n    }\n\n    if (isDeleting) {\n      this._startEditing(originalEvent, FAST_EDITING_DELETE_KEY);\n    } else {\n      var key = originalEvent.key;\n      var keyCode = originalEvent.keyCode || originalEvent.which;\n      var fastEditingKey = key || keyCode && String.fromCharCode(keyCode);\n\n      if (fastEditingKey && (1 === fastEditingKey.length || fastEditingKey === FAST_EDITING_DELETE_KEY)) {\n        this._startEditing(originalEvent, fastEditingKey);\n      }\n    }\n\n    return true;\n  },\n  _pointerEventHandler: function (e) {\n    var event = e.event || e;\n    var $target = (0, _renderer2.default)(event.currentTarget);\n    var rowsView = this.getView(\"rowsView\");\n    var focusedViewElement = rowsView && rowsView.element();\n    var $parent = $target.parent();\n    var isEditingRow = $parent.hasClass(EDIT_ROW_CLASS);\n    var isInteractiveElement = (0, _renderer2.default)(event.target).is(INTERACTIVE_ELEMENTS_SELECTOR);\n    var isRevertButton = !!(0, _renderer2.default)(event.target).closest(\".\".concat(REVERT_BUTTON_CLASS)).length;\n    var isExpandCommandCell = $target.hasClass(COMMAND_EXPAND_CLASS);\n\n    if (!isRevertButton && this._isEventInCurrentGrid(event) && (this._isCellValid($target, !isInteractiveElement) || isExpandCommandCell)) {\n      $target = this._isInsideEditForm($target) ? (0, _renderer2.default)(event.target) : $target;\n\n      this._focusView();\n\n      (0, _renderer2.default)(focusedViewElement).removeClass(FOCUS_STATE_CLASS);\n\n      if ($parent.hasClass(FREESPACE_ROW_CLASS)) {\n        this._updateFocusedCellPosition($target);\n\n        this._applyTabIndexToElement(this._focusedView.element());\n\n        this._focusedView.focus();\n      } else {\n        if (!this._isMasterDetailCell($target) && !isEditingRow) {\n          this._clickTargetCellHandler(event, $target);\n        } else {\n          this._updateFocusedCellPosition($target);\n        }\n      }\n    } else {\n      if ($target.is(\"td\")) {\n        this._resetFocusedCell();\n      }\n    }\n  },\n  _clickTargetCellHandler: function (event, $cell) {\n    var columnIndex = this.getView(\"rowsView\").getCellIndex($cell);\n\n    var column = this._columnsController.getVisibleColumns()[columnIndex];\n\n    var isCellEditMode = this._isCellEditMode();\n\n    this.setCellFocusType();\n\n    var args = this._fireFocusChangingEvents(event, $cell, true);\n\n    $cell = args.$newCellElement;\n\n    if (!args.cancel) {\n      if (args.resetFocusedRow) {\n        this.getController(\"focus\")._resetFocusedRow();\n\n        return;\n      }\n\n      if (args.rowIndexChanged) {\n        $cell = this._getFocusedCell();\n      }\n\n      if (!args.isHighlighted && !isCellEditMode) {\n        this.setRowFocusType();\n      }\n\n      this._updateFocusedCellPosition($cell);\n\n      if (this._allowRowUpdating() && isCellEditMode && column && column.allowEditing) {\n        this._isNeedFocus = false;\n        this._isHiddenFocus = false;\n      } else {\n        var $target = event && (0, _renderer2.default)(event.target).closest(INTERACTIVE_ELEMENTS_SELECTOR + \", td\");\n        var isInteractiveTarget = $target && $target.not($cell).is(INTERACTIVE_ELEMENTS_SELECTOR);\n        var isEditor = !!column && !column.command && $cell.hasClass(EDITOR_CELL_CLASS);\n        var isDisabled = !isEditor && (!args.isHighlighted || isInteractiveTarget);\n\n        this._focus($cell, isDisabled, isInteractiveTarget);\n      }\n    } else {\n      this.setRowFocusType();\n      this.setFocusedRowIndex(args.prevRowIndex);\n      $cell = this._getFocusedCell();\n\n      if (this._editingController.isEditing() && isCellEditMode) {\n        this._closeEditCell();\n      }\n    }\n  },\n  _allowRowUpdating: function () {\n    var rowIndex = this.getVisibleRowIndex();\n\n    var row = this._dataController.items()[rowIndex];\n\n    return this._editingController.allowUpdating({\n      row: row\n    }, \"click\");\n  },\n  focus: function (element) {\n    var activeElementSelector;\n    var focusedRowEnabled = this.option(\"focusedRowEnabled\");\n    var isHighlighted = isCellElement((0, _renderer2.default)(element));\n\n    if (!element) {\n      activeElementSelector = \".dx-datagrid-rowsview .dx-row[tabindex]\";\n\n      if (!focusedRowEnabled) {\n        activeElementSelector += \", .dx-datagrid-rowsview .dx-row > td[tabindex]\";\n      }\n\n      element = this.component.$element().find(activeElementSelector).first();\n    }\n\n    element && this._focusElement((0, _renderer2.default)(element), isHighlighted);\n  },\n  getFocusedView: function () {\n    return this._focusedView;\n  },\n  setupFocusedView: function () {\n    if (this.isKeyboardEnabled() && !(0, _type.isDefined)(this._focusedView)) {\n      this._focusView();\n    }\n  },\n  _focusElement: function ($element, isHighlighted) {\n    var rowsViewElement = (0, _renderer2.default)(this._getRowsViewElement());\n    var $focusedView = $element.closest(rowsViewElement);\n    var isRowFocusType = this.isRowFocusType();\n    var args = {};\n\n    if (!$focusedView.length || isCellElement($element) && !this._isCellValid($element)) {\n      return;\n    }\n\n    this._focusView();\n\n    this._isNeedFocus = true;\n    this._isNeedScroll = true;\n\n    if (isCellElement($element) || isGroupRow($element)) {\n      this.setCellFocusType();\n      args = this._fireFocusChangingEvents(null, $element, false, isHighlighted);\n      $element = args.$newCellElement;\n\n      if (isRowFocusType && !args.isHighlighted) {\n        this.setRowFocusType();\n      }\n    }\n\n    if (!args.cancel) {\n      this._focus($element, !args.isHighlighted);\n\n      this._focusInteractiveElement($element);\n    }\n  },\n  _getFocusedViewByElement: function ($element) {\n    var view = this.getFocusedView();\n    var $view = view && (0, _renderer2.default)(view.element());\n    return $element && 0 !== $element.closest($view).length;\n  },\n  _focusView: function () {\n    this._focusedView = this.getView(\"rowsView\");\n  },\n  _focusInteractiveElement: function ($cell, isLast) {\n    if (!$cell) {\n      return;\n    }\n\n    var $focusedElement = this._getInteractiveElement($cell, isLast);\n\n    (0, _uiGrid_core3.focusAndSelectElement)(this, $focusedElement);\n  },\n  _focus: function ($cell, disableFocus, isInteractiveElement) {\n    var $row = $cell && !$cell.hasClass(ROW_CLASS) ? $cell.closest(\".\".concat(ROW_CLASS)) : $cell;\n\n    if ($row && isNotFocusedRow($row)) {\n      return;\n    }\n\n    var focusedView = this._focusedView;\n    var $focusViewElement = focusedView && focusedView.element();\n    var $focusElement;\n    this._isHiddenFocus = disableFocus;\n\n    if (isGroupRow($row) || this.isRowFocusType()) {\n      $focusElement = $row;\n\n      if (focusedView) {\n        this.setFocusedRowIndex(this._getRowIndex($row));\n      }\n    } else {\n      if (isCellElement($cell)) {\n        $focusElement = $cell;\n\n        this._updateFocusedCellPosition($cell);\n      }\n    }\n\n    if ($focusElement) {\n      if ($focusViewElement) {\n        $focusViewElement.find(\".dx-row[tabIndex], .dx-row > td[tabindex]\").not($focusElement).removeClass(CELL_FOCUS_DISABLED_CLASS).removeAttr(\"tabIndex\");\n      }\n\n      _events_engine2.default.one($focusElement, \"blur\", function (e) {\n        if (e.relatedTarget) {\n          $focusElement.removeClass(CELL_FOCUS_DISABLED_CLASS);\n        }\n      });\n\n      if (!isInteractiveElement) {\n        this._applyTabIndexToElement($focusElement);\n\n        _events_engine2.default.trigger($focusElement, \"focus\");\n      }\n\n      if (disableFocus) {\n        $focusElement.addClass(CELL_FOCUS_DISABLED_CLASS);\n      } else {\n        this.getController(\"editorFactory\").focus($focusElement);\n      }\n    }\n  },\n  _updateFocus: function (isRenderView) {\n    var that = this;\n    setTimeout(function () {\n      var $cell = that._getFocusedCell();\n\n      var isEditing = that.getController(\"editing\").isEditing();\n\n      if ($cell && !(that._isMasterDetailCell($cell) && !that._isRowEditMode())) {\n        if (that._hasSkipRow($cell.parent())) {\n          var direction = that._focusedCellPosition && that._focusedCellPosition.rowIndex > 0 ? \"upArrow\" : \"downArrow\";\n          $cell = that._getNextCell(direction);\n        }\n\n        if (isElementDefined($cell)) {\n          if (isRenderView && !isEditing && that._checkCellOverlapped($cell)) {\n            return;\n          }\n\n          if ($cell.is(\"td\") || $cell.hasClass(that.addWidgetPrefix(EDIT_FORM_ITEM_CLASS))) {\n            var isCommandCell = $cell.is(COMMAND_CELL_SELECTOR);\n\n            if ((isRenderView || !isCommandCell) && that.getController(\"editorFactory\").focus()) {\n              that._focus($cell);\n            } else {\n              if (that._isCellEditMode()) {\n                that._focus($cell, that._isHiddenFocus);\n              } else {\n                if (that._isHiddenFocus) {\n                  that._focus($cell, true);\n                }\n              }\n            }\n\n            if (isEditing) {\n              that._focusInteractiveElement.bind(that)($cell);\n            }\n          } else {\n            _events_engine2.default.trigger($cell, \"focus\");\n          }\n        }\n      }\n    });\n  },\n  _checkCellOverlapped: function ($cell) {\n    var cellOffset = $cell.offset();\n    var hasScrollable = this.component.getScrollable && this.component.getScrollable();\n    var isOverlapped = false;\n\n    if (hasScrollable) {\n      if (cellOffset.left < 0) {\n        isOverlapped = $cell.width() + cellOffset.left <= 0;\n      } else {\n        if (cellOffset.top < 0) {\n          isOverlapped = $cell.height() + cellOffset.top <= 0;\n        }\n      }\n    }\n\n    return isOverlapped;\n  },\n  _getFocusedCell: function () {\n    return (0, _renderer2.default)(this._getCell(this._focusedCellPosition));\n  },\n  _updateFocusedCellPositionByTarget: function (target) {\n    var _this$_focusedCellPos;\n\n    var elementType = this._getElementType(target);\n\n    if (\"row\" === elementType && (0, _type.isDefined)(null === (_this$_focusedCellPos = this._focusedCellPosition) || void 0 === _this$_focusedCellPos ? void 0 : _this$_focusedCellPos.columnIndex)) {\n      var $row = (0, _renderer2.default)(target);\n      this._focusedView && isGroupRow($row) && this.setFocusedRowIndex(this._getRowIndex($row));\n    } else {\n      this._updateFocusedCellPosition(this._getCellElementFromTarget(target));\n    }\n  },\n  _updateFocusedCellPosition: function ($cell, direction) {\n    var position = this._getCellPosition($cell, direction);\n\n    if (position) {\n      if (!$cell.length || position.rowIndex >= 0 && position.columnIndex >= 0) {\n        this.setFocusedCellPosition(position.rowIndex, position.columnIndex);\n      }\n    }\n\n    return position;\n  },\n  _getCellPosition: function ($cell, direction) {\n    var that = this;\n    var columnIndex;\n    var $row = isElementDefined($cell) && $cell.closest(\"tr\");\n    var rowsView = this.getView(\"rowsView\");\n\n    if (isElementDefined($row)) {\n      var rowIndex = that._getRowIndex($row);\n\n      columnIndex = rowsView.getCellIndex($cell, rowIndex);\n\n      if (direction) {\n        columnIndex = \"previous\" === direction ? columnIndex - 1 : columnIndex + 1;\n        columnIndex = that._applyColumnIndexBoundaries(columnIndex);\n      }\n\n      return {\n        rowIndex: rowIndex,\n        columnIndex: columnIndex\n      };\n    }\n  },\n  _focusCell: function ($cell, isDisabled) {\n    if (this._isCellValid($cell)) {\n      this._focus($cell, isDisabled);\n\n      return true;\n    }\n  },\n  _focusEditFormCell: function ($cell) {\n    if ($cell.hasClass(MASTER_DETAIL_CELL_CLASS)) {\n      this.getController(\"editorFactory\").focus($cell, true);\n    }\n  },\n  _resetFocusedCell: function () {\n    var that = this;\n\n    var $cell = that._getFocusedCell();\n\n    $cell && $cell.removeAttr(\"tabIndex\");\n    that._focusedView && that._focusedView.renderFocusState && that._focusedView.renderFocusState();\n    that._isNeedFocus = false;\n    that._isNeedScroll = false;\n    that._focusedCellPosition = {};\n  },\n  restoreFocusableElement: function (rowIndex, $event) {\n    var that = this;\n    var args;\n    var $rowElement;\n    var isUpArrow = (0, _type.isDefined)(rowIndex);\n    var rowsView = that.getView(\"rowsView\");\n    var $rowsViewElement = rowsView.element();\n    var columnIndex = that._focusedCellPosition.columnIndex;\n\n    var rowIndexOffset = that._dataController.getRowIndexOffset();\n\n    rowIndex = isUpArrow ? rowIndex : rowsView.getTopVisibleItemIndex() + rowIndexOffset;\n\n    if (!isUpArrow) {\n      that.getController(\"editorFactory\").loseFocus();\n\n      that._applyTabIndexToElement($rowsViewElement);\n\n      _events_engine2.default.trigger($rowsViewElement, \"focus\");\n    } else {\n      $rowElement = rowsView.getRow(rowIndex - rowIndexOffset);\n      args = that._fireFocusedRowChanging($event, $rowElement);\n\n      if (!args.cancel && args.rowIndexChanged) {\n        rowIndex = args.newRowIndex;\n      }\n    }\n\n    if (!isUpArrow || !args.cancel) {\n      that.setFocusedCellPosition(rowIndex, columnIndex);\n    }\n\n    isUpArrow && that._updateFocus();\n  },\n  _getNewPositionByCode: function (cellPosition, elementType, code) {\n    var columnIndex = cellPosition.columnIndex;\n    var rowIndex = cellPosition.rowIndex;\n    var visibleColumnsCount;\n\n    if (void 0 === cellPosition.rowIndex && \"next\" === code) {\n      return {\n        columnIndex: 0,\n        rowIndex: 0\n      };\n    }\n\n    switch (code) {\n      case \"nextInRow\":\n      case \"next\":\n        visibleColumnsCount = this._getVisibleColumnCount();\n\n        if (columnIndex < visibleColumnsCount - 1 && \"row\" !== elementType && this._hasValidCellAfterPosition({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        })) {\n          columnIndex++;\n        } else {\n          if (!this._isLastRow(rowIndex) && \"next\" === code) {\n            columnIndex = 0;\n            rowIndex++;\n          }\n        }\n\n        break;\n\n      case \"previousInRow\":\n      case \"previous\":\n        if (columnIndex > 0 && \"row\" !== elementType && this._hasValidCellBeforePosition({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        })) {\n          columnIndex--;\n        } else {\n          if (rowIndex > 0 && \"previous\" === code) {\n            rowIndex--;\n            visibleColumnsCount = this._getVisibleColumnCount();\n            columnIndex = visibleColumnsCount - 1;\n          }\n        }\n\n        break;\n\n      case \"upArrow\":\n        rowIndex = rowIndex > 0 ? rowIndex - 1 : rowIndex;\n        break;\n\n      case \"downArrow\":\n        rowIndex = !this._isLastRow(rowIndex) ? rowIndex + 1 : rowIndex;\n    }\n\n    return {\n      columnIndex: columnIndex,\n      rowIndex: rowIndex\n    };\n  },\n  setFocusedCellPosition: function (rowIndex, columnIndex) {\n    this.setFocusedRowIndex(rowIndex);\n    this.setFocusedColumnIndex(columnIndex);\n  },\n  setFocusedRowIndex: function (rowIndex) {\n    if (!this._focusedCellPosition) {\n      this._focusedCellPosition = {};\n    }\n\n    this._focusedCellPosition.rowIndex = rowIndex;\n  },\n  setFocusedColumnIndex: function (columnIndex) {\n    if (!this._focusedCellPosition) {\n      this._focusedCellPosition = {};\n    }\n\n    this._focusedCellPosition.columnIndex = columnIndex;\n  },\n  getVisibleRowIndex: function () {\n    if (this._focusedCellPosition) {\n      if (!this._focusedCellPosition.rowIndex) {\n        return this._focusedCellPosition.rowIndex;\n      }\n\n      return this._focusedCellPosition.rowIndex - this._dataController.getRowIndexOffset();\n    }\n\n    return null;\n  },\n  getVisibleColumnIndex: function () {\n    if (this._focusedCellPosition) {\n      return (0, _type.isDefined)(this._focusedCellPosition.columnIndex) ? this._focusedCellPosition.columnIndex : -1;\n    }\n\n    return -1;\n  },\n  getFocusedColumnIndex: function () {\n    return this._focusedCellPosition ? this._focusedCellPosition.columnIndex : null;\n  },\n  _applyColumnIndexBoundaries: function (columnIndex) {\n    var visibleColumnsCount = this._getVisibleColumnCount();\n\n    if (columnIndex < 0) {\n      columnIndex = 0;\n    } else {\n      if (columnIndex >= visibleColumnsCount) {\n        columnIndex = visibleColumnsCount - 1;\n      }\n    }\n\n    return columnIndex;\n  },\n  _isCellByPositionValid: function (cellPosition) {\n    var $cell = (0, _renderer2.default)(this._getCell(cellPosition));\n    return this._isCellValid($cell);\n  },\n  _isLastRow: function (rowIndex) {\n    if (this._isVirtualScrolling()) {\n      return rowIndex >= this._dataController.totalItemsCount() - 1;\n    }\n\n    return rowIndex === this.getController(\"data\").items().length - 1;\n  },\n  _isFirstValidCell: function (cellPosition) {\n    var isFirstValidCell = false;\n\n    if (0 === cellPosition.rowIndex && cellPosition.columnIndex >= 0) {\n      isFirstValidCell = isFirstValidCell || !this._hasValidCellBeforePosition(cellPosition);\n    }\n\n    return isFirstValidCell;\n  },\n  _hasValidCellBeforePosition: function (cellPosition) {\n    var columnIndex = cellPosition.columnIndex;\n    var hasValidCells = false;\n\n    while (columnIndex > 0 && !hasValidCells) {\n      var checkingPosition = {\n        columnIndex: --columnIndex,\n        rowIndex: cellPosition.rowIndex\n      };\n      hasValidCells = this._isCellByPositionValid(checkingPosition);\n    }\n\n    return hasValidCells;\n  },\n  _hasValidCellAfterPosition: function (cellPosition) {\n    var columnIndex = cellPosition.columnIndex;\n    var hasValidCells = false;\n\n    var visibleColumnCount = this._getVisibleColumnCount();\n\n    while (columnIndex < visibleColumnCount - 1 && !hasValidCells) {\n      var checkingPosition = {\n        columnIndex: ++columnIndex,\n        rowIndex: cellPosition.rowIndex\n      };\n      hasValidCells = this._isCellByPositionValid(checkingPosition);\n    }\n\n    return hasValidCells;\n  },\n  _isLastValidCell: function (cellPosition) {\n    var nextColumnIndex = cellPosition.columnIndex >= 0 ? cellPosition.columnIndex + 1 : 0;\n    var rowIndex = cellPosition.rowIndex;\n    var checkingPosition = {\n      columnIndex: nextColumnIndex,\n      rowIndex: rowIndex\n    };\n    var visibleRows = this.getController(\"data\").getVisibleRows();\n    var row = visibleRows && visibleRows[rowIndex];\n\n    var isLastRow = this._isLastRow(rowIndex);\n\n    if (!isLastRow) {\n      return false;\n    }\n\n    if (row && \"group\" === row.rowType && cellPosition.columnIndex > 0) {\n      return true;\n    }\n\n    if (cellPosition.columnIndex === this._getVisibleColumnCount() - 1) {\n      return true;\n    }\n\n    if (this._isCellByPositionValid(checkingPosition)) {\n      return false;\n    }\n\n    return this._isLastValidCell(checkingPosition);\n  },\n  _isCellValid: function ($cell, isClick) {\n    if (isElementDefined($cell) && this._columnsController) {\n      var rowsView = this.getView(\"rowsView\");\n      var $row = $cell.parent();\n\n      var visibleColumns = this._columnsController.getVisibleColumns();\n\n      var columnIndex = rowsView.getCellIndex($cell);\n      var column = visibleColumns[columnIndex];\n\n      var visibleColumnCount = this._getVisibleColumnCount();\n\n      var editingController = this._editingController;\n      var isMasterDetailRow = isDetailRow($row);\n      var isShowWhenGrouped = column && column.showWhenGrouped;\n      var isDataCell = column && !$cell.hasClass(COMMAND_EXPAND_CLASS) && isDataRow($row);\n\n      var isValidGroupSpaceColumn = function () {\n        return !isMasterDetailRow && column && (!(0, _type.isDefined)(column.groupIndex) || isShowWhenGrouped && isDataCell) || parseInt($cell.attr(\"colspan\")) > 1;\n      };\n\n      if (this._isMasterDetailCell($cell)) {\n        return true;\n      }\n\n      if (visibleColumnCount > columnIndex && isValidGroupSpaceColumn()) {\n        var rowItems = this._dataController.items();\n\n        var visibleRowIndex = rowsView.getRowIndex($row);\n        var row = rowItems[visibleRowIndex];\n        var isCellEditing = editingController && this._isCellEditMode() && editingController.isEditing();\n        var isRowEditingInCurrentRow = editingController && editingController.isEditRow(visibleRowIndex);\n        var isEditing = isRowEditingInCurrentRow || isCellEditing;\n\n        if (column.command) {\n          if (this._isLegacyNavigation()) {\n            return !isEditing && \"expand\" === column.command;\n          }\n\n          if (isCellEditing) {\n            return !column.command;\n          }\n\n          if (isRowEditingInCurrentRow) {\n            return \"select\" !== column.command;\n          }\n\n          return !isEditing;\n        }\n\n        if (isCellEditing && row && \"data\" !== row.rowType) {\n          return false;\n        }\n\n        return !isEditing || column.allowEditing || isClick;\n      }\n    }\n  },\n  getFirstValidCellInRow: function ($row, columnIndex) {\n    var that = this;\n    var $cells = $row.find(\"> td\");\n    var $cell;\n    var $result;\n    columnIndex = columnIndex || 0;\n\n    for (var i = columnIndex; i < $cells.length; ++i) {\n      $cell = $cells.eq(i);\n\n      if (that._isCellValid($cell)) {\n        $result = $cell;\n        break;\n      }\n    }\n\n    return $result;\n  },\n  _getNextCell: function (keyCode, elementType, cellPosition) {\n    var focusedCellPosition = cellPosition || this._focusedCellPosition;\n    var isRowFocusType = this.isRowFocusType();\n    var includeCommandCells = isRowFocusType || (0, _array.inArray)(keyCode, [\"next\", \"previous\"]) > -1;\n    var $cell;\n    var $row;\n\n    if (this._focusedView && focusedCellPosition) {\n      var newFocusedCellPosition = this._getNewPositionByCode(focusedCellPosition, elementType, keyCode);\n\n      $cell = (0, _renderer2.default)(this._getCell(newFocusedCellPosition));\n      var isLastCellOnDirection = \"previous\" === keyCode ? this._isFirstValidCell(newFocusedCellPosition) : this._isLastValidCell(newFocusedCellPosition);\n\n      if (isElementDefined($cell) && !this._isCellValid($cell) && this._isCellInRow(newFocusedCellPosition, includeCommandCells) && !isLastCellOnDirection) {\n        if (isRowFocusType) {\n          $cell = this.getFirstValidCellInRow($cell.parent(), newFocusedCellPosition.columnIndex);\n        } else {\n          $cell = this._getNextCell(keyCode, \"cell\", newFocusedCellPosition);\n        }\n      }\n\n      $row = isElementDefined($cell) && $cell.parent();\n\n      if (this._hasSkipRow($row)) {\n        var rowIndex = this._getRowIndex($row);\n\n        if (!this._isLastRow(rowIndex)) {\n          $cell = this._getNextCell(keyCode, \"row\", {\n            columnIndex: focusedCellPosition.columnIndex,\n            rowIndex: rowIndex\n          });\n        } else {\n          return null;\n        }\n      }\n\n      return isElementDefined($cell) ? $cell : null;\n    }\n\n    return null;\n  },\n  _startEditing: function (eventArgs, fastEditingKey) {\n    var focusedCellPosition = this._focusedCellPosition;\n    var rowIndex = this.getVisibleRowIndex();\n\n    var row = this._dataController.items()[rowIndex];\n\n    var column = this._columnsController.getVisibleColumns()[focusedCellPosition.columnIndex];\n\n    if (this._isAllowEditing(row, column)) {\n      if (this._isRowEditMode()) {\n        this._editingController.editRow(rowIndex);\n      } else {\n        if (focusedCellPosition) {\n          this._startEditingCell(eventArgs, fastEditingKey);\n        }\n      }\n    }\n  },\n  _isAllowEditing: function (row, column) {\n    return this.getController(\"editing\").allowUpdating({\n      row: row\n    }) && column && column.allowEditing;\n  },\n  _startEditingCell: function (eventArgs, fastEditingKey) {\n    var that = this;\n    var rowIndex = this.getVisibleRowIndex();\n    var colIndex = this._focusedCellPosition.columnIndex;\n    this._fastEditingStarted = (0, _type.isDefined)(fastEditingKey);\n\n    var deferred = this._editingController.editCell(rowIndex, colIndex);\n\n    if (this._isFastEditingStarted()) {\n      if (true === deferred) {\n        that._editingCellHandler(eventArgs, fastEditingKey);\n      } else {\n        if (deferred && deferred.done) {\n          var editorValue = fastEditingKey !== FAST_EDITING_DELETE_KEY ? fastEditingKey : \"\";\n          deferred.done(function () {\n            return that._editingCellHandler(eventArgs, editorValue);\n          });\n        }\n      }\n    }\n  },\n  _editingCellHandler: function (eventArgs, editorValue) {\n    var $input = this._getFocusedCell().find(\".dx-texteditor-input\").eq(0);\n\n    var keyDownEvent = eventUtils.createEvent(eventArgs, {\n      type: \"keydown\",\n      target: $input.get(0)\n    });\n    var keyPressEvent = eventUtils.createEvent(eventArgs, {\n      type: \"keypress\",\n      target: $input.get(0)\n    });\n    var inputEvent = eventUtils.createEvent(eventArgs, {\n      type: \"input\",\n      target: $input.get(0)\n    });\n\n    _events_engine2.default.trigger($input, keyDownEvent);\n\n    if (!keyDownEvent.isDefaultPrevented()) {\n      _events_engine2.default.trigger($input, keyPressEvent);\n\n      if (!keyPressEvent.isDefaultPrevented()) {\n        var timeout = _browser2.default.mozilla ? 25 : 0;\n        setTimeout(function () {\n          $input.val(editorValue);\n          var $widgetContainer = $input.closest(\".\".concat(WIDGET_CLASS));\n\n          _events_engine2.default.off($widgetContainer, \"focusout\");\n\n          _events_engine2.default.one($widgetContainer, \"focusout\", function () {\n            _events_engine2.default.trigger($input, \"change\");\n          });\n\n          _events_engine2.default.trigger($input, inputEvent);\n        }, timeout);\n      }\n    }\n  },\n  _fireFocusChangingEvents: function ($event, $cell, fireRowEvent, isHighlighted) {\n    var args = {};\n    var cellPosition = this._getCellPosition($cell) || {};\n\n    if (this.isCellFocusType()) {\n      args = this._fireFocusedCellChanging($event, $cell, isHighlighted);\n\n      if (!args.cancel) {\n        cellPosition.columnIndex = args.newColumnIndex;\n        cellPosition.rowIndex = args.newRowIndex;\n        isHighlighted = args.isHighlighted;\n        $cell = (0, _renderer2.default)(this._getCell(cellPosition));\n      }\n    }\n\n    if (!args.cancel && fireRowEvent && $cell) {\n      args = this._fireFocusedRowChanging($event, $cell.parent());\n\n      if (!args.cancel) {\n        cellPosition.rowIndex = args.newRowIndex;\n        args.isHighlighted = isHighlighted;\n      }\n    }\n\n    args.$newCellElement = (0, _renderer2.default)(this._getCell(cellPosition));\n\n    if (!args.$newCellElement.length) {\n      args.$newCellElement = $cell;\n    }\n\n    return args;\n  },\n  _fireFocusedCellChanging: function ($event, $cellElement, isHighlighted) {\n    var that = this;\n    var prevCellIndex = that.option(\"focusedColumnIndex\");\n    var prevRowIndex = that.option(\"focusedRowIndex\");\n\n    var cellPosition = that._getCellPosition($cellElement);\n\n    var columnIndex = cellPosition ? cellPosition.columnIndex : -1;\n    var rowIndex = cellPosition ? cellPosition.rowIndex : -1;\n    var args = {\n      cellElement: $cellElement,\n      prevColumnIndex: prevCellIndex,\n      prevRowIndex: prevRowIndex,\n      newColumnIndex: columnIndex,\n      newRowIndex: rowIndex,\n      rows: that.getController(\"data\").getVisibleRows(),\n      columns: that.getController(\"columns\").getVisibleColumns(),\n      event: $event,\n      isHighlighted: isHighlighted || false,\n      cancel: false\n    };\n    this._canceledCellPosition = null;\n    that.executeAction(\"onFocusedCellChanging\", args);\n\n    if (args.newColumnIndex !== columnIndex || args.newRowIndex !== rowIndex) {\n      args.$newCellElement = (0, _renderer2.default)(this._getCell({\n        columnIndex: args.newColumnIndex,\n        rowIndex: args.newRowIndex\n      }));\n    }\n\n    if (args.cancel) {\n      this._canceledCellPosition = {\n        rowIndex: rowIndex,\n        columnIndex: columnIndex\n      };\n    }\n\n    return args;\n  },\n  _fireFocusedCellChanged: function ($cellElement, prevCellIndex, prevRowIndex) {\n    var that = this;\n    var dataController = that.getController(\"data\");\n    var columnIndex = that.getView(\"rowsView\").getCellIndex($cellElement);\n\n    var rowIndex = this._getRowIndex($cellElement && $cellElement.parent());\n\n    var localRowIndex = Math.min(rowIndex - dataController.getRowIndexOffset(), dataController.items().length - 1);\n    var isEditingCell = that.getController(\"editing\").isEditCell(localRowIndex, columnIndex);\n    var row = dataController.items()[localRowIndex];\n\n    if (!isEditingCell && (prevCellIndex !== columnIndex || prevRowIndex !== rowIndex)) {\n      dataController = that.getController(\"data\");\n      that.executeAction(\"onFocusedCellChanged\", {\n        cellElement: $cellElement,\n        columnIndex: columnIndex,\n        rowIndex: rowIndex,\n        row: row,\n        column: that.getController(\"columns\").getVisibleColumns()[columnIndex]\n      });\n    }\n  },\n  _fireFocusedRowChanging: function (eventArgs, $newFocusedRow) {\n    var newRowIndex = this._getRowIndex($newFocusedRow);\n\n    var dataController = this.getController(\"data\");\n    var prevFocusedRowIndex = this.option(\"focusedRowIndex\");\n    var loadingOperationTypes = dataController.loadingOperationTypes();\n    var args = {\n      rowElement: $newFocusedRow,\n      prevRowIndex: prevFocusedRowIndex,\n      newRowIndex: newRowIndex,\n      event: eventArgs,\n      rows: this.getController(\"data\").getVisibleRows(),\n      cancel: false\n    };\n\n    if (!dataController || dataController.isLoading() && (loadingOperationTypes.reload || loadingOperationTypes.paging)) {\n      args.cancel = true;\n      return args;\n    }\n\n    if (this.option(\"focusedRowEnabled\")) {\n      this.executeAction(\"onFocusedRowChanging\", args);\n\n      if (!args.cancel && args.newRowIndex !== newRowIndex) {\n        args.resetFocusedRow = args.newRowIndex < 0;\n\n        if (!args.resetFocusedRow) {\n          this.setFocusedRowIndex(args.newRowIndex);\n        }\n\n        args.rowIndexChanged = true;\n      }\n    }\n\n    return args;\n  },\n  _fireFocusedRowChanged: function ($rowElement) {\n    var row;\n    var focusedRowKey = this.option(\"focusedRowKey\");\n    var focusController = this.getController(\"focus\");\n    var focusedRowIndex = null === focusController || void 0 === focusController ? void 0 : focusController.getFocusedRowIndexByKey(focusedRowKey);\n\n    if (this.option(\"focusedRowEnabled\")) {\n      if (focusedRowIndex >= 0) {\n        var dataController = this.getController(\"data\");\n        row = focusedRowIndex >= 0 && dataController.getVisibleRows()[focusedRowIndex - dataController.getRowIndexOffset()];\n      }\n\n      this.executeAction(\"onFocusedRowChanged\", {\n        rowElement: $rowElement,\n        rowIndex: focusedRowIndex,\n        row: row\n      });\n    }\n  },\n  _isEventInCurrentGrid: function (event) {\n    return (0, _uiGrid_core3.isElementInCurrentGrid)(this, (0, _renderer2.default)(event.target));\n  },\n  _isRowEditMode: function () {\n    var editMode = this.getController(\"editing\").getEditMode();\n    return editMode === EDIT_MODE_ROW || editMode === EDIT_MODE_FORM;\n  },\n  _isCellEditMode: function () {\n    var editMode = this.getController(\"editing\").getEditMode();\n    return editMode === EDIT_MODE_CELL || editMode === EDIT_MODE_BATCH;\n  },\n  _isFastEditingAllowed: function () {\n    return this._isCellEditMode() && this.option(\"keyboardNavigation.editOnKeyPress\");\n  },\n  _getInteractiveElement: function ($cell, isLast) {\n    var $focusedElement = $cell.find(INTERACTIVE_ELEMENTS_SELECTOR).filter(\":visible\");\n    return isLast ? $focusedElement.last() : $focusedElement.first();\n  },\n  _applyTabIndexToElement: function ($element) {\n    var tabIndex = this.option(\"tabIndex\") || 0;\n    $element.attr(\"tabindex\", (0, _type.isDefined)(tabIndex) ? tabIndex : 0);\n  },\n  _getCell: function (cellPosition) {\n    if (this._focusedView && this._dataController && cellPosition) {\n      return this._focusedView.getCell({\n        rowIndex: cellPosition.rowIndex - this._dataController.getRowIndexOffset(),\n        columnIndex: cellPosition.columnIndex\n      });\n    }\n  },\n  _getRowIndex: function ($row) {\n    var rowsView = this.getView(\"rowsView\");\n    var rowIndex = rowsView.getRowIndex($row);\n\n    if (rowIndex >= 0) {\n      rowIndex += this.getController(\"data\").getRowIndexOffset();\n    }\n\n    return rowIndex;\n  },\n  _hasSkipRow: function ($row) {\n    var row = $row && $row.get(0);\n    return row && (\"none\" === row.style.display || $row.hasClass(this.addWidgetPrefix(GROUP_FOOTER_CLASS)) || isDetailRow($row) && !$row.hasClass(this.addWidgetPrefix(EDIT_FORM_CLASS)));\n  },\n  _allowEditingOnEnterKey: function () {\n    return \"startEdit\" === this.option(\"keyboardNavigation.enterKeyAction\");\n  },\n  _isLegacyNavigation: function () {\n    return this.option(\"useLegacyKeyboardNavigation\");\n  },\n  _getDirectionCodeByKey: function (key) {\n    var directionCode;\n\n    if (this.option(\"rtlEnabled\")) {\n      directionCode = \"leftArrow\" === key ? \"nextInRow\" : \"previousInRow\";\n    } else {\n      directionCode = \"leftArrow\" === key ? \"previousInRow\" : \"nextInRow\";\n    }\n\n    return directionCode;\n  },\n  _isVirtualScrolling: function () {\n    var scrollingMode = this.option(\"scrolling.mode\");\n    return \"virtual\" === scrollingMode || \"infinite\" === scrollingMode;\n  },\n  _scrollBy: function (top, rowIndex, $event) {\n    var that = this;\n    var scrollable = this.getView(\"rowsView\").getScrollable();\n\n    if (that._focusedCellPosition) {\n      var scrollHandler = function scrollHandler() {\n        scrollable.off(\"scroll\", scrollHandler);\n        setTimeout(that.restoreFocusableElement.bind(that, rowIndex, $event));\n      };\n\n      scrollable.on(\"scroll\", scrollHandler);\n    }\n\n    scrollable.scrollBy({\n      left: 0,\n      top: top\n    });\n  },\n  _isInsideEditForm: function (element) {\n    return (0, _renderer2.default)(element).closest(\".\" + this.addWidgetPrefix(EDIT_FORM_CLASS)).length > 0;\n  },\n  _isMasterDetailCell: function (element) {\n    var $masterDetailCell = (0, _renderer2.default)(element).closest(\".\" + MASTER_DETAIL_CELL_CLASS);\n    var $masterDetailGrid = $masterDetailCell.closest(\".\" + this.getWidgetContainerClass()).parent();\n    return $masterDetailCell.length && $masterDetailGrid.is(this.component.$element());\n  },\n  _processNextCellInMasterDetail: function ($nextCell) {\n    if (!this._isInsideEditForm($nextCell) && $nextCell) {\n      this._applyTabIndexToElement($nextCell);\n    }\n  },\n  _handleTabKeyOnMasterDetailCell: function (target, direction) {\n    if (this._isMasterDetailCell(target)) {\n      this._updateFocusedCellPosition((0, _renderer2.default)(target), direction);\n\n      var $nextCell = this._getNextCell(direction, \"row\");\n\n      this._processNextCellInMasterDetail($nextCell);\n\n      return true;\n    }\n\n    return false;\n  },\n  _getElementType: function (target) {\n    return (0, _renderer2.default)(target).is(\"tr\") ? \"row\" : \"cell\";\n  },\n  _isFastEditingStarted: function () {\n    return this._isFastEditingAllowed() && this._fastEditingStarted;\n  },\n  _getVisibleColumnCount: function () {\n    return this.getController(\"columns\").getVisibleColumns().length;\n  },\n  _isCellInRow: function (cellPosition, includeCommandCells) {\n    var columnIndex = cellPosition.columnIndex;\n\n    var visibleColumnsCount = this._getVisibleColumnCount();\n\n    return includeCommandCells ? columnIndex >= 0 && columnIndex <= visibleColumnsCount - 1 : columnIndex > 0 && columnIndex < visibleColumnsCount - 1;\n  },\n  _getCellElementFromTarget: function (target) {\n    var elementType = this._getElementType(target);\n\n    var $targetElement = (0, _renderer2.default)(target);\n    var $cell;\n\n    if (\"cell\" === elementType) {\n      $cell = $targetElement.closest(\".\".concat(ROW_CLASS, \" > td\"));\n    } else {\n      $cell = $targetElement.children().not(\".\" + COMMAND_EXPAND_CLASS).first();\n    }\n\n    return $cell;\n  },\n  _getRowsViewElement: function () {\n    var rowsView = this.getView(\"rowsView\");\n    return rowsView && rowsView.element();\n  },\n  isKeyboardEnabled: function () {\n    return this.option(\"keyboardNavigation.enabled\");\n  },\n  _processCanceledEditCellPosition: function (rowIndex, columnIndex) {\n    if (this._canceledCellPosition) {\n      var isCanceled = this._canceledCellPosition.rowIndex === rowIndex && this._canceledCellPosition.columnIndex === columnIndex;\n      this._canceledCellPosition = null;\n      return isCanceled;\n    }\n  }\n});\n\nmodule.exports = {\n  defaultOptions: function () {\n    return {\n      useLegacyKeyboardNavigation: false,\n      keyboardNavigation: {\n        enabled: true,\n        enterKeyAction: \"startEdit\",\n        enterKeyDirection: \"none\",\n        editOnKeyPress: false\n      }\n    };\n  },\n  controllers: {\n    keyboardNavigation: KeyboardNavigationController\n  },\n  extenders: {\n    views: {\n      rowsView: {\n        _rowClick: function (e) {\n          var editRowIndex = this.getController(\"editing\").getEditRowIndex();\n          var keyboardController = this.getController(\"keyboardNavigation\");\n\n          if (editRowIndex === e.rowIndex) {\n            keyboardController.setCellFocusType();\n          }\n\n          var needTriggerPointerEventHandler = isMobile() && this.option(\"focusedRowEnabled\");\n\n          if (needTriggerPointerEventHandler) {\n            this._triggerPointerDownEventHandler(e);\n          }\n\n          this.callBase.apply(this, arguments);\n        },\n        _triggerPointerDownEventHandler: function (e) {\n          var originalEvent = e.event.originalEvent;\n\n          if (originalEvent) {\n            var keyboardController = this.getController(\"keyboardNavigation\");\n            var $cell = (0, _renderer2.default)(originalEvent.target);\n            var columnIndex = this.getCellIndex($cell);\n            var column = this.getController(\"columns\").getVisibleColumns()[columnIndex];\n            var row = this.getController(\"data\").items()[e.rowIndex];\n\n            if (keyboardController._isAllowEditing(row, column)) {\n              var eventArgs = eventUtils.createEvent(originalEvent, {\n                currentTarget: originalEvent.target\n              });\n\n              keyboardController._pointerEventHandler(eventArgs);\n            }\n          }\n        },\n        renderFocusState: function () {\n          var dataController = this._dataController;\n          var rowIndex = this.option(\"focusedRowIndex\") || 0;\n          var $rowsView = this.element();\n\n          if ($rowsView && !(0, _selectors.focused)($rowsView)) {\n            $rowsView.attr(\"tabIndex\", null);\n          }\n\n          if (rowIndex < 0 || rowIndex >= dataController.getVisibleRows().length) {\n            rowIndex = 0;\n          }\n\n          var cellElements = this.getCellElements(rowIndex);\n\n          if (this.getController(\"keyboardNavigation\").isKeyboardEnabled() && cellElements) {\n            this.updateFocusElementTabIndex(cellElements);\n          }\n        },\n        updateFocusElementTabIndex: function (cellElements) {\n          var keyboardController = this.getController(\"keyboardNavigation\");\n          var $row = cellElements.eq(0).parent();\n          var columnIndex = this.option(\"focusedColumnIndex\");\n\n          if (!columnIndex || columnIndex < 0) {\n            columnIndex = 0;\n          }\n\n          if (isGroupRow($row)) {\n            keyboardController._applyTabIndexToElement($row);\n          } else {\n            this._updateFocusedCellTabIndex(cellElements, columnIndex);\n          }\n        },\n        _updateFocusedCellTabIndex: function (cellElements, columnIndex) {\n          var $cell;\n          var keyboardController = this.getController(\"keyboardNavigation\");\n          var oldFocusedView = keyboardController._focusedView;\n          var cellElementsLength = cellElements ? cellElements.length : -1;\n          keyboardController._focusedView = this;\n\n          if (cellElementsLength > 0) {\n            if (cellElementsLength <= columnIndex) {\n              columnIndex = cellElementsLength - 1;\n            }\n\n            for (var i = columnIndex; i < cellElementsLength; ++i) {\n              $cell = (0, _renderer2.default)(cellElements[i]);\n\n              if (!keyboardController._isMasterDetailCell($cell)) {\n                if (keyboardController._isCellValid($cell) && isCellElement($cell)) {\n                  keyboardController._applyTabIndexToElement($cell);\n\n                  keyboardController.setCellFocusType();\n                  break;\n                }\n              }\n            }\n          }\n\n          keyboardController._focusedView = oldFocusedView;\n        },\n        renderDelayedTemplates: function (change) {\n          this.callBase.apply(this, arguments);\n\n          if (!change || !change.repaintChangesOnly) {\n            this.renderFocusState();\n          }\n        },\n        _renderCore: function (change) {\n          this.callBase(change);\n\n          if (!change || !change.repaintChangesOnly) {\n            this.renderFocusState();\n          }\n        },\n        _editCellPrepared: function ($cell) {\n          var editorInstance = this._getEditorInstance($cell);\n\n          var keyboardController = this.getController(\"keyboardNavigation\");\n\n          var isEditingNavigationMode = keyboardController && keyboardController._isFastEditingStarted();\n\n          if (editorInstance && isEditingNavigationMode) {\n            this._handleEditingNavigationMode(editorInstance);\n          }\n\n          this.callBase.apply(this, arguments);\n        },\n        _handleEditingNavigationMode: function (editorInstance) {\n          [\"downArrow\", \"upArrow\"].forEach(function (keyName) {\n            var originalKeyHandler = editorInstance._supportedKeys()[keyName];\n\n            editorInstance.registerKeyHandler(keyName, function (e) {\n              var isDropDownOpened = \"true\" === editorInstance._input().attr(\"aria-expanded\");\n\n              if (isDropDownOpened) {\n                return originalKeyHandler && originalKeyHandler.call(editorInstance, e);\n              }\n            });\n          });\n          editorInstance.registerKeyHandler(\"leftArrow\", _common.noop);\n          editorInstance.registerKeyHandler(\"rightArrow\", _common.noop);\n          var isDateBoxWithMask = editorInstance.NAME === DATEBOX_WIDGET_NAME && editorInstance.option(\"useMaskBehavior\");\n\n          if (isDateBoxWithMask) {\n            editorInstance.registerKeyHandler(\"enter\", _common.noop);\n          }\n        },\n        _getEditorInstance: function ($cell) {\n          var $editor = $cell.find(\".dx-texteditor\").eq(0);\n          return (0, _uiGrid_core3.getWidgetInstance)($editor);\n        }\n      }\n    },\n    controllers: {\n      editing: {\n        editCell: function (rowIndex, columnIndex) {\n          var keyboardController = this.getController(\"keyboardNavigation\");\n\n          if (keyboardController._processCanceledEditCellPosition(rowIndex, columnIndex)) {\n            return false;\n          }\n\n          var isCellEditing = this.callBase(rowIndex, columnIndex);\n\n          if (isCellEditing) {\n            keyboardController.setupFocusedView();\n          }\n\n          return isCellEditing;\n        },\n        editRow: function (rowIndex) {\n          var keyboardController = this.getController(\"keyboardNavigation\");\n          var columnIndex = this.option(\"focusedColumnIndex\");\n\n          var column = this._columnsController.getVisibleColumns()[columnIndex];\n\n          if (column && column.type || this.option(\"editing.mode\") === EDIT_MODE_FORM) {\n            keyboardController._resetFocusedCell();\n          }\n\n          this.callBase(rowIndex);\n        },\n        addRow: function (parentKey) {\n          this.getController(\"keyboardNavigation\").setupFocusedView();\n          return this.callBase.apply(this, arguments);\n        },\n        getFocusedCellInRow: function (rowIndex) {\n          var keyboardNavigationController = this.getController(\"keyboardNavigation\");\n          var $cell = this.callBase(rowIndex);\n\n          if (keyboardNavigationController.isKeyboardEnabled() && keyboardNavigationController._focusedCellPosition.rowIndex === rowIndex) {\n            var $focusedCell = keyboardNavigationController._getFocusedCell();\n\n            if (isElementDefined($focusedCell) && !$focusedCell.hasClass(\"dx-command-edit\")) {\n              $cell = $focusedCell;\n            }\n          }\n\n          return $cell;\n        },\n        _processCanceledEditingCell: function () {\n          var _this3 = this;\n\n          this.closeEditCell().done(function () {\n            var keyboardNavigation = _this3.getController(\"keyboardNavigation\");\n\n            keyboardNavigation._updateFocus();\n          });\n        },\n        init: function () {\n          this.callBase();\n          this._keyboardNavigationController = this.getController(\"keyboardNavigation\");\n        },\n        closeEditCell: function () {\n          var keyboardNavigation = this.getController(\"keyboardNavigation\");\n          keyboardNavigation._fastEditingStarted = false;\n          var result = this.callBase.apply(this, arguments);\n\n          keyboardNavigation._updateFocus();\n\n          return result;\n        },\n        _delayedInputFocus: function () {\n          this._keyboardNavigationController._isNeedScroll = true;\n          this.callBase.apply(this, arguments);\n        },\n        _isEditingStart: function () {\n          var keyboardNavigation = this.getController(\"keyboardNavigation\");\n          var cancel = this.callBase.apply(this, arguments);\n\n          if (cancel && !keyboardNavigation._isNeedFocus) {\n            var $cell = keyboardNavigation._getFocusedCell();\n\n            keyboardNavigation._focus($cell, true);\n          }\n\n          return cancel;\n        }\n      },\n      data: {\n        _correctRowIndices: function (getRowIndexCorrection) {\n          var that = this;\n          var keyboardNavigationController = that.getController(\"keyboardNavigation\");\n          var editorFactory = that.getController(\"editorFactory\");\n          var focusedCellPosition = keyboardNavigationController._focusedCellPosition;\n          that.callBase.apply(that, arguments);\n\n          if (focusedCellPosition && focusedCellPosition.rowIndex >= 0) {\n            var focusedRowIndexCorrection = getRowIndexCorrection(focusedCellPosition.rowIndex);\n\n            if (focusedRowIndexCorrection) {\n              focusedCellPosition.rowIndex += focusedRowIndexCorrection;\n              editorFactory.refocus();\n            }\n          }\n        }\n      },\n      adaptiveColumns: {\n        _showHiddenCellsInView: function (_ref) {\n          var viewName = _ref.viewName,\n              $cells = _ref.$cells,\n              isCommandColumn = _ref.isCommandColumn;\n          this.callBase.apply(this, arguments);\n          viewName === COLUMN_HEADERS_VIEW && !isCommandColumn && $cells.each(function (_, cellElement) {\n            var $cell = (0, _renderer2.default)(cellElement);\n            isCellInHeaderRow($cell) && $cell.attr(\"tabindex\", 0);\n          });\n        },\n        _hideVisibleCellInView: function (_ref2) {\n          var viewName = _ref2.viewName,\n              $cell = _ref2.$cell,\n              isCommandColumn = _ref2.isCommandColumn;\n          this.callBase.apply(this, arguments);\n\n          if (viewName === COLUMN_HEADERS_VIEW && !isCommandColumn && isCellInHeaderRow($cell)) {\n            $cell.removeAttr(\"tabindex\");\n          }\n        }\n      }\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/ticketSystem/frontend/node_modules/devextreme/ui/grid_core/ui.grid_core.keyboard_navigation.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_renderer","require","_renderer2","_interopRequireDefault","_dom_adapter","_dom_adapter2","_events_engine","_events_engine2","_uiGrid_core","_uiGrid_core2","_uiGrid_core3","_type","_array","_selectors","_utils","eventUtils","_interopRequireWildcard","_pointer","_pointer2","_click","_click2","_common","_accessibility","accessibility","_browser","_browser2","_short","_devices","_devices2","_getRequireWildcardCache","WeakMap","cache","__esModule","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","default","ROWS_VIEW_CLASS","EDIT_FORM_CLASS","GROUP_FOOTER_CLASS","ROW_CLASS","DATA_ROW_CLASS","GROUP_ROW_CLASS","HEADER_ROW_CLASS","EDIT_FORM_ITEM_CLASS","MASTER_DETAIL_ROW_CLASS","FREESPACE_ROW_CLASS","VIRTUAL_ROW_CLASS","MASTER_DETAIL_CELL_CLASS","EDITOR_CELL_CLASS","EDIT_ROW_CLASS","DROPDOWN_EDITOR_OVERLAY_CLASS","COMMAND_EXPAND_CLASS","COMMAND_SELECT_CLASS","COMMAND_CELL_SELECTOR","CELL_FOCUS_DISABLED_CLASS","DATEBOX_WIDGET_NAME","FOCUS_STATE_CLASS","WIDGET_CLASS","REVERT_BUTTON_CLASS","FAST_EDITING_DELETE_KEY","INTERACTIVE_ELEMENTS_SELECTOR","EDIT_MODE_ROW","EDIT_MODE_FORM","EDIT_MODE_BATCH","EDIT_MODE_CELL","FOCUS_TYPE_ROW","FOCUS_TYPE_CELL","COLUMN_HEADERS_VIEW","isGroupRow","$row","hasClass","isDetailRow","isDataRow","isNotFocusedRow","isCellElement","$element","length","tagName","isEditorCell","that","$cell","_isRowEditMode","isElementDefined","isDefined","isMobile","current","deviceType","isCellInHeaderRow","parent","concat","KeyboardNavigationController","ViewController","inherit","init","isKeyboardEnabled","subscribeVisibilityChange","_dataController","getController","_selectionController","_editingController","_headerPanel","getView","_columnsController","_fastEditingStarted","_focusedCellPosition","_canceledCellPosition","focused","add","setupFocusedView","_isNeedScroll","is","_focusedView","getScrollable","_scrollToElement","_initViewHandlers","_initDocumentHandlers","createAction","_this","pointerEventAction","_pointerEventHandler","rowsView","renderCompleted","e","$rowsView","element","isFullUpdate","changeType","isFocusedViewCorrect","name","needUpdateFocus","isAppend","clickSelector","$focusedElement","isFocusedElementCorrect","closest","msie","pointerEventName","down","off","addNamespace","on","_initKeyDownHandler","_keyDownHandler","_setRowsViewAttributes","_isNeedFocus","_isHiddenFocus","_updateFocus","document","getDocument","_documentClickHandler","$target","event","target","isCurrentRowsViewClick","_isEventInCurrentGrid","addWidgetPrefix","isEditorOverlay","_resetFocusedCell","isGridEmpty","getVisibleRows","_applyTabIndexToElement","handler","keyboard","_keyDownListener","dispose","callBase","unsubscribeVisibilityChange","optionChanged","args","handled","isRowFocusType","focusType","isCellFocusType","setRowFocusType","option","setCellFocusType","isEditing","needStopPropagation","originalEvent","isHandled","_processOnKeyDown","isDefaultPrevented","_updateFocusedCellPositionByTarget","keyName","_leftRightKeysHandler","ctrl","selectView","_upDownKeysHandler","_pageUpDownKeyHandler","_spaceKeyHandler","_ctrlAKeyHandler","_beginFastEditing","_tabKeyHandler","_enterKeyHandler","_escapeKeyHandler","_ctrlFKeyHandler","_f2KeyHandler","_isFastEditingAllowed","_isFastEditingStarted","stopPropagation","eventArgs","executeAction","ctrlKey","alt","altKey","shift","shiftKey","_closeEditCell","_this2","setTimeout","closeEditCell","rowIndex","getVisibleRowIndex","$event","getRow","directionCode","_getDirectionCodeByKey","isEditingNavigationMode","allowNavigate","_getNextCell","_arrowKeysHandlerFocusCell","preventDefault","isUpArrow","dataSource","_navigateNextCell","_isVirtualScrolling","isLoading","rowHeight","outerHeight","_scrollBy","pageIndex","pageCount","pagingEnabled","isPageUp","pageStep","scrollable","_container","height","$content","mode","isFocusedRowElement","_getElementType","isFocusedSelectionCell","startSelectionWithCheckboxes","changeItemSelection","control","selectAll","editingOptions","direction","isOriginalHandlerRequired","_isLastValidCell","_isFirstValidCell","eventTarget","focusedViewElement","_handleTabKeyOnMasterDetailCell","addClass","_editingCellTabHandler","_targetCellTabHandler","loseFocus","_getCellElementFromTarget","isEditingAllowed","elementType","_updateFocusedCellPosition","nextCellInfo","_getNextCellByTabKey","column","getVisibleColumns","getCellIndex","row","items","_getRowIndex","allowEditing","_isDataRow","rowType","allowUpdating","isNewRow","_focusCell","isHighlighted","editCell","columnIndex","_focusInteractiveElement","$lastInteractiveElement","_getInteractiveElement","getFirstValidCellInRow","_checkNewLineTransition","_fireFocusedCellChanging","cancel","$newCellElement","cellPosition","_getCellPosition","_fireFocusedRowChanging","rowIndexChanged","setFocusedColumnIndex","_getFocusedCell","getKeyByRowIndex","item","data","isContinuation","changeRowExpand","_processEnterKeyForDataCell","_getEnterKeyDirection","allowEditingOnEnterKey","_allowEditingOnEnterKey","_handleEnterKeyEditingCell","_startEditing","enterKeyDirection","isShift","isRowEditMode","_focusEditFormCell","saveEditData","bind","trigger","getEditMode","cancelEditData","searchTextEditor","getSearchTextEditor","focus","keyCode","_isCellValid","upDown","_fireFocusChangingEvents","_focus","isDeleting","which","fastEditingKey","String","fromCharCode","currentTarget","$parent","isEditingRow","isInteractiveElement","isRevertButton","isExpandCommandCell","_isInsideEditForm","_focusView","removeClass","_isMasterDetailCell","_clickTargetCellHandler","isCellEditMode","_isCellEditMode","resetFocusedRow","_resetFocusedRow","_allowRowUpdating","isInteractiveTarget","not","isEditor","command","isDisabled","setFocusedRowIndex","prevRowIndex","activeElementSelector","focusedRowEnabled","component","find","first","_focusElement","getFocusedView","rowsViewElement","_getRowsViewElement","$focusedView","_getFocusedViewByElement","view","$view","isLast","focusAndSelectElement","disableFocus","focusedView","$focusViewElement","$focusElement","removeAttr","one","relatedTarget","isRenderView","_hasSkipRow","_checkCellOverlapped","isCommandCell","cellOffset","offset","hasScrollable","isOverlapped","left","width","top","_getCell","_this$_focusedCellPos","position","setFocusedCellPosition","_applyColumnIndexBoundaries","renderFocusState","restoreFocusableElement","$rowElement","$rowsViewElement","rowIndexOffset","getRowIndexOffset","getTopVisibleItemIndex","newRowIndex","_getNewPositionByCode","code","visibleColumnsCount","_getVisibleColumnCount","_hasValidCellAfterPosition","_isLastRow","_hasValidCellBeforePosition","getVisibleColumnIndex","getFocusedColumnIndex","_isCellByPositionValid","totalItemsCount","isFirstValidCell","hasValidCells","checkingPosition","visibleColumnCount","nextColumnIndex","visibleRows","isLastRow","isClick","visibleColumns","editingController","isMasterDetailRow","isShowWhenGrouped","showWhenGrouped","isDataCell","isValidGroupSpaceColumn","groupIndex","parseInt","attr","rowItems","visibleRowIndex","getRowIndex","isCellEditing","isRowEditingInCurrentRow","isEditRow","_isLegacyNavigation","$cells","$result","i","eq","focusedCellPosition","includeCommandCells","inArray","newFocusedCellPosition","isLastCellOnDirection","_isCellInRow","_isAllowEditing","editRow","_startEditingCell","colIndex","deferred","_editingCellHandler","done","editorValue","$input","keyDownEvent","createEvent","type","keyPressEvent","inputEvent","timeout","mozilla","val","$widgetContainer","fireRowEvent","newColumnIndex","$cellElement","prevCellIndex","cellElement","prevColumnIndex","rows","columns","_fireFocusedCellChanged","dataController","localRowIndex","Math","min","isEditingCell","isEditCell","$newFocusedRow","prevFocusedRowIndex","loadingOperationTypes","rowElement","reload","paging","_fireFocusedRowChanged","focusedRowKey","focusController","focusedRowIndex","getFocusedRowIndexByKey","isElementInCurrentGrid","editMode","filter","last","tabIndex","getCell","style","display","scrollingMode","scrollHandler","scrollBy","$masterDetailCell","$masterDetailGrid","getWidgetContainerClass","_processNextCellInMasterDetail","$nextCell","$targetElement","children","_processCanceledEditCellPosition","isCanceled","module","exports","defaultOptions","useLegacyKeyboardNavigation","keyboardNavigation","enabled","enterKeyAction","editOnKeyPress","controllers","extenders","views","_rowClick","editRowIndex","getEditRowIndex","keyboardController","needTriggerPointerEventHandler","_triggerPointerDownEventHandler","apply","arguments","cellElements","getCellElements","updateFocusElementTabIndex","_updateFocusedCellTabIndex","oldFocusedView","cellElementsLength","renderDelayedTemplates","change","repaintChangesOnly","_renderCore","_editCellPrepared","editorInstance","_getEditorInstance","_handleEditingNavigationMode","forEach","originalKeyHandler","_supportedKeys","registerKeyHandler","isDropDownOpened","_input","noop","isDateBoxWithMask","NAME","$editor","getWidgetInstance","editing","addRow","parentKey","getFocusedCellInRow","keyboardNavigationController","$focusedCell","_processCanceledEditingCell","_this3","_keyboardNavigationController","result","_delayedInputFocus","_isEditingStart","_correctRowIndices","getRowIndexCorrection","editorFactory","focusedRowIndexCorrection","refocus","adaptiveColumns","_showHiddenCellsInView","_ref","viewName","isCommandColumn","each","_","_hideVisibleCellInView","_ref2"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.keyboard_navigation.js)\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\n\r\nfunction _typeof(obj) {\r\n    \"@babel/helpers - typeof\";\r\n    if (\"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator) {\r\n        _typeof = function(obj) {\r\n            return typeof obj\r\n        }\r\n    } else {\r\n        _typeof = function(obj) {\r\n            return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n        }\r\n    }\r\n    return _typeof(obj)\r\n}\r\nvar _renderer = require(\"../../core/renderer\");\r\nvar _renderer2 = _interopRequireDefault(_renderer);\r\nvar _dom_adapter = require(\"../../core/dom_adapter\");\r\nvar _dom_adapter2 = _interopRequireDefault(_dom_adapter);\r\nvar _events_engine = require(\"../../events/core/events_engine\");\r\nvar _events_engine2 = _interopRequireDefault(_events_engine);\r\nvar _uiGrid_core = require(\"./ui.grid_core.modules\");\r\nvar _uiGrid_core2 = _interopRequireDefault(_uiGrid_core);\r\nvar _uiGrid_core3 = require(\"./ui.grid_core.utils\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _selectors = require(\"../widget/selectors\");\r\nvar _utils = require(\"../../events/utils\");\r\nvar eventUtils = _interopRequireWildcard(_utils);\r\nvar _pointer = require(\"../../events/pointer\");\r\nvar _pointer2 = _interopRequireDefault(_pointer);\r\nvar _click = require(\"../../events/click\");\r\nvar _click2 = _interopRequireDefault(_click);\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _accessibility = require(\"../shared/accessibility\");\r\nvar accessibility = _interopRequireWildcard(_accessibility);\r\nvar _browser = require(\"../../core/utils/browser\");\r\nvar _browser2 = _interopRequireDefault(_browser);\r\nvar _short = require(\"../../events/short\");\r\nvar _devices = require(\"../../core/devices\");\r\nvar _devices2 = _interopRequireDefault(_devices);\r\n\r\nfunction _getRequireWildcardCache() {\r\n    if (\"function\" !== typeof WeakMap) {\r\n        return null\r\n    }\r\n    var cache = new WeakMap;\r\n    _getRequireWildcardCache = function() {\r\n        return cache\r\n    };\r\n    return cache\r\n}\r\n\r\nfunction _interopRequireWildcard(obj) {\r\n    if (obj && obj.__esModule) {\r\n        return obj\r\n    }\r\n    if (null === obj || \"object\" !== _typeof(obj) && \"function\" !== typeof obj) {\r\n        return {\r\n            \"default\": obj\r\n        }\r\n    }\r\n    var cache = _getRequireWildcardCache();\r\n    if (cache && cache.has(obj)) {\r\n        return cache.get(obj)\r\n    }\r\n    var newObj = {};\r\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\r\n            if (desc && (desc.get || desc.set)) {\r\n                Object.defineProperty(newObj, key, desc)\r\n            } else {\r\n                newObj[key] = obj[key]\r\n            }\r\n        }\r\n    }\r\n    newObj.default = obj;\r\n    if (cache) {\r\n        cache.set(obj, newObj)\r\n    }\r\n    return newObj\r\n}\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar ROWS_VIEW_CLASS = \"rowsview\";\r\nvar EDIT_FORM_CLASS = \"edit-form\";\r\nvar GROUP_FOOTER_CLASS = \"group-footer\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar DATA_ROW_CLASS = \"dx-data-row\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar HEADER_ROW_CLASS = \"dx-header-row\";\r\nvar EDIT_FORM_ITEM_CLASS = \"edit-form-item\";\r\nvar MASTER_DETAIL_ROW_CLASS = \"dx-master-detail-row\";\r\nvar FREESPACE_ROW_CLASS = \"dx-freespace-row\";\r\nvar VIRTUAL_ROW_CLASS = \"dx-virtual-row\";\r\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\r\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nvar EDIT_ROW_CLASS = \"dx-edit-row\";\r\nvar DROPDOWN_EDITOR_OVERLAY_CLASS = \"dx-dropdowneditor-overlay\";\r\nvar COMMAND_EXPAND_CLASS = \"dx-command-expand\";\r\nvar COMMAND_SELECT_CLASS = \"dx-command-select\";\r\nvar COMMAND_CELL_SELECTOR = \"[class^=dx-command]\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar DATEBOX_WIDGET_NAME = \"dxDateBox\";\r\nvar FOCUS_STATE_CLASS = \"dx-state-focused\";\r\nvar WIDGET_CLASS = \"dx-widget\";\r\nvar REVERT_BUTTON_CLASS = \"dx-revert-button\";\r\nvar FAST_EDITING_DELETE_KEY = \"delete\";\r\nvar INTERACTIVE_ELEMENTS_SELECTOR = \"input:not([type='hidden']), textarea, a, select, [tabindex]\";\r\nvar EDIT_MODE_ROW = \"row\";\r\nvar EDIT_MODE_FORM = \"form\";\r\nvar EDIT_MODE_BATCH = \"batch\";\r\nvar EDIT_MODE_CELL = \"cell\";\r\nvar FOCUS_TYPE_ROW = \"row\";\r\nvar FOCUS_TYPE_CELL = \"cell\";\r\nvar COLUMN_HEADERS_VIEW = \"columnHeadersView\";\r\n\r\nfunction isGroupRow($row) {\r\n    return $row && $row.hasClass(GROUP_ROW_CLASS)\r\n}\r\n\r\nfunction isDetailRow($row) {\r\n    return $row && $row.hasClass(MASTER_DETAIL_ROW_CLASS)\r\n}\r\n\r\nfunction isDataRow($row) {\r\n    return $row && !isGroupRow($row) && !isDetailRow($row)\r\n}\r\n\r\nfunction isNotFocusedRow($row) {\r\n    return !$row || $row.hasClass(FREESPACE_ROW_CLASS) || $row.hasClass(VIRTUAL_ROW_CLASS)\r\n}\r\n\r\nfunction isCellElement($element) {\r\n    return $element.length && \"TD\" === $element[0].tagName\r\n}\r\n\r\nfunction isEditorCell(that, $cell) {\r\n    return !that._isRowEditMode() && $cell && !$cell.hasClass(COMMAND_SELECT_CLASS) && $cell.hasClass(EDITOR_CELL_CLASS)\r\n}\r\n\r\nfunction isElementDefined($element) {\r\n    return (0, _type.isDefined)($element) && $element.length > 0\r\n}\r\n\r\nfunction isMobile() {\r\n    return \"desktop\" !== _devices2.default.current().deviceType\r\n}\r\n\r\nfunction isCellInHeaderRow($cell) {\r\n    return !!$cell.parent(\".\".concat(HEADER_ROW_CLASS)).length\r\n}\r\nvar KeyboardNavigationController = _uiGrid_core2.default.ViewController.inherit({\r\n    init: function() {\r\n        var that = this;\r\n        if (that.isKeyboardEnabled()) {\r\n            accessibility.subscribeVisibilityChange();\r\n            that._dataController = that.getController(\"data\");\r\n            that._selectionController = that.getController(\"selection\");\r\n            that._editingController = that.getController(\"editing\");\r\n            that._headerPanel = that.getView(\"headerPanel\");\r\n            that._columnsController = that.getController(\"columns\");\r\n            that._fastEditingStarted = false;\r\n            that._focusedCellPosition = {};\r\n            that._canceledCellPosition = null;\r\n            that.getController(\"editorFactory\").focused.add(function($element) {\r\n                that.setupFocusedView();\r\n                if (that._isNeedScroll) {\r\n                    if ($element.is(\":visible\") && that._focusedView && that._focusedView.getScrollable) {\r\n                        that._focusedView._scrollToElement($element);\r\n                        that._isNeedScroll = false\r\n                    }\r\n                }\r\n            });\r\n            that._initViewHandlers();\r\n            that._initDocumentHandlers();\r\n            that.createAction(\"onKeyDown\")\r\n        }\r\n    },\r\n    _initViewHandlers: function() {\r\n        var _this = this;\r\n        var pointerEventAction = this.createAction(this._pointerEventHandler);\r\n        var rowsView = this.getView(\"rowsView\");\r\n        rowsView.renderCompleted.add(function(e) {\r\n            var $rowsView = rowsView.element();\r\n            var isFullUpdate = !e || \"refresh\" === e.changeType;\r\n            var isFocusedViewCorrect = _this._focusedView && _this._focusedView.name === rowsView.name;\r\n            var needUpdateFocus = false;\r\n            var isAppend = e && (\"append\" === e.changeType || \"prepend\" === e.changeType);\r\n            var clickSelector = \".\".concat(ROW_CLASS, \" > td, .\").concat(ROW_CLASS);\r\n            var $focusedElement = (0, _renderer2.default)(\":focus\");\r\n            var isFocusedElementCorrect = !$focusedElement.length || $focusedElement.closest($rowsView).length || _browser2.default.msie && $focusedElement.is(\"body\");\r\n            var pointerEventName = !isMobile() ? _pointer2.default.down : _click2.default.name;\r\n            _events_engine2.default.off($rowsView, eventUtils.addNamespace(pointerEventName, \"dxDataGridKeyboardNavigation\"), pointerEventAction);\r\n            _events_engine2.default.on($rowsView, eventUtils.addNamespace(pointerEventName, \"dxDataGridKeyboardNavigation\"), clickSelector, pointerEventAction);\r\n            _this._initKeyDownHandler($rowsView, function(e) {\r\n                return _this._keyDownHandler(e)\r\n            });\r\n            _this._setRowsViewAttributes($rowsView);\r\n            if (isFocusedViewCorrect && isFocusedElementCorrect) {\r\n                needUpdateFocus = _this._isNeedFocus ? !isAppend : _this._isHiddenFocus && isFullUpdate;\r\n                needUpdateFocus && _this._updateFocus(true)\r\n            }\r\n        })\r\n    },\r\n    _initDocumentHandlers: function() {\r\n        var that = this;\r\n        var document = _dom_adapter2.default.getDocument();\r\n        that._documentClickHandler = that.createAction(function(e) {\r\n            var $target = (0, _renderer2.default)(e.event.target);\r\n            var isCurrentRowsViewClick = that._isEventInCurrentGrid(e.event) && $target.closest(\".\".concat(that.addWidgetPrefix(ROWS_VIEW_CLASS))).length;\r\n            var isEditorOverlay = $target.closest(\".\".concat(DROPDOWN_EDITOR_OVERLAY_CLASS)).length;\r\n            if (!isCurrentRowsViewClick && !isEditorOverlay) {\r\n                that._resetFocusedCell()\r\n            }\r\n        });\r\n        _events_engine2.default.on(document, eventUtils.addNamespace(_pointer2.default.down, \"dxDataGridKeyboardNavigation\"), that._documentClickHandler)\r\n    },\r\n    _setRowsViewAttributes: function($rowsView) {\r\n        var isGridEmpty = !this._dataController.getVisibleRows().length;\r\n        if (isGridEmpty) {\r\n            this._applyTabIndexToElement($rowsView)\r\n        }\r\n    },\r\n    _initKeyDownHandler: function(element, handler) {\r\n        _short.keyboard.off(this._keyDownListener);\r\n        this._keyDownListener = _short.keyboard.on(element, null, handler)\r\n    },\r\n    dispose: function() {\r\n        this.callBase();\r\n        this._focusedView = null;\r\n        _short.keyboard.off(this._keyDownListener);\r\n        _events_engine2.default.off(_dom_adapter2.default.getDocument(), eventUtils.addNamespace(_pointer2.default.down, \"dxDataGridKeyboardNavigation\"), this._documentClickHandler);\r\n        accessibility.unsubscribeVisibilityChange()\r\n    },\r\n    optionChanged: function(args) {\r\n        var that = this;\r\n        switch (args.name) {\r\n            case \"keyboardNavigation\":\r\n            case \"useLegacyKeyboardNavigation\":\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                that.callBase(args)\r\n        }\r\n    },\r\n    isRowFocusType: function() {\r\n        return this.focusType === FOCUS_TYPE_ROW\r\n    },\r\n    isCellFocusType: function() {\r\n        return this.focusType === FOCUS_TYPE_CELL\r\n    },\r\n    setRowFocusType: function() {\r\n        if (this.option(\"focusedRowEnabled\")) {\r\n            this.focusType = FOCUS_TYPE_ROW\r\n        }\r\n    },\r\n    setCellFocusType: function() {\r\n        this.focusType = FOCUS_TYPE_CELL\r\n    },\r\n    _keyDownHandler: function(e) {\r\n        var isEditing = this._editingController.isEditing();\r\n        var needStopPropagation = true;\r\n        var originalEvent = e.originalEvent;\r\n        var isHandled = this._processOnKeyDown(e);\r\n        if (originalEvent.isDefaultPrevented()) {\r\n            return\r\n        }\r\n        this._isNeedFocus = true;\r\n        this._isNeedScroll = true;\r\n        this._updateFocusedCellPositionByTarget(originalEvent.target);\r\n        if (!isHandled) {\r\n            switch (e.keyName) {\r\n                case \"leftArrow\":\r\n                case \"rightArrow\":\r\n                    this._leftRightKeysHandler(e, isEditing);\r\n                    break;\r\n                case \"upArrow\":\r\n                case \"downArrow\":\r\n                    if (e.ctrl) {\r\n                        accessibility.selectView(\"rowsView\", this, originalEvent)\r\n                    } else {\r\n                        this._upDownKeysHandler(e, isEditing)\r\n                    }\r\n                    break;\r\n                case \"pageUp\":\r\n                case \"pageDown\":\r\n                    this._pageUpDownKeyHandler(e);\r\n                    break;\r\n                case \"space\":\r\n                    this._spaceKeyHandler(e, isEditing);\r\n                    break;\r\n                case \"A\":\r\n                    if (e.ctrl) {\r\n                        this._ctrlAKeyHandler(e, isEditing)\r\n                    } else {\r\n                        this._beginFastEditing(e.originalEvent)\r\n                    }\r\n                    break;\r\n                case \"tab\":\r\n                    this._tabKeyHandler(e, isEditing);\r\n                    break;\r\n                case \"enter\":\r\n                    this._enterKeyHandler(e, isEditing);\r\n                    break;\r\n                case \"escape\":\r\n                    this._escapeKeyHandler(e, isEditing);\r\n                    break;\r\n                case \"F\":\r\n                    if (e.ctrl) {\r\n                        this._ctrlFKeyHandler(e)\r\n                    } else {\r\n                        this._beginFastEditing(e.originalEvent)\r\n                    }\r\n                    break;\r\n                case \"F2\":\r\n                    this._f2KeyHandler();\r\n                    break;\r\n                case \"del\":\r\n                case \"backspace\":\r\n                    if (this._isFastEditingAllowed() && !this._isFastEditingStarted()) {\r\n                        this._beginFastEditing(originalEvent, true)\r\n                    }\r\n                    break;\r\n                default:\r\n                    if (!this._beginFastEditing(originalEvent)) {\r\n                        this._isNeedFocus = false;\r\n                        this._isNeedScroll = false;\r\n                        needStopPropagation = false\r\n                    }\r\n            }\r\n            if (needStopPropagation) {\r\n                originalEvent.stopPropagation()\r\n            }\r\n        }\r\n    },\r\n    _processOnKeyDown: function(eventArgs) {\r\n        var originalEvent = eventArgs.originalEvent;\r\n        var args = {\r\n            handled: false,\r\n            event: originalEvent\r\n        };\r\n        this.executeAction(\"onKeyDown\", args);\r\n        eventArgs.ctrl = originalEvent.ctrlKey;\r\n        eventArgs.alt = originalEvent.altKey;\r\n        eventArgs.shift = originalEvent.shiftKey;\r\n        return !!args.handled\r\n    },\r\n    _closeEditCell: function() {\r\n        var _this2 = this;\r\n        setTimeout(function() {\r\n            _this2._editingController.closeEditCell()\r\n        })\r\n    },\r\n    _leftRightKeysHandler: function(eventArgs, isEditing) {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $event = eventArgs.originalEvent;\r\n        var $row = this._focusedView && this._focusedView.getRow(rowIndex);\r\n        var directionCode = this._getDirectionCodeByKey(eventArgs.keyName);\r\n        var isEditingNavigationMode = this._isFastEditingStarted();\r\n        var allowNavigate = (!isEditing || isEditingNavigationMode) && isDataRow($row);\r\n        if (allowNavigate) {\r\n            this.setCellFocusType();\r\n            isEditingNavigationMode && this._closeEditCell();\r\n            var $cell = this._getNextCell(directionCode);\r\n            if (isElementDefined($cell)) {\r\n                this._arrowKeysHandlerFocusCell($event, $cell)\r\n            }\r\n            $event && $event.preventDefault()\r\n        }\r\n    },\r\n    _upDownKeysHandler: function(eventArgs, isEditing) {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $row = this._focusedView && this._focusedView.getRow(rowIndex);\r\n        var $event = eventArgs.originalEvent;\r\n        var isUpArrow = \"upArrow\" === eventArgs.keyName;\r\n        var dataSource = this._dataController.dataSource();\r\n        var isEditingNavigationMode = this._isFastEditingStarted();\r\n        var allowNavigate = (!isEditing || isEditingNavigationMode) && $row && !isDetailRow($row);\r\n        if (allowNavigate) {\r\n            isEditingNavigationMode && this._closeEditCell();\r\n            if (!this._navigateNextCell($event, eventArgs.keyName)) {\r\n                if (this._isVirtualScrolling() && isUpArrow && dataSource && !dataSource.isLoading()) {\r\n                    var rowHeight = $row.outerHeight();\r\n                    rowIndex = this._focusedCellPosition.rowIndex - 1;\r\n                    this._scrollBy(-rowHeight, rowIndex, $event)\r\n                }\r\n            }\r\n            $event && $event.preventDefault()\r\n        }\r\n    },\r\n    _pageUpDownKeyHandler: function(eventArgs) {\r\n        var pageIndex = this._dataController.pageIndex();\r\n        var pageCount = this._dataController.pageCount();\r\n        var pagingEnabled = this.option(\"paging.enabled\");\r\n        var isPageUp = \"pageUp\" === eventArgs.keyName;\r\n        var pageStep = isPageUp ? -1 : 1;\r\n        var scrollable = this.getView(\"rowsView\").getScrollable();\r\n        if (pagingEnabled && !this._isVirtualScrolling()) {\r\n            if ((isPageUp ? pageIndex > 0 : pageIndex < pageCount - 1) && !this._isVirtualScrolling()) {\r\n                this._dataController.pageIndex(pageIndex + pageStep);\r\n                eventArgs.originalEvent.preventDefault()\r\n            }\r\n        } else {\r\n            if (scrollable && scrollable._container().height() < scrollable.$content().height()) {\r\n                this._scrollBy(scrollable._container().height() * pageStep);\r\n                eventArgs.originalEvent.preventDefault()\r\n            }\r\n        }\r\n    },\r\n    _spaceKeyHandler: function(eventArgs, isEditing) {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $target = (0, _renderer2.default)(eventArgs.originalEvent && eventArgs.originalEvent.target);\r\n        if (this.option(\"selection\") && \"none\" !== this.option(\"selection\").mode && !isEditing) {\r\n            var isFocusedRowElement = \"row\" === this._getElementType($target) && this.isRowFocusType() && isDataRow($target);\r\n            var isFocusedSelectionCell = $target.hasClass(COMMAND_SELECT_CLASS);\r\n            if (isFocusedSelectionCell && \"onClick\" === this.option(\"selection.showCheckBoxesMode\")) {\r\n                this._selectionController.startSelectionWithCheckboxes()\r\n            }\r\n            if (isFocusedRowElement || $target.parent().hasClass(DATA_ROW_CLASS) || $target.hasClass(this.addWidgetPrefix(ROWS_VIEW_CLASS))) {\r\n                this._selectionController.changeItemSelection(rowIndex, {\r\n                    shift: eventArgs.shift,\r\n                    control: eventArgs.ctrl\r\n                });\r\n                eventArgs.originalEvent.preventDefault()\r\n            }\r\n        } else {\r\n            this._beginFastEditing(eventArgs.originalEvent)\r\n        }\r\n    },\r\n    _ctrlAKeyHandler: function(eventArgs, isEditing) {\r\n        if (!isEditing && eventArgs.ctrl && !eventArgs.alt && \"multiple\" === this.option(\"selection.mode\") && this.option(\"selection.allowSelectAll\")) {\r\n            this._selectionController.selectAll();\r\n            eventArgs.originalEvent.preventDefault()\r\n        }\r\n    },\r\n    _tabKeyHandler: function(eventArgs, isEditing) {\r\n        var editingOptions = this.option(\"editing\");\r\n        var direction = eventArgs.shift ? \"previous\" : \"next\";\r\n        var isOriginalHandlerRequired = !eventArgs.shift && this._isLastValidCell(this._focusedCellPosition) || eventArgs.shift && this._isFirstValidCell(this._focusedCellPosition);\r\n        var eventTarget = eventArgs.originalEvent.target;\r\n        var focusedViewElement = this._focusedView && this._focusedView.element();\r\n        if (this._handleTabKeyOnMasterDetailCell(eventTarget, direction)) {\r\n            return\r\n        }(0, _renderer2.default)(focusedViewElement).addClass(FOCUS_STATE_CLASS);\r\n        if (editingOptions && eventTarget && !isOriginalHandlerRequired) {\r\n            if ((0, _renderer2.default)(eventTarget).hasClass(this.addWidgetPrefix(ROWS_VIEW_CLASS))) {\r\n                this._resetFocusedCell()\r\n            }\r\n            if (isEditing) {\r\n                if (!this._editingCellTabHandler(eventArgs, direction)) {\r\n                    return\r\n                }\r\n            } else {\r\n                if (this._targetCellTabHandler(eventArgs, direction)) {\r\n                    isOriginalHandlerRequired = true\r\n                }\r\n            }\r\n        }\r\n        if (isOriginalHandlerRequired) {\r\n            this.getController(\"editorFactory\").loseFocus();\r\n            if (this._editingController.isEditing() && !this._isRowEditMode()) {\r\n                this._resetFocusedCell();\r\n                this._closeEditCell()\r\n            }\r\n        } else {\r\n            eventArgs.originalEvent.preventDefault()\r\n        }\r\n    },\r\n    _editingCellTabHandler: function(eventArgs, direction) {\r\n        var eventTarget = eventArgs.originalEvent.target;\r\n        var $cell = this._getCellElementFromTarget(eventTarget);\r\n        var isEditingAllowed;\r\n        var $event = eventArgs.originalEvent;\r\n        var elementType = this._getElementType(eventTarget);\r\n        if ($cell.is(COMMAND_CELL_SELECTOR)) {\r\n            return !this._targetCellTabHandler(eventArgs, direction)\r\n        }\r\n        this._updateFocusedCellPosition($cell);\r\n        var nextCellInfo = this._getNextCellByTabKey($event, direction, elementType);\r\n        $cell = nextCellInfo.$cell;\r\n        if (!$cell || this._handleTabKeyOnMasterDetailCell($cell, direction)) {\r\n            return false\r\n        }\r\n        var column = this._columnsController.getVisibleColumns()[this.getView(\"rowsView\").getCellIndex($cell)];\r\n        var row = this._dataController.items()[this._getRowIndex($cell && $cell.parent())];\r\n        if (column.allowEditing) {\r\n            var _isDataRow = !row || \"data\" === row.rowType;\r\n            isEditingAllowed = this._editingController.allowUpdating({\r\n                row: row\r\n            }) ? _isDataRow : row && row.isNewRow\r\n        }\r\n        if (!isEditingAllowed) {\r\n            this._closeEditCell()\r\n        }\r\n        if (this._focusCell($cell, !nextCellInfo.isHighlighted)) {\r\n            if (!this._isRowEditMode() && isEditingAllowed) {\r\n                this._editingController.editCell(this.getVisibleRowIndex(), this._focusedCellPosition.columnIndex)\r\n            } else {\r\n                this._focusInteractiveElement($cell, eventArgs.shift)\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    _targetCellTabHandler: function(eventArgs, direction) {\r\n        var $event = eventArgs.originalEvent;\r\n        var eventTarget = $event.target;\r\n        var $cell = this._getCellElementFromTarget(eventTarget);\r\n        var $lastInteractiveElement = this._getInteractiveElement($cell, !eventArgs.shift);\r\n        var isOriginalHandlerRequired = false;\r\n        var elementType;\r\n        if (!isEditorCell(this, $cell) && $lastInteractiveElement.length && eventTarget !== $lastInteractiveElement.get(0)) {\r\n            isOriginalHandlerRequired = true\r\n        } else {\r\n            if (void 0 === this._focusedCellPosition.rowIndex && (0, _renderer2.default)(eventTarget).hasClass(ROW_CLASS)) {\r\n                this._updateFocusedCellPosition($cell)\r\n            }\r\n            elementType = this._getElementType(eventTarget);\r\n            if (this.isRowFocusType()) {\r\n                this.setCellFocusType();\r\n                if (\"row\" === elementType && isDataRow((0, _renderer2.default)(eventTarget))) {\r\n                    eventTarget = this.getFirstValidCellInRow((0, _renderer2.default)(eventTarget));\r\n                    elementType = this._getElementType(eventTarget)\r\n                }\r\n            }\r\n            var nextCellInfo = this._getNextCellByTabKey($event, direction, elementType);\r\n            $cell = nextCellInfo.$cell;\r\n            if (!$cell) {\r\n                return false\r\n            }\r\n            $cell = this._checkNewLineTransition($event, $cell);\r\n            if (!$cell) {\r\n                return false\r\n            }\r\n            this._focusCell($cell, !nextCellInfo.isHighlighted);\r\n            if (!isEditorCell(this, $cell)) {\r\n                this._focusInteractiveElement($cell, eventArgs.shift)\r\n            }\r\n        }\r\n        return isOriginalHandlerRequired\r\n    },\r\n    _getNextCellByTabKey: function($event, direction, elementType) {\r\n        var $cell = this._getNextCell(direction, elementType);\r\n        var args = $cell && this._fireFocusedCellChanging($event, $cell, true);\r\n        if (!args || args.cancel) {\r\n            return {}\r\n        }\r\n        if (args.$newCellElement) {\r\n            $cell = args.$newCellElement\r\n        }\r\n        return {\r\n            $cell: $cell,\r\n            isHighlighted: args.isHighlighted\r\n        }\r\n    },\r\n    _checkNewLineTransition: function($event, $cell) {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $row = $cell.parent();\r\n        if (rowIndex !== this._getRowIndex($row)) {\r\n            var cellPosition = this._getCellPosition($cell);\r\n            var args = this._fireFocusedRowChanging($event, $row);\r\n            if (args.cancel) {\r\n                return\r\n            }\r\n            if (args.rowIndexChanged) {\r\n                this.setFocusedColumnIndex(cellPosition.columnIndex);\r\n                $cell = this._getFocusedCell()\r\n            }\r\n        }\r\n        return $cell\r\n    },\r\n    _enterKeyHandler: function(eventArgs, isEditing) {\r\n        var $cell = this._getFocusedCell();\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $row = this._focusedView && this._focusedView.getRow(rowIndex);\r\n        if (this.option(\"grouping.allowCollapsing\") && isGroupRow($row) || this.option(\"masterDetail.enabled\") && $cell && $cell.hasClass(COMMAND_EXPAND_CLASS)) {\r\n            var key = this._dataController.getKeyByRowIndex(rowIndex);\r\n            var item = this._dataController.items()[rowIndex];\r\n            if (void 0 !== key && item && item.data && !item.data.isContinuation) {\r\n                this._dataController.changeRowExpand(key)\r\n            }\r\n        } else {\r\n            this._processEnterKeyForDataCell(eventArgs, isEditing)\r\n        }\r\n    },\r\n    _processEnterKeyForDataCell: function(eventArgs, isEditing) {\r\n        var direction = this._getEnterKeyDirection(eventArgs);\r\n        var allowEditingOnEnterKey = this._allowEditingOnEnterKey();\r\n        if (isEditing || !allowEditingOnEnterKey && direction) {\r\n            this._handleEnterKeyEditingCell(eventArgs.originalEvent);\r\n            if (\"next\" === direction || \"previous\" === direction) {\r\n                this._targetCellTabHandler(eventArgs, direction)\r\n            } else {\r\n                if (\"upArrow\" === direction || \"downArrow\" === direction) {\r\n                    this._navigateNextCell(eventArgs.originalEvent, direction)\r\n                }\r\n            }\r\n        } else {\r\n            if (allowEditingOnEnterKey) {\r\n                this._startEditing(eventArgs)\r\n            }\r\n        }\r\n    },\r\n    _getEnterKeyDirection: function(eventArgs) {\r\n        var enterKeyDirection = this.option(\"keyboardNavigation.enterKeyDirection\");\r\n        var isShift = eventArgs.shift;\r\n        if (\"column\" === enterKeyDirection) {\r\n            return isShift ? \"upArrow\" : \"downArrow\"\r\n        }\r\n        if (\"row\" === enterKeyDirection) {\r\n            return isShift ? \"previous\" : \"next\"\r\n        }\r\n    },\r\n    _handleEnterKeyEditingCell: function(event) {\r\n        var target = event.target;\r\n        var $cell = this._getCellElementFromTarget(target);\r\n        var isRowEditMode = this._isRowEditMode();\r\n        this._updateFocusedCellPosition($cell);\r\n        if (isRowEditMode) {\r\n            this._focusEditFormCell($cell);\r\n            setTimeout(this._editingController.saveEditData.bind(this._editingController))\r\n        } else {\r\n            _events_engine2.default.trigger((0, _renderer2.default)(target), \"change\");\r\n            this._closeEditCell();\r\n            event.preventDefault()\r\n        }\r\n    },\r\n    _escapeKeyHandler: function(eventArgs, isEditing) {\r\n        var $cell = this._getCellElementFromTarget(eventArgs.originalEvent.target);\r\n        if (isEditing) {\r\n            this._updateFocusedCellPosition($cell);\r\n            if (!this._isRowEditMode()) {\r\n                if (\"cell\" === this._editingController.getEditMode()) {\r\n                    this._editingController.cancelEditData()\r\n                } else {\r\n                    this._closeEditCell()\r\n                }\r\n            } else {\r\n                this._focusEditFormCell($cell);\r\n                this._editingController.cancelEditData()\r\n            }\r\n            eventArgs.originalEvent.preventDefault()\r\n        }\r\n    },\r\n    _ctrlFKeyHandler: function(eventArgs) {\r\n        if (this.option(\"searchPanel.visible\")) {\r\n            var searchTextEditor = this._headerPanel.getSearchTextEditor();\r\n            if (searchTextEditor) {\r\n                searchTextEditor.focus();\r\n                eventArgs.originalEvent.preventDefault()\r\n            }\r\n        }\r\n    },\r\n    _f2KeyHandler: function() {\r\n        var isEditing = this._editingController.isEditing();\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $row = this._focusedView && this._focusedView.getRow(rowIndex);\r\n        if (!isEditing && isDataRow($row)) {\r\n            this._startEditing()\r\n        }\r\n    },\r\n    _navigateNextCell: function($event, keyCode) {\r\n        var $cell = this._getNextCell(keyCode);\r\n        if ($cell && this._isCellValid($cell)) {\r\n            return this._arrowKeysHandlerFocusCell($event, $cell, true)\r\n        }\r\n        return false\r\n    },\r\n    _arrowKeysHandlerFocusCell: function($event, $cell, upDown) {\r\n        var args = this._fireFocusChangingEvents($event, $cell, upDown, true);\r\n        $cell = args.$newCellElement;\r\n        if (!args.cancel && this._isCellValid($cell)) {\r\n            this._focus($cell, !args.isHighlighted);\r\n            return true\r\n        }\r\n        return false\r\n    },\r\n    _beginFastEditing: function(originalEvent, isDeleting) {\r\n        if (!this._isFastEditingAllowed() || originalEvent.altKey || originalEvent.ctrlKey || this._editingController.isEditing()) {\r\n            return false\r\n        }\r\n        if (isDeleting) {\r\n            this._startEditing(originalEvent, FAST_EDITING_DELETE_KEY)\r\n        } else {\r\n            var key = originalEvent.key;\r\n            var keyCode = originalEvent.keyCode || originalEvent.which;\r\n            var fastEditingKey = key || keyCode && String.fromCharCode(keyCode);\r\n            if (fastEditingKey && (1 === fastEditingKey.length || fastEditingKey === FAST_EDITING_DELETE_KEY)) {\r\n                this._startEditing(originalEvent, fastEditingKey)\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    _pointerEventHandler: function(e) {\r\n        var event = e.event || e;\r\n        var $target = (0, _renderer2.default)(event.currentTarget);\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var focusedViewElement = rowsView && rowsView.element();\r\n        var $parent = $target.parent();\r\n        var isEditingRow = $parent.hasClass(EDIT_ROW_CLASS);\r\n        var isInteractiveElement = (0, _renderer2.default)(event.target).is(INTERACTIVE_ELEMENTS_SELECTOR);\r\n        var isRevertButton = !!(0, _renderer2.default)(event.target).closest(\".\".concat(REVERT_BUTTON_CLASS)).length;\r\n        var isExpandCommandCell = $target.hasClass(COMMAND_EXPAND_CLASS);\r\n        if (!isRevertButton && this._isEventInCurrentGrid(event) && (this._isCellValid($target, !isInteractiveElement) || isExpandCommandCell)) {\r\n            $target = this._isInsideEditForm($target) ? (0, _renderer2.default)(event.target) : $target;\r\n            this._focusView();\r\n            (0, _renderer2.default)(focusedViewElement).removeClass(FOCUS_STATE_CLASS);\r\n            if ($parent.hasClass(FREESPACE_ROW_CLASS)) {\r\n                this._updateFocusedCellPosition($target);\r\n                this._applyTabIndexToElement(this._focusedView.element());\r\n                this._focusedView.focus()\r\n            } else {\r\n                if (!this._isMasterDetailCell($target) && !isEditingRow) {\r\n                    this._clickTargetCellHandler(event, $target)\r\n                } else {\r\n                    this._updateFocusedCellPosition($target)\r\n                }\r\n            }\r\n        } else {\r\n            if ($target.is(\"td\")) {\r\n                this._resetFocusedCell()\r\n            }\r\n        }\r\n    },\r\n    _clickTargetCellHandler: function(event, $cell) {\r\n        var columnIndex = this.getView(\"rowsView\").getCellIndex($cell);\r\n        var column = this._columnsController.getVisibleColumns()[columnIndex];\r\n        var isCellEditMode = this._isCellEditMode();\r\n        this.setCellFocusType();\r\n        var args = this._fireFocusChangingEvents(event, $cell, true);\r\n        $cell = args.$newCellElement;\r\n        if (!args.cancel) {\r\n            if (args.resetFocusedRow) {\r\n                this.getController(\"focus\")._resetFocusedRow();\r\n                return\r\n            }\r\n            if (args.rowIndexChanged) {\r\n                $cell = this._getFocusedCell()\r\n            }\r\n            if (!args.isHighlighted && !isCellEditMode) {\r\n                this.setRowFocusType()\r\n            }\r\n            this._updateFocusedCellPosition($cell);\r\n            if (this._allowRowUpdating() && isCellEditMode && column && column.allowEditing) {\r\n                this._isNeedFocus = false;\r\n                this._isHiddenFocus = false\r\n            } else {\r\n                var $target = event && (0, _renderer2.default)(event.target).closest(INTERACTIVE_ELEMENTS_SELECTOR + \", td\");\r\n                var isInteractiveTarget = $target && $target.not($cell).is(INTERACTIVE_ELEMENTS_SELECTOR);\r\n                var isEditor = !!column && !column.command && $cell.hasClass(EDITOR_CELL_CLASS);\r\n                var isDisabled = !isEditor && (!args.isHighlighted || isInteractiveTarget);\r\n                this._focus($cell, isDisabled, isInteractiveTarget)\r\n            }\r\n        } else {\r\n            this.setRowFocusType();\r\n            this.setFocusedRowIndex(args.prevRowIndex);\r\n            $cell = this._getFocusedCell();\r\n            if (this._editingController.isEditing() && isCellEditMode) {\r\n                this._closeEditCell()\r\n            }\r\n        }\r\n    },\r\n    _allowRowUpdating: function() {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var row = this._dataController.items()[rowIndex];\r\n        return this._editingController.allowUpdating({\r\n            row: row\r\n        }, \"click\")\r\n    },\r\n    focus: function(element) {\r\n        var activeElementSelector;\r\n        var focusedRowEnabled = this.option(\"focusedRowEnabled\");\r\n        var isHighlighted = isCellElement((0, _renderer2.default)(element));\r\n        if (!element) {\r\n            activeElementSelector = \".dx-datagrid-rowsview .dx-row[tabindex]\";\r\n            if (!focusedRowEnabled) {\r\n                activeElementSelector += \", .dx-datagrid-rowsview .dx-row > td[tabindex]\"\r\n            }\r\n            element = this.component.$element().find(activeElementSelector).first()\r\n        }\r\n        element && this._focusElement((0, _renderer2.default)(element), isHighlighted)\r\n    },\r\n    getFocusedView: function() {\r\n        return this._focusedView\r\n    },\r\n    setupFocusedView: function() {\r\n        if (this.isKeyboardEnabled() && !(0, _type.isDefined)(this._focusedView)) {\r\n            this._focusView()\r\n        }\r\n    },\r\n    _focusElement: function($element, isHighlighted) {\r\n        var rowsViewElement = (0, _renderer2.default)(this._getRowsViewElement());\r\n        var $focusedView = $element.closest(rowsViewElement);\r\n        var isRowFocusType = this.isRowFocusType();\r\n        var args = {};\r\n        if (!$focusedView.length || isCellElement($element) && !this._isCellValid($element)) {\r\n            return\r\n        }\r\n        this._focusView();\r\n        this._isNeedFocus = true;\r\n        this._isNeedScroll = true;\r\n        if (isCellElement($element) || isGroupRow($element)) {\r\n            this.setCellFocusType();\r\n            args = this._fireFocusChangingEvents(null, $element, false, isHighlighted);\r\n            $element = args.$newCellElement;\r\n            if (isRowFocusType && !args.isHighlighted) {\r\n                this.setRowFocusType()\r\n            }\r\n        }\r\n        if (!args.cancel) {\r\n            this._focus($element, !args.isHighlighted);\r\n            this._focusInteractiveElement($element)\r\n        }\r\n    },\r\n    _getFocusedViewByElement: function($element) {\r\n        var view = this.getFocusedView();\r\n        var $view = view && (0, _renderer2.default)(view.element());\r\n        return $element && 0 !== $element.closest($view).length\r\n    },\r\n    _focusView: function() {\r\n        this._focusedView = this.getView(\"rowsView\")\r\n    },\r\n    _focusInteractiveElement: function($cell, isLast) {\r\n        if (!$cell) {\r\n            return\r\n        }\r\n        var $focusedElement = this._getInteractiveElement($cell, isLast);\r\n        (0, _uiGrid_core3.focusAndSelectElement)(this, $focusedElement)\r\n    },\r\n    _focus: function($cell, disableFocus, isInteractiveElement) {\r\n        var $row = $cell && !$cell.hasClass(ROW_CLASS) ? $cell.closest(\".\".concat(ROW_CLASS)) : $cell;\r\n        if ($row && isNotFocusedRow($row)) {\r\n            return\r\n        }\r\n        var focusedView = this._focusedView;\r\n        var $focusViewElement = focusedView && focusedView.element();\r\n        var $focusElement;\r\n        this._isHiddenFocus = disableFocus;\r\n        if (isGroupRow($row) || this.isRowFocusType()) {\r\n            $focusElement = $row;\r\n            if (focusedView) {\r\n                this.setFocusedRowIndex(this._getRowIndex($row))\r\n            }\r\n        } else {\r\n            if (isCellElement($cell)) {\r\n                $focusElement = $cell;\r\n                this._updateFocusedCellPosition($cell)\r\n            }\r\n        }\r\n        if ($focusElement) {\r\n            if ($focusViewElement) {\r\n                $focusViewElement.find(\".dx-row[tabIndex], .dx-row > td[tabindex]\").not($focusElement).removeClass(CELL_FOCUS_DISABLED_CLASS).removeAttr(\"tabIndex\")\r\n            }\r\n            _events_engine2.default.one($focusElement, \"blur\", function(e) {\r\n                if (e.relatedTarget) {\r\n                    $focusElement.removeClass(CELL_FOCUS_DISABLED_CLASS)\r\n                }\r\n            });\r\n            if (!isInteractiveElement) {\r\n                this._applyTabIndexToElement($focusElement);\r\n                _events_engine2.default.trigger($focusElement, \"focus\")\r\n            }\r\n            if (disableFocus) {\r\n                $focusElement.addClass(CELL_FOCUS_DISABLED_CLASS)\r\n            } else {\r\n                this.getController(\"editorFactory\").focus($focusElement)\r\n            }\r\n        }\r\n    },\r\n    _updateFocus: function(isRenderView) {\r\n        var that = this;\r\n        setTimeout(function() {\r\n            var $cell = that._getFocusedCell();\r\n            var isEditing = that.getController(\"editing\").isEditing();\r\n            if ($cell && !(that._isMasterDetailCell($cell) && !that._isRowEditMode())) {\r\n                if (that._hasSkipRow($cell.parent())) {\r\n                    var direction = that._focusedCellPosition && that._focusedCellPosition.rowIndex > 0 ? \"upArrow\" : \"downArrow\";\r\n                    $cell = that._getNextCell(direction)\r\n                }\r\n                if (isElementDefined($cell)) {\r\n                    if (isRenderView && !isEditing && that._checkCellOverlapped($cell)) {\r\n                        return\r\n                    }\r\n                    if ($cell.is(\"td\") || $cell.hasClass(that.addWidgetPrefix(EDIT_FORM_ITEM_CLASS))) {\r\n                        var isCommandCell = $cell.is(COMMAND_CELL_SELECTOR);\r\n                        if ((isRenderView || !isCommandCell) && that.getController(\"editorFactory\").focus()) {\r\n                            that._focus($cell)\r\n                        } else {\r\n                            if (that._isCellEditMode()) {\r\n                                that._focus($cell, that._isHiddenFocus)\r\n                            } else {\r\n                                if (that._isHiddenFocus) {\r\n                                    that._focus($cell, true)\r\n                                }\r\n                            }\r\n                        }\r\n                        if (isEditing) {\r\n                            that._focusInteractiveElement.bind(that)($cell)\r\n                        }\r\n                    } else {\r\n                        _events_engine2.default.trigger($cell, \"focus\")\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    },\r\n    _checkCellOverlapped: function($cell) {\r\n        var cellOffset = $cell.offset();\r\n        var hasScrollable = this.component.getScrollable && this.component.getScrollable();\r\n        var isOverlapped = false;\r\n        if (hasScrollable) {\r\n            if (cellOffset.left < 0) {\r\n                isOverlapped = $cell.width() + cellOffset.left <= 0\r\n            } else {\r\n                if (cellOffset.top < 0) {\r\n                    isOverlapped = $cell.height() + cellOffset.top <= 0\r\n                }\r\n            }\r\n        }\r\n        return isOverlapped\r\n    },\r\n    _getFocusedCell: function() {\r\n        return (0, _renderer2.default)(this._getCell(this._focusedCellPosition))\r\n    },\r\n    _updateFocusedCellPositionByTarget: function(target) {\r\n        var _this$_focusedCellPos;\r\n        var elementType = this._getElementType(target);\r\n        if (\"row\" === elementType && (0, _type.isDefined)(null === (_this$_focusedCellPos = this._focusedCellPosition) || void 0 === _this$_focusedCellPos ? void 0 : _this$_focusedCellPos.columnIndex)) {\r\n            var $row = (0, _renderer2.default)(target);\r\n            this._focusedView && isGroupRow($row) && this.setFocusedRowIndex(this._getRowIndex($row))\r\n        } else {\r\n            this._updateFocusedCellPosition(this._getCellElementFromTarget(target))\r\n        }\r\n    },\r\n    _updateFocusedCellPosition: function($cell, direction) {\r\n        var position = this._getCellPosition($cell, direction);\r\n        if (position) {\r\n            if (!$cell.length || position.rowIndex >= 0 && position.columnIndex >= 0) {\r\n                this.setFocusedCellPosition(position.rowIndex, position.columnIndex)\r\n            }\r\n        }\r\n        return position\r\n    },\r\n    _getCellPosition: function($cell, direction) {\r\n        var that = this;\r\n        var columnIndex;\r\n        var $row = isElementDefined($cell) && $cell.closest(\"tr\");\r\n        var rowsView = this.getView(\"rowsView\");\r\n        if (isElementDefined($row)) {\r\n            var rowIndex = that._getRowIndex($row);\r\n            columnIndex = rowsView.getCellIndex($cell, rowIndex);\r\n            if (direction) {\r\n                columnIndex = \"previous\" === direction ? columnIndex - 1 : columnIndex + 1;\r\n                columnIndex = that._applyColumnIndexBoundaries(columnIndex)\r\n            }\r\n            return {\r\n                rowIndex: rowIndex,\r\n                columnIndex: columnIndex\r\n            }\r\n        }\r\n    },\r\n    _focusCell: function($cell, isDisabled) {\r\n        if (this._isCellValid($cell)) {\r\n            this._focus($cell, isDisabled);\r\n            return true\r\n        }\r\n    },\r\n    _focusEditFormCell: function($cell) {\r\n        if ($cell.hasClass(MASTER_DETAIL_CELL_CLASS)) {\r\n            this.getController(\"editorFactory\").focus($cell, true)\r\n        }\r\n    },\r\n    _resetFocusedCell: function() {\r\n        var that = this;\r\n        var $cell = that._getFocusedCell();\r\n        $cell && $cell.removeAttr(\"tabIndex\");\r\n        that._focusedView && that._focusedView.renderFocusState && that._focusedView.renderFocusState();\r\n        that._isNeedFocus = false;\r\n        that._isNeedScroll = false;\r\n        that._focusedCellPosition = {}\r\n    },\r\n    restoreFocusableElement: function(rowIndex, $event) {\r\n        var that = this;\r\n        var args;\r\n        var $rowElement;\r\n        var isUpArrow = (0, _type.isDefined)(rowIndex);\r\n        var rowsView = that.getView(\"rowsView\");\r\n        var $rowsViewElement = rowsView.element();\r\n        var columnIndex = that._focusedCellPosition.columnIndex;\r\n        var rowIndexOffset = that._dataController.getRowIndexOffset();\r\n        rowIndex = isUpArrow ? rowIndex : rowsView.getTopVisibleItemIndex() + rowIndexOffset;\r\n        if (!isUpArrow) {\r\n            that.getController(\"editorFactory\").loseFocus();\r\n            that._applyTabIndexToElement($rowsViewElement);\r\n            _events_engine2.default.trigger($rowsViewElement, \"focus\")\r\n        } else {\r\n            $rowElement = rowsView.getRow(rowIndex - rowIndexOffset);\r\n            args = that._fireFocusedRowChanging($event, $rowElement);\r\n            if (!args.cancel && args.rowIndexChanged) {\r\n                rowIndex = args.newRowIndex\r\n            }\r\n        }\r\n        if (!isUpArrow || !args.cancel) {\r\n            that.setFocusedCellPosition(rowIndex, columnIndex)\r\n        }\r\n        isUpArrow && that._updateFocus()\r\n    },\r\n    _getNewPositionByCode: function(cellPosition, elementType, code) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var rowIndex = cellPosition.rowIndex;\r\n        var visibleColumnsCount;\r\n        if (void 0 === cellPosition.rowIndex && \"next\" === code) {\r\n            return {\r\n                columnIndex: 0,\r\n                rowIndex: 0\r\n            }\r\n        }\r\n        switch (code) {\r\n            case \"nextInRow\":\r\n            case \"next\":\r\n                visibleColumnsCount = this._getVisibleColumnCount();\r\n                if (columnIndex < visibleColumnsCount - 1 && \"row\" !== elementType && this._hasValidCellAfterPosition({\r\n                        columnIndex: columnIndex,\r\n                        rowIndex: rowIndex\r\n                    })) {\r\n                    columnIndex++\r\n                } else {\r\n                    if (!this._isLastRow(rowIndex) && \"next\" === code) {\r\n                        columnIndex = 0;\r\n                        rowIndex++\r\n                    }\r\n                }\r\n                break;\r\n            case \"previousInRow\":\r\n            case \"previous\":\r\n                if (columnIndex > 0 && \"row\" !== elementType && this._hasValidCellBeforePosition({\r\n                        columnIndex: columnIndex,\r\n                        rowIndex: rowIndex\r\n                    })) {\r\n                    columnIndex--\r\n                } else {\r\n                    if (rowIndex > 0 && \"previous\" === code) {\r\n                        rowIndex--;\r\n                        visibleColumnsCount = this._getVisibleColumnCount();\r\n                        columnIndex = visibleColumnsCount - 1\r\n                    }\r\n                }\r\n                break;\r\n            case \"upArrow\":\r\n                rowIndex = rowIndex > 0 ? rowIndex - 1 : rowIndex;\r\n                break;\r\n            case \"downArrow\":\r\n                rowIndex = !this._isLastRow(rowIndex) ? rowIndex + 1 : rowIndex\r\n        }\r\n        return {\r\n            columnIndex: columnIndex,\r\n            rowIndex: rowIndex\r\n        }\r\n    },\r\n    setFocusedCellPosition: function(rowIndex, columnIndex) {\r\n        this.setFocusedRowIndex(rowIndex);\r\n        this.setFocusedColumnIndex(columnIndex)\r\n    },\r\n    setFocusedRowIndex: function(rowIndex) {\r\n        if (!this._focusedCellPosition) {\r\n            this._focusedCellPosition = {}\r\n        }\r\n        this._focusedCellPosition.rowIndex = rowIndex\r\n    },\r\n    setFocusedColumnIndex: function(columnIndex) {\r\n        if (!this._focusedCellPosition) {\r\n            this._focusedCellPosition = {}\r\n        }\r\n        this._focusedCellPosition.columnIndex = columnIndex\r\n    },\r\n    getVisibleRowIndex: function() {\r\n        if (this._focusedCellPosition) {\r\n            if (!this._focusedCellPosition.rowIndex) {\r\n                return this._focusedCellPosition.rowIndex\r\n            }\r\n            return this._focusedCellPosition.rowIndex - this._dataController.getRowIndexOffset()\r\n        }\r\n        return null\r\n    },\r\n    getVisibleColumnIndex: function() {\r\n        if (this._focusedCellPosition) {\r\n            return (0, _type.isDefined)(this._focusedCellPosition.columnIndex) ? this._focusedCellPosition.columnIndex : -1\r\n        }\r\n        return -1\r\n    },\r\n    getFocusedColumnIndex: function() {\r\n        return this._focusedCellPosition ? this._focusedCellPosition.columnIndex : null\r\n    },\r\n    _applyColumnIndexBoundaries: function(columnIndex) {\r\n        var visibleColumnsCount = this._getVisibleColumnCount();\r\n        if (columnIndex < 0) {\r\n            columnIndex = 0\r\n        } else {\r\n            if (columnIndex >= visibleColumnsCount) {\r\n                columnIndex = visibleColumnsCount - 1\r\n            }\r\n        }\r\n        return columnIndex\r\n    },\r\n    _isCellByPositionValid: function(cellPosition) {\r\n        var $cell = (0, _renderer2.default)(this._getCell(cellPosition));\r\n        return this._isCellValid($cell)\r\n    },\r\n    _isLastRow: function(rowIndex) {\r\n        if (this._isVirtualScrolling()) {\r\n            return rowIndex >= this._dataController.totalItemsCount() - 1\r\n        }\r\n        return rowIndex === this.getController(\"data\").items().length - 1\r\n    },\r\n    _isFirstValidCell: function(cellPosition) {\r\n        var isFirstValidCell = false;\r\n        if (0 === cellPosition.rowIndex && cellPosition.columnIndex >= 0) {\r\n            isFirstValidCell = isFirstValidCell || !this._hasValidCellBeforePosition(cellPosition)\r\n        }\r\n        return isFirstValidCell\r\n    },\r\n    _hasValidCellBeforePosition: function(cellPosition) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var hasValidCells = false;\r\n        while (columnIndex > 0 && !hasValidCells) {\r\n            var checkingPosition = {\r\n                columnIndex: --columnIndex,\r\n                rowIndex: cellPosition.rowIndex\r\n            };\r\n            hasValidCells = this._isCellByPositionValid(checkingPosition)\r\n        }\r\n        return hasValidCells\r\n    },\r\n    _hasValidCellAfterPosition: function(cellPosition) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var hasValidCells = false;\r\n        var visibleColumnCount = this._getVisibleColumnCount();\r\n        while (columnIndex < visibleColumnCount - 1 && !hasValidCells) {\r\n            var checkingPosition = {\r\n                columnIndex: ++columnIndex,\r\n                rowIndex: cellPosition.rowIndex\r\n            };\r\n            hasValidCells = this._isCellByPositionValid(checkingPosition)\r\n        }\r\n        return hasValidCells\r\n    },\r\n    _isLastValidCell: function(cellPosition) {\r\n        var nextColumnIndex = cellPosition.columnIndex >= 0 ? cellPosition.columnIndex + 1 : 0;\r\n        var rowIndex = cellPosition.rowIndex;\r\n        var checkingPosition = {\r\n            columnIndex: nextColumnIndex,\r\n            rowIndex: rowIndex\r\n        };\r\n        var visibleRows = this.getController(\"data\").getVisibleRows();\r\n        var row = visibleRows && visibleRows[rowIndex];\r\n        var isLastRow = this._isLastRow(rowIndex);\r\n        if (!isLastRow) {\r\n            return false\r\n        }\r\n        if (row && \"group\" === row.rowType && cellPosition.columnIndex > 0) {\r\n            return true\r\n        }\r\n        if (cellPosition.columnIndex === this._getVisibleColumnCount() - 1) {\r\n            return true\r\n        }\r\n        if (this._isCellByPositionValid(checkingPosition)) {\r\n            return false\r\n        }\r\n        return this._isLastValidCell(checkingPosition)\r\n    },\r\n    _isCellValid: function($cell, isClick) {\r\n        if (isElementDefined($cell) && this._columnsController) {\r\n            var rowsView = this.getView(\"rowsView\");\r\n            var $row = $cell.parent();\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            var columnIndex = rowsView.getCellIndex($cell);\r\n            var column = visibleColumns[columnIndex];\r\n            var visibleColumnCount = this._getVisibleColumnCount();\r\n            var editingController = this._editingController;\r\n            var isMasterDetailRow = isDetailRow($row);\r\n            var isShowWhenGrouped = column && column.showWhenGrouped;\r\n            var isDataCell = column && !$cell.hasClass(COMMAND_EXPAND_CLASS) && isDataRow($row);\r\n            var isValidGroupSpaceColumn = function() {\r\n                return !isMasterDetailRow && column && (!(0, _type.isDefined)(column.groupIndex) || isShowWhenGrouped && isDataCell) || parseInt($cell.attr(\"colspan\")) > 1\r\n            };\r\n            if (this._isMasterDetailCell($cell)) {\r\n                return true\r\n            }\r\n            if (visibleColumnCount > columnIndex && isValidGroupSpaceColumn()) {\r\n                var rowItems = this._dataController.items();\r\n                var visibleRowIndex = rowsView.getRowIndex($row);\r\n                var row = rowItems[visibleRowIndex];\r\n                var isCellEditing = editingController && this._isCellEditMode() && editingController.isEditing();\r\n                var isRowEditingInCurrentRow = editingController && editingController.isEditRow(visibleRowIndex);\r\n                var isEditing = isRowEditingInCurrentRow || isCellEditing;\r\n                if (column.command) {\r\n                    if (this._isLegacyNavigation()) {\r\n                        return !isEditing && \"expand\" === column.command\r\n                    }\r\n                    if (isCellEditing) {\r\n                        return !column.command\r\n                    }\r\n                    if (isRowEditingInCurrentRow) {\r\n                        return \"select\" !== column.command\r\n                    }\r\n                    return !isEditing\r\n                }\r\n                if (isCellEditing && row && \"data\" !== row.rowType) {\r\n                    return false\r\n                }\r\n                return !isEditing || column.allowEditing || isClick\r\n            }\r\n        }\r\n    },\r\n    getFirstValidCellInRow: function($row, columnIndex) {\r\n        var that = this;\r\n        var $cells = $row.find(\"> td\");\r\n        var $cell;\r\n        var $result;\r\n        columnIndex = columnIndex || 0;\r\n        for (var i = columnIndex; i < $cells.length; ++i) {\r\n            $cell = $cells.eq(i);\r\n            if (that._isCellValid($cell)) {\r\n                $result = $cell;\r\n                break\r\n            }\r\n        }\r\n        return $result\r\n    },\r\n    _getNextCell: function(keyCode, elementType, cellPosition) {\r\n        var focusedCellPosition = cellPosition || this._focusedCellPosition;\r\n        var isRowFocusType = this.isRowFocusType();\r\n        var includeCommandCells = isRowFocusType || (0, _array.inArray)(keyCode, [\"next\", \"previous\"]) > -1;\r\n        var $cell;\r\n        var $row;\r\n        if (this._focusedView && focusedCellPosition) {\r\n            var newFocusedCellPosition = this._getNewPositionByCode(focusedCellPosition, elementType, keyCode);\r\n            $cell = (0, _renderer2.default)(this._getCell(newFocusedCellPosition));\r\n            var isLastCellOnDirection = \"previous\" === keyCode ? this._isFirstValidCell(newFocusedCellPosition) : this._isLastValidCell(newFocusedCellPosition);\r\n            if (isElementDefined($cell) && !this._isCellValid($cell) && this._isCellInRow(newFocusedCellPosition, includeCommandCells) && !isLastCellOnDirection) {\r\n                if (isRowFocusType) {\r\n                    $cell = this.getFirstValidCellInRow($cell.parent(), newFocusedCellPosition.columnIndex)\r\n                } else {\r\n                    $cell = this._getNextCell(keyCode, \"cell\", newFocusedCellPosition)\r\n                }\r\n            }\r\n            $row = isElementDefined($cell) && $cell.parent();\r\n            if (this._hasSkipRow($row)) {\r\n                var rowIndex = this._getRowIndex($row);\r\n                if (!this._isLastRow(rowIndex)) {\r\n                    $cell = this._getNextCell(keyCode, \"row\", {\r\n                        columnIndex: focusedCellPosition.columnIndex,\r\n                        rowIndex: rowIndex\r\n                    })\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n            return isElementDefined($cell) ? $cell : null\r\n        }\r\n        return null\r\n    },\r\n    _startEditing: function(eventArgs, fastEditingKey) {\r\n        var focusedCellPosition = this._focusedCellPosition;\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var row = this._dataController.items()[rowIndex];\r\n        var column = this._columnsController.getVisibleColumns()[focusedCellPosition.columnIndex];\r\n        if (this._isAllowEditing(row, column)) {\r\n            if (this._isRowEditMode()) {\r\n                this._editingController.editRow(rowIndex)\r\n            } else {\r\n                if (focusedCellPosition) {\r\n                    this._startEditingCell(eventArgs, fastEditingKey)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _isAllowEditing: function(row, column) {\r\n        return this.getController(\"editing\").allowUpdating({\r\n            row: row\r\n        }) && column && column.allowEditing\r\n    },\r\n    _startEditingCell: function(eventArgs, fastEditingKey) {\r\n        var that = this;\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var colIndex = this._focusedCellPosition.columnIndex;\r\n        this._fastEditingStarted = (0, _type.isDefined)(fastEditingKey);\r\n        var deferred = this._editingController.editCell(rowIndex, colIndex);\r\n        if (this._isFastEditingStarted()) {\r\n            if (true === deferred) {\r\n                that._editingCellHandler(eventArgs, fastEditingKey)\r\n            } else {\r\n                if (deferred && deferred.done) {\r\n                    var editorValue = fastEditingKey !== FAST_EDITING_DELETE_KEY ? fastEditingKey : \"\";\r\n                    deferred.done(function() {\r\n                        return that._editingCellHandler(eventArgs, editorValue)\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _editingCellHandler: function(eventArgs, editorValue) {\r\n        var $input = this._getFocusedCell().find(\".dx-texteditor-input\").eq(0);\r\n        var keyDownEvent = eventUtils.createEvent(eventArgs, {\r\n            type: \"keydown\",\r\n            target: $input.get(0)\r\n        });\r\n        var keyPressEvent = eventUtils.createEvent(eventArgs, {\r\n            type: \"keypress\",\r\n            target: $input.get(0)\r\n        });\r\n        var inputEvent = eventUtils.createEvent(eventArgs, {\r\n            type: \"input\",\r\n            target: $input.get(0)\r\n        });\r\n        _events_engine2.default.trigger($input, keyDownEvent);\r\n        if (!keyDownEvent.isDefaultPrevented()) {\r\n            _events_engine2.default.trigger($input, keyPressEvent);\r\n            if (!keyPressEvent.isDefaultPrevented()) {\r\n                var timeout = _browser2.default.mozilla ? 25 : 0;\r\n                setTimeout(function() {\r\n                    $input.val(editorValue);\r\n                    var $widgetContainer = $input.closest(\".\".concat(WIDGET_CLASS));\r\n                    _events_engine2.default.off($widgetContainer, \"focusout\");\r\n                    _events_engine2.default.one($widgetContainer, \"focusout\", function() {\r\n                        _events_engine2.default.trigger($input, \"change\")\r\n                    });\r\n                    _events_engine2.default.trigger($input, inputEvent)\r\n                }, timeout)\r\n            }\r\n        }\r\n    },\r\n    _fireFocusChangingEvents: function($event, $cell, fireRowEvent, isHighlighted) {\r\n        var args = {};\r\n        var cellPosition = this._getCellPosition($cell) || {};\r\n        if (this.isCellFocusType()) {\r\n            args = this._fireFocusedCellChanging($event, $cell, isHighlighted);\r\n            if (!args.cancel) {\r\n                cellPosition.columnIndex = args.newColumnIndex;\r\n                cellPosition.rowIndex = args.newRowIndex;\r\n                isHighlighted = args.isHighlighted;\r\n                $cell = (0, _renderer2.default)(this._getCell(cellPosition))\r\n            }\r\n        }\r\n        if (!args.cancel && fireRowEvent && $cell) {\r\n            args = this._fireFocusedRowChanging($event, $cell.parent());\r\n            if (!args.cancel) {\r\n                cellPosition.rowIndex = args.newRowIndex;\r\n                args.isHighlighted = isHighlighted\r\n            }\r\n        }\r\n        args.$newCellElement = (0, _renderer2.default)(this._getCell(cellPosition));\r\n        if (!args.$newCellElement.length) {\r\n            args.$newCellElement = $cell\r\n        }\r\n        return args\r\n    },\r\n    _fireFocusedCellChanging: function($event, $cellElement, isHighlighted) {\r\n        var that = this;\r\n        var prevCellIndex = that.option(\"focusedColumnIndex\");\r\n        var prevRowIndex = that.option(\"focusedRowIndex\");\r\n        var cellPosition = that._getCellPosition($cellElement);\r\n        var columnIndex = cellPosition ? cellPosition.columnIndex : -1;\r\n        var rowIndex = cellPosition ? cellPosition.rowIndex : -1;\r\n        var args = {\r\n            cellElement: $cellElement,\r\n            prevColumnIndex: prevCellIndex,\r\n            prevRowIndex: prevRowIndex,\r\n            newColumnIndex: columnIndex,\r\n            newRowIndex: rowIndex,\r\n            rows: that.getController(\"data\").getVisibleRows(),\r\n            columns: that.getController(\"columns\").getVisibleColumns(),\r\n            event: $event,\r\n            isHighlighted: isHighlighted || false,\r\n            cancel: false\r\n        };\r\n        this._canceledCellPosition = null;\r\n        that.executeAction(\"onFocusedCellChanging\", args);\r\n        if (args.newColumnIndex !== columnIndex || args.newRowIndex !== rowIndex) {\r\n            args.$newCellElement = (0, _renderer2.default)(this._getCell({\r\n                columnIndex: args.newColumnIndex,\r\n                rowIndex: args.newRowIndex\r\n            }))\r\n        }\r\n        if (args.cancel) {\r\n            this._canceledCellPosition = {\r\n                rowIndex: rowIndex,\r\n                columnIndex: columnIndex\r\n            }\r\n        }\r\n        return args\r\n    },\r\n    _fireFocusedCellChanged: function($cellElement, prevCellIndex, prevRowIndex) {\r\n        var that = this;\r\n        var dataController = that.getController(\"data\");\r\n        var columnIndex = that.getView(\"rowsView\").getCellIndex($cellElement);\r\n        var rowIndex = this._getRowIndex($cellElement && $cellElement.parent());\r\n        var localRowIndex = Math.min(rowIndex - dataController.getRowIndexOffset(), dataController.items().length - 1);\r\n        var isEditingCell = that.getController(\"editing\").isEditCell(localRowIndex, columnIndex);\r\n        var row = dataController.items()[localRowIndex];\r\n        if (!isEditingCell && (prevCellIndex !== columnIndex || prevRowIndex !== rowIndex)) {\r\n            dataController = that.getController(\"data\");\r\n            that.executeAction(\"onFocusedCellChanged\", {\r\n                cellElement: $cellElement,\r\n                columnIndex: columnIndex,\r\n                rowIndex: rowIndex,\r\n                row: row,\r\n                column: that.getController(\"columns\").getVisibleColumns()[columnIndex]\r\n            })\r\n        }\r\n    },\r\n    _fireFocusedRowChanging: function(eventArgs, $newFocusedRow) {\r\n        var newRowIndex = this._getRowIndex($newFocusedRow);\r\n        var dataController = this.getController(\"data\");\r\n        var prevFocusedRowIndex = this.option(\"focusedRowIndex\");\r\n        var loadingOperationTypes = dataController.loadingOperationTypes();\r\n        var args = {\r\n            rowElement: $newFocusedRow,\r\n            prevRowIndex: prevFocusedRowIndex,\r\n            newRowIndex: newRowIndex,\r\n            event: eventArgs,\r\n            rows: this.getController(\"data\").getVisibleRows(),\r\n            cancel: false\r\n        };\r\n        if (!dataController || dataController.isLoading() && (loadingOperationTypes.reload || loadingOperationTypes.paging)) {\r\n            args.cancel = true;\r\n            return args\r\n        }\r\n        if (this.option(\"focusedRowEnabled\")) {\r\n            this.executeAction(\"onFocusedRowChanging\", args);\r\n            if (!args.cancel && args.newRowIndex !== newRowIndex) {\r\n                args.resetFocusedRow = args.newRowIndex < 0;\r\n                if (!args.resetFocusedRow) {\r\n                    this.setFocusedRowIndex(args.newRowIndex)\r\n                }\r\n                args.rowIndexChanged = true\r\n            }\r\n        }\r\n        return args\r\n    },\r\n    _fireFocusedRowChanged: function($rowElement) {\r\n        var row;\r\n        var focusedRowKey = this.option(\"focusedRowKey\");\r\n        var focusController = this.getController(\"focus\");\r\n        var focusedRowIndex = null === focusController || void 0 === focusController ? void 0 : focusController.getFocusedRowIndexByKey(focusedRowKey);\r\n        if (this.option(\"focusedRowEnabled\")) {\r\n            if (focusedRowIndex >= 0) {\r\n                var dataController = this.getController(\"data\");\r\n                row = focusedRowIndex >= 0 && dataController.getVisibleRows()[focusedRowIndex - dataController.getRowIndexOffset()]\r\n            }\r\n            this.executeAction(\"onFocusedRowChanged\", {\r\n                rowElement: $rowElement,\r\n                rowIndex: focusedRowIndex,\r\n                row: row\r\n            })\r\n        }\r\n    },\r\n    _isEventInCurrentGrid: function(event) {\r\n        return (0, _uiGrid_core3.isElementInCurrentGrid)(this, (0, _renderer2.default)(event.target))\r\n    },\r\n    _isRowEditMode: function() {\r\n        var editMode = this.getController(\"editing\").getEditMode();\r\n        return editMode === EDIT_MODE_ROW || editMode === EDIT_MODE_FORM\r\n    },\r\n    _isCellEditMode: function() {\r\n        var editMode = this.getController(\"editing\").getEditMode();\r\n        return editMode === EDIT_MODE_CELL || editMode === EDIT_MODE_BATCH\r\n    },\r\n    _isFastEditingAllowed: function() {\r\n        return this._isCellEditMode() && this.option(\"keyboardNavigation.editOnKeyPress\")\r\n    },\r\n    _getInteractiveElement: function($cell, isLast) {\r\n        var $focusedElement = $cell.find(INTERACTIVE_ELEMENTS_SELECTOR).filter(\":visible\");\r\n        return isLast ? $focusedElement.last() : $focusedElement.first()\r\n    },\r\n    _applyTabIndexToElement: function($element) {\r\n        var tabIndex = this.option(\"tabIndex\") || 0;\r\n        $element.attr(\"tabindex\", (0, _type.isDefined)(tabIndex) ? tabIndex : 0)\r\n    },\r\n    _getCell: function(cellPosition) {\r\n        if (this._focusedView && this._dataController && cellPosition) {\r\n            return this._focusedView.getCell({\r\n                rowIndex: cellPosition.rowIndex - this._dataController.getRowIndexOffset(),\r\n                columnIndex: cellPosition.columnIndex\r\n            })\r\n        }\r\n    },\r\n    _getRowIndex: function($row) {\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var rowIndex = rowsView.getRowIndex($row);\r\n        if (rowIndex >= 0) {\r\n            rowIndex += this.getController(\"data\").getRowIndexOffset()\r\n        }\r\n        return rowIndex\r\n    },\r\n    _hasSkipRow: function($row) {\r\n        var row = $row && $row.get(0);\r\n        return row && (\"none\" === row.style.display || $row.hasClass(this.addWidgetPrefix(GROUP_FOOTER_CLASS)) || isDetailRow($row) && !$row.hasClass(this.addWidgetPrefix(EDIT_FORM_CLASS)))\r\n    },\r\n    _allowEditingOnEnterKey: function() {\r\n        return \"startEdit\" === this.option(\"keyboardNavigation.enterKeyAction\")\r\n    },\r\n    _isLegacyNavigation: function() {\r\n        return this.option(\"useLegacyKeyboardNavigation\")\r\n    },\r\n    _getDirectionCodeByKey: function(key) {\r\n        var directionCode;\r\n        if (this.option(\"rtlEnabled\")) {\r\n            directionCode = \"leftArrow\" === key ? \"nextInRow\" : \"previousInRow\"\r\n        } else {\r\n            directionCode = \"leftArrow\" === key ? \"previousInRow\" : \"nextInRow\"\r\n        }\r\n        return directionCode\r\n    },\r\n    _isVirtualScrolling: function() {\r\n        var scrollingMode = this.option(\"scrolling.mode\");\r\n        return \"virtual\" === scrollingMode || \"infinite\" === scrollingMode\r\n    },\r\n    _scrollBy: function(top, rowIndex, $event) {\r\n        var that = this;\r\n        var scrollable = this.getView(\"rowsView\").getScrollable();\r\n        if (that._focusedCellPosition) {\r\n            var scrollHandler = function scrollHandler() {\r\n                scrollable.off(\"scroll\", scrollHandler);\r\n                setTimeout(that.restoreFocusableElement.bind(that, rowIndex, $event))\r\n            };\r\n            scrollable.on(\"scroll\", scrollHandler)\r\n        }\r\n        scrollable.scrollBy({\r\n            left: 0,\r\n            top: top\r\n        })\r\n    },\r\n    _isInsideEditForm: function(element) {\r\n        return (0, _renderer2.default)(element).closest(\".\" + this.addWidgetPrefix(EDIT_FORM_CLASS)).length > 0\r\n    },\r\n    _isMasterDetailCell: function(element) {\r\n        var $masterDetailCell = (0, _renderer2.default)(element).closest(\".\" + MASTER_DETAIL_CELL_CLASS);\r\n        var $masterDetailGrid = $masterDetailCell.closest(\".\" + this.getWidgetContainerClass()).parent();\r\n        return $masterDetailCell.length && $masterDetailGrid.is(this.component.$element())\r\n    },\r\n    _processNextCellInMasterDetail: function($nextCell) {\r\n        if (!this._isInsideEditForm($nextCell) && $nextCell) {\r\n            this._applyTabIndexToElement($nextCell)\r\n        }\r\n    },\r\n    _handleTabKeyOnMasterDetailCell: function(target, direction) {\r\n        if (this._isMasterDetailCell(target)) {\r\n            this._updateFocusedCellPosition((0, _renderer2.default)(target), direction);\r\n            var $nextCell = this._getNextCell(direction, \"row\");\r\n            this._processNextCellInMasterDetail($nextCell);\r\n            return true\r\n        }\r\n        return false\r\n    },\r\n    _getElementType: function(target) {\r\n        return (0, _renderer2.default)(target).is(\"tr\") ? \"row\" : \"cell\"\r\n    },\r\n    _isFastEditingStarted: function() {\r\n        return this._isFastEditingAllowed() && this._fastEditingStarted\r\n    },\r\n    _getVisibleColumnCount: function() {\r\n        return this.getController(\"columns\").getVisibleColumns().length\r\n    },\r\n    _isCellInRow: function(cellPosition, includeCommandCells) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var visibleColumnsCount = this._getVisibleColumnCount();\r\n        return includeCommandCells ? columnIndex >= 0 && columnIndex <= visibleColumnsCount - 1 : columnIndex > 0 && columnIndex < visibleColumnsCount - 1\r\n    },\r\n    _getCellElementFromTarget: function(target) {\r\n        var elementType = this._getElementType(target);\r\n        var $targetElement = (0, _renderer2.default)(target);\r\n        var $cell;\r\n        if (\"cell\" === elementType) {\r\n            $cell = $targetElement.closest(\".\".concat(ROW_CLASS, \" > td\"))\r\n        } else {\r\n            $cell = $targetElement.children().not(\".\" + COMMAND_EXPAND_CLASS).first()\r\n        }\r\n        return $cell\r\n    },\r\n    _getRowsViewElement: function() {\r\n        var rowsView = this.getView(\"rowsView\");\r\n        return rowsView && rowsView.element()\r\n    },\r\n    isKeyboardEnabled: function() {\r\n        return this.option(\"keyboardNavigation.enabled\")\r\n    },\r\n    _processCanceledEditCellPosition: function(rowIndex, columnIndex) {\r\n        if (this._canceledCellPosition) {\r\n            var isCanceled = this._canceledCellPosition.rowIndex === rowIndex && this._canceledCellPosition.columnIndex === columnIndex;\r\n            this._canceledCellPosition = null;\r\n            return isCanceled\r\n        }\r\n    }\r\n});\r\nmodule.exports = {\r\n    defaultOptions: function() {\r\n        return {\r\n            useLegacyKeyboardNavigation: false,\r\n            keyboardNavigation: {\r\n                enabled: true,\r\n                enterKeyAction: \"startEdit\",\r\n                enterKeyDirection: \"none\",\r\n                editOnKeyPress: false\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        keyboardNavigation: KeyboardNavigationController\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: {\r\n                _rowClick: function(e) {\r\n                    var editRowIndex = this.getController(\"editing\").getEditRowIndex();\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    if (editRowIndex === e.rowIndex) {\r\n                        keyboardController.setCellFocusType()\r\n                    }\r\n                    var needTriggerPointerEventHandler = isMobile() && this.option(\"focusedRowEnabled\");\r\n                    if (needTriggerPointerEventHandler) {\r\n                        this._triggerPointerDownEventHandler(e)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _triggerPointerDownEventHandler: function(e) {\r\n                    var originalEvent = e.event.originalEvent;\r\n                    if (originalEvent) {\r\n                        var keyboardController = this.getController(\"keyboardNavigation\");\r\n                        var $cell = (0, _renderer2.default)(originalEvent.target);\r\n                        var columnIndex = this.getCellIndex($cell);\r\n                        var column = this.getController(\"columns\").getVisibleColumns()[columnIndex];\r\n                        var row = this.getController(\"data\").items()[e.rowIndex];\r\n                        if (keyboardController._isAllowEditing(row, column)) {\r\n                            var eventArgs = eventUtils.createEvent(originalEvent, {\r\n                                currentTarget: originalEvent.target\r\n                            });\r\n                            keyboardController._pointerEventHandler(eventArgs)\r\n                        }\r\n                    }\r\n                },\r\n                renderFocusState: function() {\r\n                    var dataController = this._dataController;\r\n                    var rowIndex = this.option(\"focusedRowIndex\") || 0;\r\n                    var $rowsView = this.element();\r\n                    if ($rowsView && !(0, _selectors.focused)($rowsView)) {\r\n                        $rowsView.attr(\"tabIndex\", null)\r\n                    }\r\n                    if (rowIndex < 0 || rowIndex >= dataController.getVisibleRows().length) {\r\n                        rowIndex = 0\r\n                    }\r\n                    var cellElements = this.getCellElements(rowIndex);\r\n                    if (this.getController(\"keyboardNavigation\").isKeyboardEnabled() && cellElements) {\r\n                        this.updateFocusElementTabIndex(cellElements)\r\n                    }\r\n                },\r\n                updateFocusElementTabIndex: function(cellElements) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var $row = cellElements.eq(0).parent();\r\n                    var columnIndex = this.option(\"focusedColumnIndex\");\r\n                    if (!columnIndex || columnIndex < 0) {\r\n                        columnIndex = 0\r\n                    }\r\n                    if (isGroupRow($row)) {\r\n                        keyboardController._applyTabIndexToElement($row)\r\n                    } else {\r\n                        this._updateFocusedCellTabIndex(cellElements, columnIndex)\r\n                    }\r\n                },\r\n                _updateFocusedCellTabIndex: function(cellElements, columnIndex) {\r\n                    var $cell;\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var oldFocusedView = keyboardController._focusedView;\r\n                    var cellElementsLength = cellElements ? cellElements.length : -1;\r\n                    keyboardController._focusedView = this;\r\n                    if (cellElementsLength > 0) {\r\n                        if (cellElementsLength <= columnIndex) {\r\n                            columnIndex = cellElementsLength - 1\r\n                        }\r\n                        for (var i = columnIndex; i < cellElementsLength; ++i) {\r\n                            $cell = (0, _renderer2.default)(cellElements[i]);\r\n                            if (!keyboardController._isMasterDetailCell($cell)) {\r\n                                if (keyboardController._isCellValid($cell) && isCellElement($cell)) {\r\n                                    keyboardController._applyTabIndexToElement($cell);\r\n                                    keyboardController.setCellFocusType();\r\n                                    break\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    keyboardController._focusedView = oldFocusedView\r\n                },\r\n                renderDelayedTemplates: function(change) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (!change || !change.repaintChangesOnly) {\r\n                        this.renderFocusState()\r\n                    }\r\n                },\r\n                _renderCore: function(change) {\r\n                    this.callBase(change);\r\n                    if (!change || !change.repaintChangesOnly) {\r\n                        this.renderFocusState()\r\n                    }\r\n                },\r\n                _editCellPrepared: function($cell) {\r\n                    var editorInstance = this._getEditorInstance($cell);\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var isEditingNavigationMode = keyboardController && keyboardController._isFastEditingStarted();\r\n                    if (editorInstance && isEditingNavigationMode) {\r\n                        this._handleEditingNavigationMode(editorInstance)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _handleEditingNavigationMode: function(editorInstance) {\r\n                    [\"downArrow\", \"upArrow\"].forEach(function(keyName) {\r\n                        var originalKeyHandler = editorInstance._supportedKeys()[keyName];\r\n                        editorInstance.registerKeyHandler(keyName, function(e) {\r\n                            var isDropDownOpened = \"true\" === editorInstance._input().attr(\"aria-expanded\");\r\n                            if (isDropDownOpened) {\r\n                                return originalKeyHandler && originalKeyHandler.call(editorInstance, e)\r\n                            }\r\n                        })\r\n                    });\r\n                    editorInstance.registerKeyHandler(\"leftArrow\", _common.noop);\r\n                    editorInstance.registerKeyHandler(\"rightArrow\", _common.noop);\r\n                    var isDateBoxWithMask = editorInstance.NAME === DATEBOX_WIDGET_NAME && editorInstance.option(\"useMaskBehavior\");\r\n                    if (isDateBoxWithMask) {\r\n                        editorInstance.registerKeyHandler(\"enter\", _common.noop)\r\n                    }\r\n                },\r\n                _getEditorInstance: function($cell) {\r\n                    var $editor = $cell.find(\".dx-texteditor\").eq(0);\r\n                    return (0, _uiGrid_core3.getWidgetInstance)($editor)\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            editing: {\r\n                editCell: function(rowIndex, columnIndex) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    if (keyboardController._processCanceledEditCellPosition(rowIndex, columnIndex)) {\r\n                        return false\r\n                    }\r\n                    var isCellEditing = this.callBase(rowIndex, columnIndex);\r\n                    if (isCellEditing) {\r\n                        keyboardController.setupFocusedView()\r\n                    }\r\n                    return isCellEditing\r\n                },\r\n                editRow: function(rowIndex) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var columnIndex = this.option(\"focusedColumnIndex\");\r\n                    var column = this._columnsController.getVisibleColumns()[columnIndex];\r\n                    if (column && column.type || this.option(\"editing.mode\") === EDIT_MODE_FORM) {\r\n                        keyboardController._resetFocusedCell()\r\n                    }\r\n                    this.callBase(rowIndex)\r\n                },\r\n                addRow: function(parentKey) {\r\n                    this.getController(\"keyboardNavigation\").setupFocusedView();\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                getFocusedCellInRow: function(rowIndex) {\r\n                    var keyboardNavigationController = this.getController(\"keyboardNavigation\");\r\n                    var $cell = this.callBase(rowIndex);\r\n                    if (keyboardNavigationController.isKeyboardEnabled() && keyboardNavigationController._focusedCellPosition.rowIndex === rowIndex) {\r\n                        var $focusedCell = keyboardNavigationController._getFocusedCell();\r\n                        if (isElementDefined($focusedCell) && !$focusedCell.hasClass(\"dx-command-edit\")) {\r\n                            $cell = $focusedCell\r\n                        }\r\n                    }\r\n                    return $cell\r\n                },\r\n                _processCanceledEditingCell: function() {\r\n                    var _this3 = this;\r\n                    this.closeEditCell().done(function() {\r\n                        var keyboardNavigation = _this3.getController(\"keyboardNavigation\");\r\n                        keyboardNavigation._updateFocus()\r\n                    })\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._keyboardNavigationController = this.getController(\"keyboardNavigation\")\r\n                },\r\n                closeEditCell: function() {\r\n                    var keyboardNavigation = this.getController(\"keyboardNavigation\");\r\n                    keyboardNavigation._fastEditingStarted = false;\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    keyboardNavigation._updateFocus();\r\n                    return result\r\n                },\r\n                _delayedInputFocus: function() {\r\n                    this._keyboardNavigationController._isNeedScroll = true;\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _isEditingStart: function() {\r\n                    var keyboardNavigation = this.getController(\"keyboardNavigation\");\r\n                    var cancel = this.callBase.apply(this, arguments);\r\n                    if (cancel && !keyboardNavigation._isNeedFocus) {\r\n                        var $cell = keyboardNavigation._getFocusedCell();\r\n                        keyboardNavigation._focus($cell, true)\r\n                    }\r\n                    return cancel\r\n                }\r\n            },\r\n            data: {\r\n                _correctRowIndices: function(getRowIndexCorrection) {\r\n                    var that = this;\r\n                    var keyboardNavigationController = that.getController(\"keyboardNavigation\");\r\n                    var editorFactory = that.getController(\"editorFactory\");\r\n                    var focusedCellPosition = keyboardNavigationController._focusedCellPosition;\r\n                    that.callBase.apply(that, arguments);\r\n                    if (focusedCellPosition && focusedCellPosition.rowIndex >= 0) {\r\n                        var focusedRowIndexCorrection = getRowIndexCorrection(focusedCellPosition.rowIndex);\r\n                        if (focusedRowIndexCorrection) {\r\n                            focusedCellPosition.rowIndex += focusedRowIndexCorrection;\r\n                            editorFactory.refocus()\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            adaptiveColumns: {\r\n                _showHiddenCellsInView: function(_ref) {\r\n                    var viewName = _ref.viewName,\r\n                        $cells = _ref.$cells,\r\n                        isCommandColumn = _ref.isCommandColumn;\r\n                    this.callBase.apply(this, arguments);\r\n                    viewName === COLUMN_HEADERS_VIEW && !isCommandColumn && $cells.each(function(_, cellElement) {\r\n                        var $cell = (0, _renderer2.default)(cellElement);\r\n                        isCellInHeaderRow($cell) && $cell.attr(\"tabindex\", 0)\r\n                    })\r\n                },\r\n                _hideVisibleCellInView: function(_ref2) {\r\n                    var viewName = _ref2.viewName,\r\n                        $cell = _ref2.$cell,\r\n                        isCommandColumn = _ref2.isCommandColumn;\r\n                    this.callBase.apply(this, arguments);\r\n                    if (viewName === COLUMN_HEADERS_VIEW && !isCommandColumn && isCellInHeaderRow($cell)) {\r\n                        $cell.removeAttr(\"tabindex\")\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}