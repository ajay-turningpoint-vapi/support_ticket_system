{"ast":null,"code":"/**\r\n * DevExtreme (core/utils/variable_wrapper.js)\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar logger = require(\"./console\").logger;\n\nvar dependencyInjector = require(\"./dependency_injector\");\n\nmodule.exports = dependencyInjector({\n  isWrapped: function () {\n    return false;\n  },\n  isWritableWrapped: function () {\n    return false;\n  },\n  wrap: function (value) {\n    return value;\n  },\n  unwrap: function (value) {\n    return value;\n  },\n  assign: function () {\n    logger.error(\"Method 'assign' should not be used for not wrapped variables. Use 'isWrapped' method for ensuring.\");\n  }\n});","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/ticketSystem/frontend/node_modules/devextreme/core/utils/variable_wrapper.js"],"names":["logger","require","dependencyInjector","module","exports","isWrapped","isWritableWrapped","wrap","value","unwrap","assign","error"],"mappings":"AAAA;;;;;;;;AAQA;;AACA,IAAIA,MAAM,GAAGC,OAAO,CAAC,WAAD,CAAP,CAAqBD,MAAlC;;AACA,IAAIE,kBAAkB,GAAGD,OAAO,CAAC,uBAAD,CAAhC;;AACAE,MAAM,CAACC,OAAP,GAAiBF,kBAAkB,CAAC;AAChCG,EAAAA,SAAS,EAAE,YAAW;AAClB,WAAO,KAAP;AACH,GAH+B;AAIhCC,EAAAA,iBAAiB,EAAE,YAAW;AAC1B,WAAO,KAAP;AACH,GAN+B;AAOhCC,EAAAA,IAAI,EAAE,UAASC,KAAT,EAAgB;AAClB,WAAOA,KAAP;AACH,GAT+B;AAUhCC,EAAAA,MAAM,EAAE,UAASD,KAAT,EAAgB;AACpB,WAAOA,KAAP;AACH,GAZ+B;AAahCE,EAAAA,MAAM,EAAE,YAAW;AACfV,IAAAA,MAAM,CAACW,KAAP,CAAa,oGAAb;AACH;AAf+B,CAAD,CAAnC","sourcesContent":["/**\r\n * DevExtreme (core/utils/variable_wrapper.js)\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar logger = require(\"./console\").logger;\r\nvar dependencyInjector = require(\"./dependency_injector\");\r\nmodule.exports = dependencyInjector({\r\n    isWrapped: function() {\r\n        return false\r\n    },\r\n    isWritableWrapped: function() {\r\n        return false\r\n    },\r\n    wrap: function(value) {\r\n        return value\r\n    },\r\n    unwrap: function(value) {\r\n        return value\r\n    },\r\n    assign: function() {\r\n        logger.error(\"Method 'assign' should not be used for not wrapped variables. Use 'isWrapped' method for ensuring.\")\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"script"}