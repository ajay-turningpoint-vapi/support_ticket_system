{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\ticketSystem\\\\frontend\\\\src\\\\components\\\\Ticket.js\";\nimport React, { Component } from 'react';\nimport { ticket } from './TicketFunctions';\nimport ImageUpload from './ImageUpload';\nimport axios from 'axios';\n\nclass Ticket extends Component {\n  constructor() {\n    super();\n\n    this.onChangeHandler = event => {\n      console.log(event.target.files[0]);\n    };\n\n    this.state = {\n      name: '',\n      content: '',\n      messages: '',\n      status: '',\n      img: '',\n      file: '',\n      imagePreviewUrl: '',\n      errors: {}\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  _handleSubmit(e) {\n    e.preventDefault(); // TODO: do something with -> this.state.file\n\n    console.log('handle uploading-', this.state.file);\n    console.log('file burada');\n  }\n\n  _handleImageChange(e) {\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result\n      });\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  onSubmit() {\n    console.log(\"ONSUBMÄ°TTE\");\n    return axios.post('tickets/addTickets', {\n      name: this.state.name,\n      img: this.state.file,\n      content: this.state.content,\n      messages: this.state.messages\n    }).then(response => {\n      console.log('New ticket success');\n    });\n  }\n\n  render() {\n    let {\n      imagePreviewUrl\n    } = this.state;\n    let $imagePreview = null;\n\n    if (imagePreviewUrl) {\n      $imagePreview = /*#__PURE__*/React.createElement(\"img\", {\n        src: imagePreviewUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 24\n        }\n      });\n    } else {\n      $imagePreview = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"previewText\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 24\n        }\n      }, \"Please select an Image for Preview\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"previewComponent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: e => this._handleSubmit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"fileInput\",\n      type: \"file\",\n      onChange: e => this._handleImageChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"submitButton\",\n      type: \"submit\",\n      onClick: e => this._handleSubmit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, \"Upload Image\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-8 mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, \"ADD TICKET\")), /*#__PURE__*/React.createElement(\"form\", {\n      encType: \"multipart/form-data\",\n      noValidate: true,\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, \"Ticket name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      placeholder: \"Enter ticket name\",\n      value: this.state.name,\n      onChange: this.onChange,\n      name: \"name\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, \"content\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"content\",\n      name: \"content\",\n      rows: \"2\",\n      placeholder: \"Enter content\",\n      value: this.state.content,\n      onChange: this.onChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, \"messages\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"messages\",\n      name: \"messages\",\n      rows: \"2\",\n      placeholder: \"Enter Message\",\n      value: this.state.messages.text,\n      onChange: this.onChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, \"Upload Image\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      name: \"img\",\n      placeholder: \"Upload \\u0130mage\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, \"Submit\")))));\n  }\n\n}\n\nexport default Ticket;","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/ticketSystem/frontend/src/components/Ticket.js"],"names":["React","Component","ticket","ImageUpload","axios","Ticket","constructor","onChangeHandler","event","console","log","target","files","state","name","content","messages","status","img","file","imagePreviewUrl","errors","onSubmit","bind","_handleSubmit","e","preventDefault","_handleImageChange","reader","FileReader","onloadend","setState","result","readAsDataURL","post","then","response","render","$imagePreview","onChange","text"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { ticket } from './TicketFunctions'\r\nimport ImageUpload from './ImageUpload'\r\nimport axios from 'axios'\r\n\r\nclass Ticket extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      name: '',\r\n      content: '',\r\n      messages:'',\r\n      status:'',\r\n      img:'',\r\n      file: '',\r\n      imagePreviewUrl: '',\r\n      errors: {}\r\n    }\r\n    \r\n  \r\n    this.onSubmit = this.onSubmit.bind(this)\r\n  }\r\n \r\n  _handleSubmit(e) {\r\n    e.preventDefault();\r\n    // TODO: do something with -> this.state.file\r\n    \r\n    console.log('handle uploading-', this.state.file);\r\n    console.log('file burada');\r\n  }\r\n\r\n  _handleImageChange(e) {\r\n    e.preventDefault();\r\n\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n\r\n    reader.onloadend = () => {\r\n      this.setState({\r\n        file: file,\r\n        imagePreviewUrl: reader.result\r\n      });\r\n    }\r\n\r\n    reader.readAsDataURL(file)\r\n  }\r\n\r\n  onSubmit() {\r\n \r\n\r\n    console.log(\"ONSUBMÄ°TTE\")\r\n    \r\n    return axios\r\n    .post('tickets/addTickets', {\r\n      name: this.state.name,\r\n      img: this.state.file,\r\n      content: this.state.content,\r\n      messages: this.state.messages\r\n    })\r\n    .then(response => {\r\n      console.log('New ticket success')\r\n    })\r\n\r\n  }\r\n\r\n\r\n  onChangeHandler=event=>{\r\n\r\n    console.log(event.target.files[0])\r\n\r\n}\r\n\r\n  render() {\r\n    let {imagePreviewUrl} = this.state;\r\n    let $imagePreview = null;\r\n    if (imagePreviewUrl) {\r\n      $imagePreview = (<img src={imagePreviewUrl} />);\r\n    } else {\r\n      $imagePreview = (<div className=\"previewText\">Please select an Image for Preview</div>);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n      \r\n      <div className=\"container\">\r\n            <div className=\"previewComponent\">\r\n          <form onSubmit={(e)=>this._handleSubmit(e)}>\r\n            <input className=\"fileInput\" \r\n              type=\"file\" \r\n              onChange={(e)=>this._handleImageChange(e)} />\r\n            <button className=\"submitButton\" \r\n              type=\"submit\" \r\n              onClick={(e)=>this._handleSubmit(e)}>Upload Image</button>\r\n          </form>\r\n         \r\n        </div>\r\n        <div className=\"jumbotron mt-5\">\r\n          <div className=\"col-sm-8 mx-auto\">\r\n            <h1 className=\"text-center\">ADD TICKET</h1>\r\n          </div>\r\n          <form encType=\"multipart/form-data\" noValidate onSubmit={this.onSubmit} >\r\n          <div>\r\n          <label htmlFor=\"name\">Ticket name</label> \r\n          <input type=\"text\" id=\"name\" placeholder=\"Enter ticket name\"\r\n                  value={this.state.name}\r\n                  onChange={this.onChange}  name=\"name\" required ></input>\r\n          </div>\r\n          <div> \r\n                <label htmlFor=\"content\">content</label> \r\n                <textarea id=\"content\" name=\"content\" rows=\"2\" \r\n                          placeholder=\"Enter content\"\r\n                          value={this.state.content}\r\n                          onChange={this.onChange}  required> \r\n                </textarea> \r\n           </div>  \r\n           <div> \r\n                <label htmlFor=\"content\">messages</label> \r\n                <textarea id=\"messages\" name=\"messages\" rows=\"2\" \r\n                          placeholder=\"Enter Message\"\r\n                          value={this.state.messages.text}\r\n                          onChange={this.onChange}  required> \r\n                </textarea> \r\n           </div>  \r\n            <div> \r\n                <label htmlFor=\"img\">Upload Image</label> \r\n                <input type=\"file\"\r\n                       name=\"img\" \r\n                       placeholder=\"Upload Ä°mage\"\r\n  \r\n                  \r\n\r\n                       required></input>\r\n            </div> \r\n            <div> \r\n                <button type=\"submit\">Submit</button> \r\n            </div> \r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Ticket"]},"metadata":{},"sourceType":"module"}