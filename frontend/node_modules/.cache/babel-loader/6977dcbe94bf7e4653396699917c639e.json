{"ast":null,"code":"/**\r\n * DevExtreme (core/utils/error.js)\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar extend = require(\"./extend\").extend;\n\nvar consoleUtils = require(\"./console\");\n\nvar stringUtils = require(\"./string\");\n\nvar version = require(\"../version\");\n\nvar ERROR_URL = \"http://js.devexpress.com/error/\" + version.split(\".\").slice(0, 2).join(\"_\") + \"/\";\n\nmodule.exports = function (baseErrors, errors) {\n  var exports = {\n    ERROR_MESSAGES: extend(errors, baseErrors),\n    Error: function () {\n      return makeError([].slice.call(arguments));\n    },\n    log: function (id) {\n      var method = \"log\";\n\n      if (/^E\\d+$/.test(id)) {\n        method = \"error\";\n      } else {\n        if (/^W\\d+$/.test(id)) {\n          method = \"warn\";\n        }\n      }\n\n      consoleUtils.logger[method](\"log\" === method ? id : combineMessage([].slice.call(arguments)));\n    }\n  };\n\n  function combineMessage(args) {\n    var id = args[0];\n    args = args.slice(1);\n    return formatMessage(id, formatDetails(id, args));\n  }\n\n  function formatDetails(id, args) {\n    args = [exports.ERROR_MESSAGES[id]].concat(args);\n    return stringUtils.format.apply(this, args).replace(/\\.*\\s*?$/, \"\");\n  }\n\n  function formatMessage(id, details) {\n    return stringUtils.format.apply(this, [\"{0} - {1}. See:\\n{2}\", id, details, getErrorUrl(id)]);\n  }\n\n  function makeError(args) {\n    var id = args[0];\n    args = args.slice(1);\n    var details = formatDetails(id, args);\n    var url = getErrorUrl(id);\n    var message = formatMessage(id, details);\n    return extend(new Error(message), {\n      __id: id,\n      __details: details,\n      url: url\n    });\n  }\n\n  function getErrorUrl(id) {\n    return ERROR_URL + id;\n  }\n\n  return exports;\n};","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/ticketSystem/frontend/node_modules/devextreme/core/utils/error.js"],"names":["extend","require","consoleUtils","stringUtils","version","ERROR_URL","split","slice","join","module","exports","baseErrors","errors","ERROR_MESSAGES","Error","makeError","call","arguments","log","id","method","test","logger","combineMessage","args","formatMessage","formatDetails","concat","format","apply","replace","details","getErrorUrl","url","message","__id","__details"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (core/utils/error.js)\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar extend = require(\"./extend\").extend;\r\nvar consoleUtils = require(\"./console\");\r\nvar stringUtils = require(\"./string\");\r\nvar version = require(\"../version\");\r\nvar ERROR_URL = \"http://js.devexpress.com/error/\" + version.split(\".\").slice(0, 2).join(\"_\") + \"/\";\r\nmodule.exports = function(baseErrors, errors) {\r\n    var exports = {\r\n        ERROR_MESSAGES: extend(errors, baseErrors),\r\n        Error: function() {\r\n            return makeError([].slice.call(arguments))\r\n        },\r\n        log: function(id) {\r\n            var method = \"log\";\r\n            if (/^E\\d+$/.test(id)) {\r\n                method = \"error\"\r\n            } else {\r\n                if (/^W\\d+$/.test(id)) {\r\n                    method = \"warn\"\r\n                }\r\n            }\r\n            consoleUtils.logger[method](\"log\" === method ? id : combineMessage([].slice.call(arguments)))\r\n        }\r\n    };\r\n\r\n    function combineMessage(args) {\r\n        var id = args[0];\r\n        args = args.slice(1);\r\n        return formatMessage(id, formatDetails(id, args))\r\n    }\r\n\r\n    function formatDetails(id, args) {\r\n        args = [exports.ERROR_MESSAGES[id]].concat(args);\r\n        return stringUtils.format.apply(this, args).replace(/\\.*\\s*?$/, \"\")\r\n    }\r\n\r\n    function formatMessage(id, details) {\r\n        return stringUtils.format.apply(this, [\"{0} - {1}. See:\\n{2}\", id, details, getErrorUrl(id)])\r\n    }\r\n\r\n    function makeError(args) {\r\n        var id = args[0];\r\n        args = args.slice(1);\r\n        var details = formatDetails(id, args);\r\n        var url = getErrorUrl(id);\r\n        var message = formatMessage(id, details);\r\n        return extend(new Error(message), {\r\n            __id: id,\r\n            __details: details,\r\n            url: url\r\n        })\r\n    }\r\n\r\n    function getErrorUrl(id) {\r\n        return ERROR_URL + id\r\n    }\r\n    return exports\r\n};\r\n"]},"metadata":{},"sourceType":"script"}