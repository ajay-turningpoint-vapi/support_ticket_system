{"ast":null,"code":"/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.virtual_scrolling_core.js)\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _renderer = require(\"../../core/renderer\");\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _window = require(\"../../core/utils/window\");\n\nvar _events_engine = require(\"../../events/core/events_engine\");\n\nvar _events_engine2 = _interopRequireDefault(_events_engine);\n\nvar _browser = require(\"../../core/utils/browser\");\n\nvar _browser2 = _interopRequireDefault(_browser);\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _position = require(\"../../animation/position\");\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _class = require(\"../../core/class\");\n\nvar _class2 = _interopRequireDefault(_class);\n\nvar _deferred = require(\"../../core/utils/deferred\");\n\nvar _callbacks = require(\"../../core/utils/callbacks\");\n\nvar _callbacks2 = _interopRequireDefault(_callbacks);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar SCROLLING_MODE_INFINITE = \"infinite\";\nvar SCROLLING_MODE_VIRTUAL = \"virtual\";\n\nvar isVirtualMode = function (that) {\n  return that.option(\"scrolling.mode\") === SCROLLING_MODE_VIRTUAL || that._isVirtual;\n};\n\nvar isAppendMode = function (that) {\n  return that.option(\"scrolling.mode\") === SCROLLING_MODE_INFINITE && !that._isVirtual;\n};\n\nexports.getPixelRatio = function (window) {\n  return window.devicePixelRatio || 1;\n};\n\nexports.getContentHeightLimit = function (browser) {\n  if (browser.msie) {\n    return 4e6;\n  } else {\n    if (browser.mozilla) {\n      return 8e6;\n    }\n  }\n\n  return 15e6 / exports.getPixelRatio((0, _window.getWindow)());\n};\n\nexports.subscribeToExternalScrollers = function ($element, scrollChangedHandler, $targetElement) {\n  var $scrollElement;\n  var scrollableArray = [];\n  var scrollToArray = [];\n  var disposeArray = [];\n  $targetElement = $targetElement || $element;\n\n  function getElementOffset(scrollable) {\n    var $scrollableElement = scrollable.element ? scrollable.$element() : scrollable;\n\n    var scrollableOffset = _position2.default.offset($scrollableElement);\n\n    if (!scrollableOffset) {\n      return $element.offset().top;\n    }\n\n    return scrollable.scrollTop() - (scrollableOffset.top - $element.offset().top);\n  }\n\n  function createWindowScrollHandler(scrollable) {\n    return function () {\n      var scrollTop = scrollable.scrollTop() - getElementOffset(scrollable);\n      scrollTop = scrollTop > 0 ? scrollTop : 0;\n      scrollChangedHandler(scrollTop);\n    };\n  }\n\n  var widgetScrollStrategy = {\n    on: function (scrollable, eventName, handler) {\n      scrollable.on(\"scroll\", handler);\n    },\n    off: function (scrollable, eventName, handler) {\n      scrollable.off(\"scroll\", handler);\n    }\n  };\n\n  function subscribeToScrollEvents($scrollElement) {\n    var isDocument = \"#document\" === $scrollElement.get(0).nodeName;\n    var scrollable = $scrollElement.data(\"dxScrollable\");\n    var eventsStrategy = widgetScrollStrategy;\n\n    if (!scrollable) {\n      scrollable = isDocument && (0, _renderer2.default)((0, _window.getWindow)()) || \"auto\" === $scrollElement.css(\"overflowY\") && $scrollElement;\n      eventsStrategy = _events_engine2.default;\n\n      if (!scrollable) {\n        return;\n      }\n    }\n\n    var handler = createWindowScrollHandler(scrollable);\n    eventsStrategy.on(scrollable, \"scroll\", handler);\n    scrollToArray.push(function (pos) {\n      var topOffset = getElementOffset(scrollable);\n      var scrollMethod = scrollable.scrollTo ? \"scrollTo\" : \"scrollTop\";\n\n      if (pos - topOffset >= 0) {\n        scrollable[scrollMethod](pos + topOffset);\n      }\n    });\n    scrollableArray.push(scrollable);\n    disposeArray.push(function () {\n      eventsStrategy.off(scrollable, \"scroll\", handler);\n    });\n  }\n\n  for ($scrollElement = $targetElement.parent(); $scrollElement.length; $scrollElement = $scrollElement.parent()) {\n    subscribeToScrollEvents($scrollElement);\n  }\n\n  return {\n    scrollTo: function (pos) {\n      (0, _iterator.each)(scrollToArray, function (_, scrollTo) {\n        scrollTo(pos);\n      });\n    },\n    dispose: function () {\n      (0, _iterator.each)(disposeArray, function (_, dispose) {\n        dispose();\n      });\n    }\n  };\n};\n\nexports.VirtualScrollController = _class2.default.inherit(function () {\n  var getViewportPageCount = function (that) {\n    var pageSize = that._dataSource.pageSize();\n\n    var preventPreload = that.option(\"scrolling.preventPreload\");\n\n    if (preventPreload) {\n      return 0;\n    }\n\n    var realViewportSize = that._viewportSize;\n\n    if (isVirtualMode(that) && !that.option(\"legacyRendering\") && that.option(\"scrolling.removeInvisiblePages\")) {\n      realViewportSize = 0;\n      var viewportSize = that._viewportSize * that._viewportItemSize;\n      var offset = that.getContentOffset();\n      var position = that._position || 0;\n      var virtualItemsCount = that.virtualItemsCount();\n\n      var totalItemsCount = that._dataSource.totalItemsCount();\n\n      for (var itemIndex = virtualItemsCount.begin; itemIndex < totalItemsCount; itemIndex++) {\n        if (offset >= position + viewportSize) {\n          break;\n        }\n\n        var itemSize = that._itemSizes[itemIndex] || that._viewportItemSize;\n        offset += itemSize;\n\n        if (offset >= position) {\n          realViewportSize++;\n        }\n      }\n    }\n\n    return pageSize && realViewportSize > 0 ? Math.ceil(realViewportSize / pageSize) : 1;\n  };\n\n  var getPreloadPageCount = function (that, previous) {\n    var preloadEnabled = that.option(\"scrolling.preloadEnabled\");\n    var pageCount = getViewportPageCount(that);\n\n    if (pageCount) {\n      if (previous) {\n        pageCount = preloadEnabled ? 1 : 0;\n      } else {\n        if (preloadEnabled) {\n          pageCount++;\n        }\n\n        if (isAppendMode(that)) {\n          pageCount--;\n        }\n      }\n    }\n\n    return pageCount;\n  };\n\n  var getPageIndexForLoad = function (that) {\n    var result = -1;\n    var beginPageIndex = getBeginPageIndex(that);\n    var dataSource = that._dataSource;\n\n    if (beginPageIndex < 0) {\n      result = that._pageIndex;\n    } else {\n      if (!that._cache[that._pageIndex - beginPageIndex]) {\n        result = that._pageIndex;\n      } else {\n        if (beginPageIndex >= 0 && that._viewportSize >= 0) {\n          if (beginPageIndex > 0) {\n            var needToLoadPageBeforeLast = getEndPageIndex(that) + 1 === dataSource.pageCount() && that._cache.length < getPreloadPageCount(that) + 1;\n            var needToLoadPrevPage = needToLoadPageBeforeLast || that._pageIndex === beginPageIndex && getPreloadPageCount(that, true);\n\n            if (needToLoadPrevPage) {\n              result = beginPageIndex - 1;\n            }\n          }\n\n          if (result < 0) {\n            var needToLoadNextPage = beginPageIndex + that._cache.length <= that._pageIndex + getPreloadPageCount(that);\n\n            if (needToLoadNextPage) {\n              result = beginPageIndex + that._cache.length;\n            }\n          }\n        }\n      }\n    }\n\n    if (that._loadingPageIndexes[result]) {\n      result = -1;\n    }\n\n    return result;\n  };\n\n  function getBeginPageIndex(that) {\n    return that._cache.length ? that._cache[0].pageIndex : -1;\n  }\n\n  function getEndPageIndex(that) {\n    return that._cache.length ? that._cache[that._cache.length - 1].pageIndex : -1;\n  }\n\n  var fireChanged = function (that, changed, args) {\n    that._isChangedFiring = true;\n    changed(args);\n    that._isChangedFiring = false;\n  };\n\n  var processDelayChanged = function (that, changed, args) {\n    if (that._isDelayChanged) {\n      that._isDelayChanged = false;\n      fireChanged(that, changed, args);\n      return true;\n    }\n  };\n\n  var processChanged = function (that, changed, changeType, isDelayChanged, removeCacheItem) {\n    var dataSource = that._dataSource;\n    var items = dataSource.items().slice();\n    var change = (0, _type.isObject)(changeType) ? changeType : void 0;\n    var isPrepend = \"prepend\" === changeType;\n    var viewportItems = dataSource.viewportItems();\n\n    if (changeType && (0, _type.isString)(changeType) && !that._isDelayChanged) {\n      change = {\n        changeType: changeType,\n        items: items\n      };\n\n      if (removeCacheItem) {\n        change.removeCount = removeCacheItem.itemsCount;\n\n        if (change.removeCount && dataSource.correctCount) {\n          change.removeCount = dataSource.correctCount(viewportItems, change.removeCount, isPrepend);\n        }\n      }\n    }\n\n    var removeItemCount = removeCacheItem ? removeCacheItem.itemsLength : 0;\n\n    if (removeItemCount && dataSource.correctCount) {\n      removeItemCount = dataSource.correctCount(viewportItems, removeItemCount, isPrepend);\n    }\n\n    if (\"append\" === changeType) {\n      viewportItems.push.apply(viewportItems, items);\n\n      if (removeCacheItem) {\n        viewportItems.splice(0, removeItemCount);\n      }\n    } else {\n      if (isPrepend) {\n        viewportItems.unshift.apply(viewportItems, items);\n\n        if (removeCacheItem) {\n          viewportItems.splice(-removeItemCount);\n        }\n      } else {\n        that._dataSource.viewportItems(items);\n      }\n    }\n\n    dataSource.updateLoading();\n    that._lastPageIndex = that.pageIndex();\n    that._isDelayChanged = isDelayChanged;\n\n    if (!isDelayChanged) {\n      fireChanged(that, changed, change);\n    }\n  };\n\n  var loadCore = function (that, pageIndex) {\n    var dataSource = that._dataSource;\n\n    if (pageIndex === that.pageIndex() || !dataSource.isLoading() && pageIndex < dataSource.pageCount() || !dataSource.hasKnownLastPage() && pageIndex === dataSource.pageCount()) {\n      dataSource.pageIndex(pageIndex);\n      that._loadingPageIndexes[pageIndex] = true;\n      return (0, _deferred.when)(dataSource.load()).always(function () {\n        that._loadingPageIndexes[pageIndex] = false;\n      });\n    }\n  };\n\n  return {\n    ctor: function (component, dataSource, isVirtual) {\n      var that = this;\n      that._dataSource = dataSource;\n      that.component = component;\n      that._pageIndex = that._lastPageIndex = dataSource.pageIndex();\n      that._viewportSize = 0;\n      that._viewportItemSize = 20;\n      that._viewportItemIndex = -1;\n      that._itemSizes = {};\n      that._sizeRatio = 1;\n      that._items = [];\n      that._cache = [];\n      that._isVirtual = isVirtual;\n      that._loadingPageIndexes = {};\n      that.positionChanged = (0, _callbacks2.default)();\n    },\n    getItemSizes: function () {\n      return this._itemSizes;\n    },\n    option: function () {\n      return this.component.option.apply(this.component, arguments);\n    },\n    virtualItemsCount: function () {\n      var that = this;\n      var pageIndex;\n      var itemsCount = 0;\n\n      if (isVirtualMode(that)) {\n        pageIndex = getBeginPageIndex(that);\n\n        if (pageIndex < 0) {\n          pageIndex = that._dataSource.pageIndex();\n        }\n\n        var beginItemsCount = pageIndex * that._dataSource.pageSize();\n\n        itemsCount = that._cache.length * that._dataSource.pageSize();\n        var endItemsCount = Math.max(0, that._dataSource.totalItemsCount() - itemsCount - beginItemsCount);\n        return {\n          begin: beginItemsCount,\n          end: endItemsCount\n        };\n      }\n    },\n    setViewportPosition: function (position) {\n      var that = this;\n      var result = new _deferred.Deferred();\n      var scrollingTimeout = Math.min(that.option(\"scrolling.timeout\") || 0, that._dataSource.changingDuration());\n\n      if (scrollingTimeout < that.option(\"scrolling.renderingThreshold\")) {\n        scrollingTimeout = that.option(\"scrolling.minTimeout\") || 0;\n      }\n\n      clearTimeout(that._scrollTimeoutID);\n\n      if (scrollingTimeout > 0) {\n        that._scrollTimeoutID = setTimeout(function () {\n          that._setViewportPositionCore(position);\n\n          result.resolve();\n        }, scrollingTimeout);\n      } else {\n        that._setViewportPositionCore(position);\n\n        result.resolve();\n      }\n\n      return result.promise();\n    },\n    getViewportPosition: function () {\n      return this._position || 0;\n    },\n    getItemIndexByPosition: function () {\n      var that = this;\n      var position = that._position;\n      var defaultItemSize = that.getItemSize();\n      var offset = 0;\n      var itemOffset = 0;\n      var itemOffsetsWithSize = Object.keys(that._itemSizes).concat(-1);\n\n      for (var i = 0; i < itemOffsetsWithSize.length && offset < position; i++) {\n        var itemOffsetWithSize = parseInt(itemOffsetsWithSize[i]);\n        var itemOffsetDiff = (position - offset) / defaultItemSize;\n\n        if (itemOffsetWithSize < 0 || itemOffset + itemOffsetDiff < itemOffsetWithSize) {\n          itemOffset += itemOffsetDiff;\n          break;\n        } else {\n          itemOffsetDiff = itemOffsetWithSize - itemOffset;\n          offset += itemOffsetDiff * defaultItemSize;\n          itemOffset += itemOffsetDiff;\n        }\n\n        var itemSize = that._itemSizes[itemOffsetWithSize];\n        offset += itemSize;\n        itemOffset += offset < position ? 1 : (position - offset + itemSize) / itemSize;\n      }\n\n      return Math.round(50 * itemOffset) / 50;\n    },\n    _setViewportPositionCore: function (position) {\n      this._position = position;\n      var itemIndex = this.getItemIndexByPosition();\n      var result = this.setViewportItemIndex(itemIndex);\n      this.positionChanged.fire();\n      return result;\n    },\n    setContentSize: function (size) {\n      var that = this;\n      var sizes = Array.isArray(size) && size;\n      var virtualItemsCount = that.virtualItemsCount();\n\n      if (sizes) {\n        size = sizes.reduce(function (a, b) {\n          return a + b;\n        }, 0);\n      }\n\n      that._contentSize = size;\n\n      if (virtualItemsCount) {\n        if (sizes) {\n          sizes.forEach(function (size, index) {\n            that._itemSizes[virtualItemsCount.begin + index] = size;\n          });\n        }\n\n        var virtualContentSize = (virtualItemsCount.begin + virtualItemsCount.end + that.itemsCount()) * that._viewportItemSize;\n\n        var contentHeightLimit = exports.getContentHeightLimit(_browser2.default);\n\n        if (virtualContentSize > contentHeightLimit) {\n          that._sizeRatio = contentHeightLimit / virtualContentSize;\n        } else {\n          that._sizeRatio = 1;\n        }\n      }\n    },\n    getItemSize: function () {\n      return this._viewportItemSize * this._sizeRatio;\n    },\n    getItemOffset: function (itemIndex, isEnd) {\n      var that = this;\n      var virtualItemsCount = that.virtualItemsCount();\n      var itemCount = itemIndex;\n\n      if (!virtualItemsCount) {\n        return 0;\n      }\n\n      var offset = 0;\n\n      var totalItemsCount = that._dataSource.totalItemsCount();\n\n      Object.keys(that._itemSizes).forEach(function (currentItemIndex) {\n        if (!itemCount) {\n          return;\n        }\n\n        if (isEnd ? currentItemIndex >= totalItemsCount - itemIndex : currentItemIndex < itemIndex) {\n          offset += that._itemSizes[currentItemIndex];\n          itemCount--;\n        }\n      });\n      return Math.floor(offset + itemCount * that._viewportItemSize * that._sizeRatio);\n    },\n    getContentOffset: function (type) {\n      var isEnd = \"end\" === type;\n      var virtualItemsCount = this.virtualItemsCount();\n\n      if (!virtualItemsCount) {\n        return 0;\n      }\n\n      return this.getItemOffset(isEnd ? virtualItemsCount.end : virtualItemsCount.begin, isEnd);\n    },\n    getVirtualContentSize: function () {\n      var that = this;\n      var virtualItemsCount = that.virtualItemsCount();\n      return virtualItemsCount ? that.getContentOffset(\"begin\") + that.getContentOffset(\"end\") + that._contentSize : 0;\n    },\n    getViewportItemIndex: function () {\n      return this._viewportItemIndex;\n    },\n    setViewportItemIndex: function (itemIndex) {\n      var that = this;\n\n      var pageSize = that._dataSource.pageSize();\n\n      var pageCount = that._dataSource.pageCount();\n\n      var virtualMode = isVirtualMode(that);\n      var appendMode = isAppendMode(that);\n\n      var totalItemsCount = that._dataSource.totalItemsCount();\n\n      var newPageIndex;\n      that._viewportItemIndex = itemIndex;\n\n      if (pageSize && (virtualMode || appendMode) && totalItemsCount >= 0) {\n        if (that._viewportSize && itemIndex + that._viewportSize >= totalItemsCount && !that._isVirtual) {\n          if (that._dataSource.hasKnownLastPage()) {\n            newPageIndex = pageCount - 1;\n            var lastPageSize = totalItemsCount % pageSize;\n\n            if (newPageIndex > 0 && lastPageSize > 0 && lastPageSize < that._viewportSize) {\n              newPageIndex--;\n            }\n          } else {\n            newPageIndex = pageCount;\n          }\n        } else {\n          newPageIndex = Math.floor(itemIndex / pageSize);\n          var maxPageIndex = pageCount - 1;\n          newPageIndex = Math.max(newPageIndex, 0);\n          newPageIndex = Math.min(newPageIndex, maxPageIndex);\n        }\n\n        that.pageIndex(newPageIndex);\n        return that.load();\n      }\n    },\n    viewportItemSize: function (size) {\n      if (void 0 !== size) {\n        this._viewportItemSize = size;\n      }\n\n      return this._viewportItemSize;\n    },\n    viewportSize: function (size) {\n      if (void 0 !== size) {\n        this._viewportSize = size;\n      }\n\n      return this._viewportSize;\n    },\n    pageIndex: function (_pageIndex) {\n      if (isVirtualMode(this) || isAppendMode(this)) {\n        if (void 0 !== _pageIndex) {\n          this._pageIndex = _pageIndex;\n        }\n\n        return this._pageIndex;\n      } else {\n        return this._dataSource.pageIndex(_pageIndex);\n      }\n    },\n    beginPageIndex: function beginPageIndex(defaultPageIndex) {\n      var beginPageIndex = getBeginPageIndex(this);\n\n      if (beginPageIndex < 0) {\n        beginPageIndex = void 0 !== defaultPageIndex ? defaultPageIndex : this.pageIndex();\n      }\n\n      return beginPageIndex;\n    },\n    endPageIndex: function endPageIndex() {\n      var endPageIndex = getEndPageIndex(this);\n      return endPageIndex > 0 ? endPageIndex : this._lastPageIndex;\n    },\n    pageSize: function () {\n      return this._dataSource.pageSize();\n    },\n    load: function () {\n      var that = this;\n      var dataSource = that._dataSource;\n      var result;\n\n      if (isVirtualMode(that) || isAppendMode(that)) {\n        var pageIndexForLoad = getPageIndexForLoad(that);\n\n        if (pageIndexForLoad >= 0) {\n          var loadResult = loadCore(that, pageIndexForLoad);\n\n          if (loadResult) {\n            result = new _deferred.Deferred();\n            loadResult.done(function () {\n              var delayDeferred = that._delayDeferred;\n\n              if (delayDeferred) {\n                delayDeferred.done(result.resolve).fail(result.reject);\n              } else {\n                result.resolve();\n              }\n            }).fail(result.reject);\n            dataSource.updateLoading();\n          }\n        }\n      } else {\n        result = dataSource.load();\n      }\n\n      if (!result && that._lastPageIndex !== that.pageIndex()) {\n        that._dataSource.onChanged({\n          changeType: \"pageIndex\"\n        });\n      }\n\n      return result || new _deferred.Deferred().resolve();\n    },\n    loadIfNeed: function () {\n      var that = this;\n\n      if ((isVirtualMode(that) || isAppendMode(that)) && !that._dataSource.isLoading() && (!that._isChangedFiring || that._isVirtual)) {\n        var position = that.getViewportPosition();\n\n        if (position > 0) {\n          that._setViewportPositionCore(position);\n        } else {\n          that.load();\n        }\n      }\n    },\n    handleDataChanged: function (callBase, e) {\n      var that = this;\n      var dataSource = that._dataSource;\n      var lastCacheLength = that._cache.length;\n      var changeType;\n      var removeInvisiblePages;\n\n      if (e && e.changes) {\n        fireChanged(that, callBase, e);\n      } else {\n        if (isVirtualMode(that) || isAppendMode(that)) {\n          var beginPageIndex = getBeginPageIndex(that);\n\n          if (beginPageIndex >= 0) {\n            if (isVirtualMode(that) && beginPageIndex + that._cache.length !== dataSource.pageIndex() && beginPageIndex - 1 !== dataSource.pageIndex()) {\n              lastCacheLength = 0;\n              that._cache = [];\n            }\n\n            if (isAppendMode(that)) {\n              if (0 === dataSource.pageIndex()) {\n                that._cache = [];\n              } else {\n                if (dataSource.pageIndex() < getEndPageIndex(that)) {\n                  fireChanged(that, callBase, {\n                    changeType: \"append\",\n                    items: []\n                  });\n                  return;\n                }\n              }\n            }\n          }\n\n          var cacheItem = {\n            pageIndex: dataSource.pageIndex(),\n            itemsLength: dataSource.items(true).length,\n            itemsCount: that.itemsCount(true)\n          };\n\n          if (!that.option(\"legacyRendering\") && that.option(\"scrolling.removeInvisiblePages\") && isVirtualMode(that)) {\n            removeInvisiblePages = that._cache.length > Math.max(getPreloadPageCount(this) + (that.option(\"scrolling.preloadEnabled\") ? 1 : 0), 2);\n          } else {\n            processDelayChanged(that, callBase, {\n              isDelayed: true\n            });\n          }\n\n          var removeCacheItem;\n\n          if (beginPageIndex === dataSource.pageIndex() + 1) {\n            if (removeInvisiblePages) {\n              removeCacheItem = that._cache.pop();\n            }\n\n            changeType = \"prepend\";\n\n            that._cache.unshift(cacheItem);\n          } else {\n            if (removeInvisiblePages) {\n              removeCacheItem = that._cache.shift();\n            }\n\n            changeType = \"append\";\n\n            that._cache.push(cacheItem);\n          }\n\n          var isDelayChanged = isVirtualMode(that) && 0 === lastCacheLength;\n          processChanged(that, callBase, that._cache.length > 1 ? changeType : void 0, isDelayChanged, removeCacheItem);\n          that._delayDeferred = that.load().done(function () {\n            if (processDelayChanged(that, callBase)) {\n              that.load();\n            }\n          });\n        } else {\n          processChanged(that, callBase, e);\n        }\n      }\n    },\n    itemsCount: function itemsCount(isBase) {\n      var itemsCount = 0;\n\n      if (!isBase && isVirtualMode(this)) {\n        (0, _iterator.each)(this._cache, function () {\n          itemsCount += this.itemsCount;\n        });\n      } else {\n        itemsCount = this._dataSource.itemsCount();\n      }\n\n      return itemsCount;\n    },\n    reset: function (isRefresh) {\n      this._loadingPageIndexes = {};\n      this._cache = [];\n\n      if (!isRefresh) {\n        this._itemSizes = {};\n      }\n    },\n    subscribeToWindowScrollEvents: function ($element) {\n      var that = this;\n      that._windowScroll = that._windowScroll || exports.subscribeToExternalScrollers($element, function (scrollTop) {\n        if (that.viewportItemSize()) {\n          that.setViewportPosition(scrollTop);\n        }\n      });\n    },\n    dispose: function () {\n      clearTimeout(this._scrollTimeoutID);\n      this._windowScroll && this._windowScroll.dispose();\n      this._windowScroll = null;\n    },\n    scrollTo: function (pos) {\n      this._windowScroll && this._windowScroll.scrollTo(pos);\n    }\n  };\n}());","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/ticketSystem/frontend/node_modules/devextreme/ui/grid_core/ui.grid_core.virtual_scrolling_core.js"],"names":["_renderer","require","_renderer2","_interopRequireDefault","_window","_events_engine","_events_engine2","_browser","_browser2","_type","_position","_position2","_iterator","_class","_class2","_deferred","_callbacks","_callbacks2","obj","__esModule","SCROLLING_MODE_INFINITE","SCROLLING_MODE_VIRTUAL","isVirtualMode","that","option","_isVirtual","isAppendMode","exports","getPixelRatio","window","devicePixelRatio","getContentHeightLimit","browser","msie","mozilla","getWindow","subscribeToExternalScrollers","$element","scrollChangedHandler","$targetElement","$scrollElement","scrollableArray","scrollToArray","disposeArray","getElementOffset","scrollable","$scrollableElement","element","scrollableOffset","default","offset","top","scrollTop","createWindowScrollHandler","widgetScrollStrategy","on","eventName","handler","off","subscribeToScrollEvents","isDocument","get","nodeName","data","eventsStrategy","css","push","pos","topOffset","scrollMethod","scrollTo","parent","length","each","_","dispose","VirtualScrollController","inherit","getViewportPageCount","pageSize","_dataSource","preventPreload","realViewportSize","_viewportSize","viewportSize","_viewportItemSize","getContentOffset","position","virtualItemsCount","totalItemsCount","itemIndex","begin","itemSize","_itemSizes","Math","ceil","getPreloadPageCount","previous","preloadEnabled","pageCount","getPageIndexForLoad","result","beginPageIndex","getBeginPageIndex","dataSource","_pageIndex","_cache","needToLoadPageBeforeLast","getEndPageIndex","needToLoadPrevPage","needToLoadNextPage","_loadingPageIndexes","pageIndex","fireChanged","changed","args","_isChangedFiring","processDelayChanged","_isDelayChanged","processChanged","changeType","isDelayChanged","removeCacheItem","items","slice","change","isObject","isPrepend","viewportItems","isString","removeCount","itemsCount","correctCount","removeItemCount","itemsLength","apply","splice","unshift","updateLoading","_lastPageIndex","loadCore","isLoading","hasKnownLastPage","when","load","always","ctor","component","isVirtual","_viewportItemIndex","_sizeRatio","_items","positionChanged","getItemSizes","arguments","beginItemsCount","endItemsCount","max","end","setViewportPosition","Deferred","scrollingTimeout","min","changingDuration","clearTimeout","_scrollTimeoutID","setTimeout","_setViewportPositionCore","resolve","promise","getViewportPosition","getItemIndexByPosition","defaultItemSize","getItemSize","itemOffset","itemOffsetsWithSize","Object","keys","concat","i","itemOffsetWithSize","parseInt","itemOffsetDiff","round","setViewportItemIndex","fire","setContentSize","size","sizes","Array","isArray","reduce","a","b","_contentSize","forEach","index","virtualContentSize","contentHeightLimit","getItemOffset","isEnd","itemCount","currentItemIndex","floor","type","getVirtualContentSize","getViewportItemIndex","virtualMode","appendMode","newPageIndex","lastPageSize","maxPageIndex","viewportItemSize","defaultPageIndex","endPageIndex","pageIndexForLoad","loadResult","done","delayDeferred","_delayDeferred","fail","reject","onChanged","loadIfNeed","handleDataChanged","callBase","e","lastCacheLength","removeInvisiblePages","changes","cacheItem","isDelayed","pop","shift","isBase","reset","isRefresh","subscribeToWindowScrollEvents","_windowScroll"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.virtual_scrolling_core.js)\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _renderer = require(\"../../core/renderer\");\r\nvar _renderer2 = _interopRequireDefault(_renderer);\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _events_engine = require(\"../../events/core/events_engine\");\r\nvar _events_engine2 = _interopRequireDefault(_events_engine);\r\nvar _browser = require(\"../../core/utils/browser\");\r\nvar _browser2 = _interopRequireDefault(_browser);\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _position = require(\"../../animation/position\");\r\nvar _position2 = _interopRequireDefault(_position);\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _class = require(\"../../core/class\");\r\nvar _class2 = _interopRequireDefault(_class);\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _callbacks = require(\"../../core/utils/callbacks\");\r\nvar _callbacks2 = _interopRequireDefault(_callbacks);\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar SCROLLING_MODE_INFINITE = \"infinite\";\r\nvar SCROLLING_MODE_VIRTUAL = \"virtual\";\r\nvar isVirtualMode = function(that) {\r\n    return that.option(\"scrolling.mode\") === SCROLLING_MODE_VIRTUAL || that._isVirtual\r\n};\r\nvar isAppendMode = function(that) {\r\n    return that.option(\"scrolling.mode\") === SCROLLING_MODE_INFINITE && !that._isVirtual\r\n};\r\nexports.getPixelRatio = function(window) {\r\n    return window.devicePixelRatio || 1\r\n};\r\nexports.getContentHeightLimit = function(browser) {\r\n    if (browser.msie) {\r\n        return 4e6\r\n    } else {\r\n        if (browser.mozilla) {\r\n            return 8e6\r\n        }\r\n    }\r\n    return 15e6 / exports.getPixelRatio((0, _window.getWindow)())\r\n};\r\nexports.subscribeToExternalScrollers = function($element, scrollChangedHandler, $targetElement) {\r\n    var $scrollElement;\r\n    var scrollableArray = [];\r\n    var scrollToArray = [];\r\n    var disposeArray = [];\r\n    $targetElement = $targetElement || $element;\r\n\r\n    function getElementOffset(scrollable) {\r\n        var $scrollableElement = scrollable.element ? scrollable.$element() : scrollable;\r\n        var scrollableOffset = _position2.default.offset($scrollableElement);\r\n        if (!scrollableOffset) {\r\n            return $element.offset().top\r\n        }\r\n        return scrollable.scrollTop() - (scrollableOffset.top - $element.offset().top)\r\n    }\r\n\r\n    function createWindowScrollHandler(scrollable) {\r\n        return function() {\r\n            var scrollTop = scrollable.scrollTop() - getElementOffset(scrollable);\r\n            scrollTop = scrollTop > 0 ? scrollTop : 0;\r\n            scrollChangedHandler(scrollTop)\r\n        }\r\n    }\r\n    var widgetScrollStrategy = {\r\n        on: function(scrollable, eventName, handler) {\r\n            scrollable.on(\"scroll\", handler)\r\n        },\r\n        off: function(scrollable, eventName, handler) {\r\n            scrollable.off(\"scroll\", handler)\r\n        }\r\n    };\r\n\r\n    function subscribeToScrollEvents($scrollElement) {\r\n        var isDocument = \"#document\" === $scrollElement.get(0).nodeName;\r\n        var scrollable = $scrollElement.data(\"dxScrollable\");\r\n        var eventsStrategy = widgetScrollStrategy;\r\n        if (!scrollable) {\r\n            scrollable = isDocument && (0, _renderer2.default)((0, _window.getWindow)()) || \"auto\" === $scrollElement.css(\"overflowY\") && $scrollElement;\r\n            eventsStrategy = _events_engine2.default;\r\n            if (!scrollable) {\r\n                return\r\n            }\r\n        }\r\n        var handler = createWindowScrollHandler(scrollable);\r\n        eventsStrategy.on(scrollable, \"scroll\", handler);\r\n        scrollToArray.push(function(pos) {\r\n            var topOffset = getElementOffset(scrollable);\r\n            var scrollMethod = scrollable.scrollTo ? \"scrollTo\" : \"scrollTop\";\r\n            if (pos - topOffset >= 0) {\r\n                scrollable[scrollMethod](pos + topOffset)\r\n            }\r\n        });\r\n        scrollableArray.push(scrollable);\r\n        disposeArray.push(function() {\r\n            eventsStrategy.off(scrollable, \"scroll\", handler)\r\n        })\r\n    }\r\n    for ($scrollElement = $targetElement.parent(); $scrollElement.length; $scrollElement = $scrollElement.parent()) {\r\n        subscribeToScrollEvents($scrollElement)\r\n    }\r\n    return {\r\n        scrollTo: function(pos) {\r\n            (0, _iterator.each)(scrollToArray, function(_, scrollTo) {\r\n                scrollTo(pos)\r\n            })\r\n        },\r\n        dispose: function() {\r\n            (0, _iterator.each)(disposeArray, function(_, dispose) {\r\n                dispose()\r\n            })\r\n        }\r\n    }\r\n};\r\nexports.VirtualScrollController = _class2.default.inherit(function() {\r\n    var getViewportPageCount = function(that) {\r\n        var pageSize = that._dataSource.pageSize();\r\n        var preventPreload = that.option(\"scrolling.preventPreload\");\r\n        if (preventPreload) {\r\n            return 0\r\n        }\r\n        var realViewportSize = that._viewportSize;\r\n        if (isVirtualMode(that) && !that.option(\"legacyRendering\") && that.option(\"scrolling.removeInvisiblePages\")) {\r\n            realViewportSize = 0;\r\n            var viewportSize = that._viewportSize * that._viewportItemSize;\r\n            var offset = that.getContentOffset();\r\n            var position = that._position || 0;\r\n            var virtualItemsCount = that.virtualItemsCount();\r\n            var totalItemsCount = that._dataSource.totalItemsCount();\r\n            for (var itemIndex = virtualItemsCount.begin; itemIndex < totalItemsCount; itemIndex++) {\r\n                if (offset >= position + viewportSize) {\r\n                    break\r\n                }\r\n                var itemSize = that._itemSizes[itemIndex] || that._viewportItemSize;\r\n                offset += itemSize;\r\n                if (offset >= position) {\r\n                    realViewportSize++\r\n                }\r\n            }\r\n        }\r\n        return pageSize && realViewportSize > 0 ? Math.ceil(realViewportSize / pageSize) : 1\r\n    };\r\n    var getPreloadPageCount = function(that, previous) {\r\n        var preloadEnabled = that.option(\"scrolling.preloadEnabled\");\r\n        var pageCount = getViewportPageCount(that);\r\n        if (pageCount) {\r\n            if (previous) {\r\n                pageCount = preloadEnabled ? 1 : 0\r\n            } else {\r\n                if (preloadEnabled) {\r\n                    pageCount++\r\n                }\r\n                if (isAppendMode(that)) {\r\n                    pageCount--\r\n                }\r\n            }\r\n        }\r\n        return pageCount\r\n    };\r\n    var getPageIndexForLoad = function(that) {\r\n        var result = -1;\r\n        var beginPageIndex = getBeginPageIndex(that);\r\n        var dataSource = that._dataSource;\r\n        if (beginPageIndex < 0) {\r\n            result = that._pageIndex\r\n        } else {\r\n            if (!that._cache[that._pageIndex - beginPageIndex]) {\r\n                result = that._pageIndex\r\n            } else {\r\n                if (beginPageIndex >= 0 && that._viewportSize >= 0) {\r\n                    if (beginPageIndex > 0) {\r\n                        var needToLoadPageBeforeLast = getEndPageIndex(that) + 1 === dataSource.pageCount() && that._cache.length < getPreloadPageCount(that) + 1;\r\n                        var needToLoadPrevPage = needToLoadPageBeforeLast || that._pageIndex === beginPageIndex && getPreloadPageCount(that, true);\r\n                        if (needToLoadPrevPage) {\r\n                            result = beginPageIndex - 1\r\n                        }\r\n                    }\r\n                    if (result < 0) {\r\n                        var needToLoadNextPage = beginPageIndex + that._cache.length <= that._pageIndex + getPreloadPageCount(that);\r\n                        if (needToLoadNextPage) {\r\n                            result = beginPageIndex + that._cache.length\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (that._loadingPageIndexes[result]) {\r\n            result = -1\r\n        }\r\n        return result\r\n    };\r\n\r\n    function getBeginPageIndex(that) {\r\n        return that._cache.length ? that._cache[0].pageIndex : -1\r\n    }\r\n\r\n    function getEndPageIndex(that) {\r\n        return that._cache.length ? that._cache[that._cache.length - 1].pageIndex : -1\r\n    }\r\n    var fireChanged = function(that, changed, args) {\r\n        that._isChangedFiring = true;\r\n        changed(args);\r\n        that._isChangedFiring = false\r\n    };\r\n    var processDelayChanged = function(that, changed, args) {\r\n        if (that._isDelayChanged) {\r\n            that._isDelayChanged = false;\r\n            fireChanged(that, changed, args);\r\n            return true\r\n        }\r\n    };\r\n    var processChanged = function(that, changed, changeType, isDelayChanged, removeCacheItem) {\r\n        var dataSource = that._dataSource;\r\n        var items = dataSource.items().slice();\r\n        var change = (0, _type.isObject)(changeType) ? changeType : void 0;\r\n        var isPrepend = \"prepend\" === changeType;\r\n        var viewportItems = dataSource.viewportItems();\r\n        if (changeType && (0, _type.isString)(changeType) && !that._isDelayChanged) {\r\n            change = {\r\n                changeType: changeType,\r\n                items: items\r\n            };\r\n            if (removeCacheItem) {\r\n                change.removeCount = removeCacheItem.itemsCount;\r\n                if (change.removeCount && dataSource.correctCount) {\r\n                    change.removeCount = dataSource.correctCount(viewportItems, change.removeCount, isPrepend)\r\n                }\r\n            }\r\n        }\r\n        var removeItemCount = removeCacheItem ? removeCacheItem.itemsLength : 0;\r\n        if (removeItemCount && dataSource.correctCount) {\r\n            removeItemCount = dataSource.correctCount(viewportItems, removeItemCount, isPrepend)\r\n        }\r\n        if (\"append\" === changeType) {\r\n            viewportItems.push.apply(viewportItems, items);\r\n            if (removeCacheItem) {\r\n                viewportItems.splice(0, removeItemCount)\r\n            }\r\n        } else {\r\n            if (isPrepend) {\r\n                viewportItems.unshift.apply(viewportItems, items);\r\n                if (removeCacheItem) {\r\n                    viewportItems.splice(-removeItemCount)\r\n                }\r\n            } else {\r\n                that._dataSource.viewportItems(items)\r\n            }\r\n        }\r\n        dataSource.updateLoading();\r\n        that._lastPageIndex = that.pageIndex();\r\n        that._isDelayChanged = isDelayChanged;\r\n        if (!isDelayChanged) {\r\n            fireChanged(that, changed, change)\r\n        }\r\n    };\r\n    var loadCore = function(that, pageIndex) {\r\n        var dataSource = that._dataSource;\r\n        if (pageIndex === that.pageIndex() || !dataSource.isLoading() && pageIndex < dataSource.pageCount() || !dataSource.hasKnownLastPage() && pageIndex === dataSource.pageCount()) {\r\n            dataSource.pageIndex(pageIndex);\r\n            that._loadingPageIndexes[pageIndex] = true;\r\n            return (0, _deferred.when)(dataSource.load()).always(function() {\r\n                that._loadingPageIndexes[pageIndex] = false\r\n            })\r\n        }\r\n    };\r\n    return {\r\n        ctor: function(component, dataSource, isVirtual) {\r\n            var that = this;\r\n            that._dataSource = dataSource;\r\n            that.component = component;\r\n            that._pageIndex = that._lastPageIndex = dataSource.pageIndex();\r\n            that._viewportSize = 0;\r\n            that._viewportItemSize = 20;\r\n            that._viewportItemIndex = -1;\r\n            that._itemSizes = {};\r\n            that._sizeRatio = 1;\r\n            that._items = [];\r\n            that._cache = [];\r\n            that._isVirtual = isVirtual;\r\n            that._loadingPageIndexes = {};\r\n            that.positionChanged = (0, _callbacks2.default)()\r\n        },\r\n        getItemSizes: function() {\r\n            return this._itemSizes\r\n        },\r\n        option: function() {\r\n            return this.component.option.apply(this.component, arguments)\r\n        },\r\n        virtualItemsCount: function() {\r\n            var that = this;\r\n            var pageIndex;\r\n            var itemsCount = 0;\r\n            if (isVirtualMode(that)) {\r\n                pageIndex = getBeginPageIndex(that);\r\n                if (pageIndex < 0) {\r\n                    pageIndex = that._dataSource.pageIndex()\r\n                }\r\n                var beginItemsCount = pageIndex * that._dataSource.pageSize();\r\n                itemsCount = that._cache.length * that._dataSource.pageSize();\r\n                var endItemsCount = Math.max(0, that._dataSource.totalItemsCount() - itemsCount - beginItemsCount);\r\n                return {\r\n                    begin: beginItemsCount,\r\n                    end: endItemsCount\r\n                }\r\n            }\r\n        },\r\n        setViewportPosition: function(position) {\r\n            var that = this;\r\n            var result = new _deferred.Deferred;\r\n            var scrollingTimeout = Math.min(that.option(\"scrolling.timeout\") || 0, that._dataSource.changingDuration());\r\n            if (scrollingTimeout < that.option(\"scrolling.renderingThreshold\")) {\r\n                scrollingTimeout = that.option(\"scrolling.minTimeout\") || 0\r\n            }\r\n            clearTimeout(that._scrollTimeoutID);\r\n            if (scrollingTimeout > 0) {\r\n                that._scrollTimeoutID = setTimeout(function() {\r\n                    that._setViewportPositionCore(position);\r\n                    result.resolve()\r\n                }, scrollingTimeout)\r\n            } else {\r\n                that._setViewportPositionCore(position);\r\n                result.resolve()\r\n            }\r\n            return result.promise()\r\n        },\r\n        getViewportPosition: function() {\r\n            return this._position || 0\r\n        },\r\n        getItemIndexByPosition: function() {\r\n            var that = this;\r\n            var position = that._position;\r\n            var defaultItemSize = that.getItemSize();\r\n            var offset = 0;\r\n            var itemOffset = 0;\r\n            var itemOffsetsWithSize = Object.keys(that._itemSizes).concat(-1);\r\n            for (var i = 0; i < itemOffsetsWithSize.length && offset < position; i++) {\r\n                var itemOffsetWithSize = parseInt(itemOffsetsWithSize[i]);\r\n                var itemOffsetDiff = (position - offset) / defaultItemSize;\r\n                if (itemOffsetWithSize < 0 || itemOffset + itemOffsetDiff < itemOffsetWithSize) {\r\n                    itemOffset += itemOffsetDiff;\r\n                    break\r\n                } else {\r\n                    itemOffsetDiff = itemOffsetWithSize - itemOffset;\r\n                    offset += itemOffsetDiff * defaultItemSize;\r\n                    itemOffset += itemOffsetDiff\r\n                }\r\n                var itemSize = that._itemSizes[itemOffsetWithSize];\r\n                offset += itemSize;\r\n                itemOffset += offset < position ? 1 : (position - offset + itemSize) / itemSize\r\n            }\r\n            return Math.round(50 * itemOffset) / 50\r\n        },\r\n        _setViewportPositionCore: function(position) {\r\n            this._position = position;\r\n            var itemIndex = this.getItemIndexByPosition();\r\n            var result = this.setViewportItemIndex(itemIndex);\r\n            this.positionChanged.fire();\r\n            return result\r\n        },\r\n        setContentSize: function(size) {\r\n            var that = this;\r\n            var sizes = Array.isArray(size) && size;\r\n            var virtualItemsCount = that.virtualItemsCount();\r\n            if (sizes) {\r\n                size = sizes.reduce(function(a, b) {\r\n                    return a + b\r\n                }, 0)\r\n            }\r\n            that._contentSize = size;\r\n            if (virtualItemsCount) {\r\n                if (sizes) {\r\n                    sizes.forEach(function(size, index) {\r\n                        that._itemSizes[virtualItemsCount.begin + index] = size\r\n                    })\r\n                }\r\n                var virtualContentSize = (virtualItemsCount.begin + virtualItemsCount.end + that.itemsCount()) * that._viewportItemSize;\r\n                var contentHeightLimit = exports.getContentHeightLimit(_browser2.default);\r\n                if (virtualContentSize > contentHeightLimit) {\r\n                    that._sizeRatio = contentHeightLimit / virtualContentSize\r\n                } else {\r\n                    that._sizeRatio = 1\r\n                }\r\n            }\r\n        },\r\n        getItemSize: function() {\r\n            return this._viewportItemSize * this._sizeRatio\r\n        },\r\n        getItemOffset: function(itemIndex, isEnd) {\r\n            var that = this;\r\n            var virtualItemsCount = that.virtualItemsCount();\r\n            var itemCount = itemIndex;\r\n            if (!virtualItemsCount) {\r\n                return 0\r\n            }\r\n            var offset = 0;\r\n            var totalItemsCount = that._dataSource.totalItemsCount();\r\n            Object.keys(that._itemSizes).forEach(function(currentItemIndex) {\r\n                if (!itemCount) {\r\n                    return\r\n                }\r\n                if (isEnd ? currentItemIndex >= totalItemsCount - itemIndex : currentItemIndex < itemIndex) {\r\n                    offset += that._itemSizes[currentItemIndex];\r\n                    itemCount--\r\n                }\r\n            });\r\n            return Math.floor(offset + itemCount * that._viewportItemSize * that._sizeRatio)\r\n        },\r\n        getContentOffset: function(type) {\r\n            var isEnd = \"end\" === type;\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            if (!virtualItemsCount) {\r\n                return 0\r\n            }\r\n            return this.getItemOffset(isEnd ? virtualItemsCount.end : virtualItemsCount.begin, isEnd)\r\n        },\r\n        getVirtualContentSize: function() {\r\n            var that = this;\r\n            var virtualItemsCount = that.virtualItemsCount();\r\n            return virtualItemsCount ? that.getContentOffset(\"begin\") + that.getContentOffset(\"end\") + that._contentSize : 0\r\n        },\r\n        getViewportItemIndex: function() {\r\n            return this._viewportItemIndex\r\n        },\r\n        setViewportItemIndex: function(itemIndex) {\r\n            var that = this;\r\n            var pageSize = that._dataSource.pageSize();\r\n            var pageCount = that._dataSource.pageCount();\r\n            var virtualMode = isVirtualMode(that);\r\n            var appendMode = isAppendMode(that);\r\n            var totalItemsCount = that._dataSource.totalItemsCount();\r\n            var newPageIndex;\r\n            that._viewportItemIndex = itemIndex;\r\n            if (pageSize && (virtualMode || appendMode) && totalItemsCount >= 0) {\r\n                if (that._viewportSize && itemIndex + that._viewportSize >= totalItemsCount && !that._isVirtual) {\r\n                    if (that._dataSource.hasKnownLastPage()) {\r\n                        newPageIndex = pageCount - 1;\r\n                        var lastPageSize = totalItemsCount % pageSize;\r\n                        if (newPageIndex > 0 && lastPageSize > 0 && lastPageSize < that._viewportSize) {\r\n                            newPageIndex--\r\n                        }\r\n                    } else {\r\n                        newPageIndex = pageCount\r\n                    }\r\n                } else {\r\n                    newPageIndex = Math.floor(itemIndex / pageSize);\r\n                    var maxPageIndex = pageCount - 1;\r\n                    newPageIndex = Math.max(newPageIndex, 0);\r\n                    newPageIndex = Math.min(newPageIndex, maxPageIndex)\r\n                }\r\n                that.pageIndex(newPageIndex);\r\n                return that.load()\r\n            }\r\n        },\r\n        viewportItemSize: function(size) {\r\n            if (void 0 !== size) {\r\n                this._viewportItemSize = size\r\n            }\r\n            return this._viewportItemSize\r\n        },\r\n        viewportSize: function(size) {\r\n            if (void 0 !== size) {\r\n                this._viewportSize = size\r\n            }\r\n            return this._viewportSize\r\n        },\r\n        pageIndex: function(_pageIndex) {\r\n            if (isVirtualMode(this) || isAppendMode(this)) {\r\n                if (void 0 !== _pageIndex) {\r\n                    this._pageIndex = _pageIndex\r\n                }\r\n                return this._pageIndex\r\n            } else {\r\n                return this._dataSource.pageIndex(_pageIndex)\r\n            }\r\n        },\r\n        beginPageIndex: function beginPageIndex(defaultPageIndex) {\r\n            var beginPageIndex = getBeginPageIndex(this);\r\n            if (beginPageIndex < 0) {\r\n                beginPageIndex = void 0 !== defaultPageIndex ? defaultPageIndex : this.pageIndex()\r\n            }\r\n            return beginPageIndex\r\n        },\r\n        endPageIndex: function endPageIndex() {\r\n            var endPageIndex = getEndPageIndex(this);\r\n            return endPageIndex > 0 ? endPageIndex : this._lastPageIndex\r\n        },\r\n        pageSize: function() {\r\n            return this._dataSource.pageSize()\r\n        },\r\n        load: function() {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var result;\r\n            if (isVirtualMode(that) || isAppendMode(that)) {\r\n                var pageIndexForLoad = getPageIndexForLoad(that);\r\n                if (pageIndexForLoad >= 0) {\r\n                    var loadResult = loadCore(that, pageIndexForLoad);\r\n                    if (loadResult) {\r\n                        result = new _deferred.Deferred;\r\n                        loadResult.done(function() {\r\n                            var delayDeferred = that._delayDeferred;\r\n                            if (delayDeferred) {\r\n                                delayDeferred.done(result.resolve).fail(result.reject)\r\n                            } else {\r\n                                result.resolve()\r\n                            }\r\n                        }).fail(result.reject);\r\n                        dataSource.updateLoading()\r\n                    }\r\n                }\r\n            } else {\r\n                result = dataSource.load()\r\n            }\r\n            if (!result && that._lastPageIndex !== that.pageIndex()) {\r\n                that._dataSource.onChanged({\r\n                    changeType: \"pageIndex\"\r\n                })\r\n            }\r\n            return result || (new _deferred.Deferred).resolve()\r\n        },\r\n        loadIfNeed: function() {\r\n            var that = this;\r\n            if ((isVirtualMode(that) || isAppendMode(that)) && !that._dataSource.isLoading() && (!that._isChangedFiring || that._isVirtual)) {\r\n                var position = that.getViewportPosition();\r\n                if (position > 0) {\r\n                    that._setViewportPositionCore(position)\r\n                } else {\r\n                    that.load()\r\n                }\r\n            }\r\n        },\r\n        handleDataChanged: function(callBase, e) {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var lastCacheLength = that._cache.length;\r\n            var changeType;\r\n            var removeInvisiblePages;\r\n            if (e && e.changes) {\r\n                fireChanged(that, callBase, e)\r\n            } else {\r\n                if (isVirtualMode(that) || isAppendMode(that)) {\r\n                    var beginPageIndex = getBeginPageIndex(that);\r\n                    if (beginPageIndex >= 0) {\r\n                        if (isVirtualMode(that) && beginPageIndex + that._cache.length !== dataSource.pageIndex() && beginPageIndex - 1 !== dataSource.pageIndex()) {\r\n                            lastCacheLength = 0;\r\n                            that._cache = []\r\n                        }\r\n                        if (isAppendMode(that)) {\r\n                            if (0 === dataSource.pageIndex()) {\r\n                                that._cache = []\r\n                            } else {\r\n                                if (dataSource.pageIndex() < getEndPageIndex(that)) {\r\n                                    fireChanged(that, callBase, {\r\n                                        changeType: \"append\",\r\n                                        items: []\r\n                                    });\r\n                                    return\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    var cacheItem = {\r\n                        pageIndex: dataSource.pageIndex(),\r\n                        itemsLength: dataSource.items(true).length,\r\n                        itemsCount: that.itemsCount(true)\r\n                    };\r\n                    if (!that.option(\"legacyRendering\") && that.option(\"scrolling.removeInvisiblePages\") && isVirtualMode(that)) {\r\n                        removeInvisiblePages = that._cache.length > Math.max(getPreloadPageCount(this) + (that.option(\"scrolling.preloadEnabled\") ? 1 : 0), 2)\r\n                    } else {\r\n                        processDelayChanged(that, callBase, {\r\n                            isDelayed: true\r\n                        })\r\n                    }\r\n                    var removeCacheItem;\r\n                    if (beginPageIndex === dataSource.pageIndex() + 1) {\r\n                        if (removeInvisiblePages) {\r\n                            removeCacheItem = that._cache.pop()\r\n                        }\r\n                        changeType = \"prepend\";\r\n                        that._cache.unshift(cacheItem)\r\n                    } else {\r\n                        if (removeInvisiblePages) {\r\n                            removeCacheItem = that._cache.shift()\r\n                        }\r\n                        changeType = \"append\";\r\n                        that._cache.push(cacheItem)\r\n                    }\r\n                    var isDelayChanged = isVirtualMode(that) && 0 === lastCacheLength;\r\n                    processChanged(that, callBase, that._cache.length > 1 ? changeType : void 0, isDelayChanged, removeCacheItem);\r\n                    that._delayDeferred = that.load().done(function() {\r\n                        if (processDelayChanged(that, callBase)) {\r\n                            that.load()\r\n                        }\r\n                    })\r\n                } else {\r\n                    processChanged(that, callBase, e)\r\n                }\r\n            }\r\n        },\r\n        itemsCount: function itemsCount(isBase) {\r\n            var itemsCount = 0;\r\n            if (!isBase && isVirtualMode(this)) {\r\n                (0, _iterator.each)(this._cache, function() {\r\n                    itemsCount += this.itemsCount\r\n                })\r\n            } else {\r\n                itemsCount = this._dataSource.itemsCount()\r\n            }\r\n            return itemsCount\r\n        },\r\n        reset: function(isRefresh) {\r\n            this._loadingPageIndexes = {};\r\n            this._cache = [];\r\n            if (!isRefresh) {\r\n                this._itemSizes = {}\r\n            }\r\n        },\r\n        subscribeToWindowScrollEvents: function($element) {\r\n            var that = this;\r\n            that._windowScroll = that._windowScroll || exports.subscribeToExternalScrollers($element, function(scrollTop) {\r\n                if (that.viewportItemSize()) {\r\n                    that.setViewportPosition(scrollTop)\r\n                }\r\n            })\r\n        },\r\n        dispose: function() {\r\n            clearTimeout(this._scrollTimeoutID);\r\n            this._windowScroll && this._windowScroll.dispose();\r\n            this._windowScroll = null\r\n        },\r\n        scrollTo: function(pos) {\r\n            this._windowScroll && this._windowScroll.scrollTo(pos)\r\n        }\r\n    }\r\n}());\r\n"]},"metadata":{},"sourceType":"script"}