{"ast":null,"code":"import axios from 'axios';\nexport const ticket = newTicket => {\n  return axios.post('users/register', {\n    name: newTicket.name,\n    img: newTicket.img,\n    content: newTicket.content,\n    status: newTicket.status,\n    messages: newTicket.messages,\n    userid: newTicket.userid\n  }).then(response => {\n    console.log('New ticket success');\n  });\n};\n/*export const login = user => {\r\n  return axios\r\n    .post('users/login', {\r\n      email: user.email,\r\n      password: user.password\r\n    })\r\n    .then(response => {\r\n      localStorage.setItem('usertoken', response.data)\r\n      return response.data\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n}*/","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/ticketSystem/frontend/src/components/TicketFuntions.js"],"names":["axios","ticket","newTicket","post","name","img","content","status","messages","userid","then","response","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,MAAM,GAAGC,SAAS,IAAI;AACjC,SAAOF,KAAK,CACTG,IADI,CACC,gBADD,EACmB;AACtBC,IAAAA,IAAI,EAAEF,SAAS,CAACE,IADM;AAEtBC,IAAAA,GAAG,EAAEH,SAAS,CAACG,GAFO;AAGtBC,IAAAA,OAAO,EAAEJ,SAAS,CAACI,OAHG;AAItBC,IAAAA,MAAM,EAAEL,SAAS,CAACK,MAJI;AAKtBC,IAAAA,QAAQ,EAAEN,SAAS,CAACM,QALE;AAMtBC,IAAAA,MAAM,EAAEP,SAAS,CAACO;AANI,GADnB,EASJC,IATI,CASCC,QAAQ,IAAI;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD,GAXI,CAAP;AAYD,CAbM;AAeP","sourcesContent":["import axios from 'axios'\r\n\r\nexport const ticket = newTicket => {\r\n  return axios\r\n    .post('users/register', {\r\n      name: newTicket.name,\r\n      img: newTicket.img,\r\n      content: newTicket.content,\r\n      status: newTicket.status,\r\n      messages: newTicket.messages,\r\n      userid: newTicket.userid\r\n    })\r\n    .then(response => {\r\n      console.log('New ticket success')\r\n    })\r\n}\r\n\r\n/*export const login = user => {\r\n  return axios\r\n    .post('users/login', {\r\n      email: user.email,\r\n      password: user.password\r\n    })\r\n    .then(response => {\r\n      localStorage.setItem('usertoken', response.data)\r\n      return response.data\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n}*/\r\n\r\n"]},"metadata":{},"sourceType":"module"}