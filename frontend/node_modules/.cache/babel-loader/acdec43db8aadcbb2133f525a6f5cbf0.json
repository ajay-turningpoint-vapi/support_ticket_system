{"ast":null,"code":"/**\r\n * DevExtreme (ui/pager.js)\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../core/renderer\");\n\nvar eventsEngine = require(\"../events/core/events_engine\");\n\nvar Class = require(\"../core/class\");\n\nvar stringUtils = require(\"../core/utils/string\");\n\nvar registerComponent = require(\"../core/component_registrator\");\n\nvar commonUtils = require(\"../core/utils/common\");\n\nvar each = require(\"../core/utils/iterator\").each;\n\nvar typeUtils = require(\"../core/utils/type\");\n\nvar extend = require(\"../core/utils/extend\").extend;\n\nvar clickEvent = require(\"../events/click\");\n\nvar pointerEvents = require(\"../events/pointer\");\n\nvar messageLocalization = require(\"../localization/message\");\n\nvar Widget = require(\"./widget/ui.widget\");\n\nvar SelectBox = require(\"./select_box\");\n\nvar NumberBox = require(\"./number_box\");\n\nvar eventUtils = require(\"../events/utils\");\n\nvar accessibility = require(\"./shared/accessibility\");\n\nvar PAGES_LIMITER = 4;\nvar PAGER_CLASS = \"dx-pager\";\nvar PAGER_PAGE_CLASS = \"dx-page\";\nvar PAGER_PAGE_CLASS_SELECTOR = \".\" + PAGER_PAGE_CLASS;\nvar PAGER_PAGES_CLASS = \"dx-pages\";\nvar LIGHT_MODE_CLASS = \"dx-light-mode\";\nvar LIGHT_PAGES_CLASS = \"dx-light-pages\";\nvar PAGER_PAGE_INDEX_CLASS = \"dx-page-index\";\nvar PAGER_PAGES_COUNT_CLASS = \"dx-pages-count\";\nvar PAGER_SELECTION_CLASS = \"dx-selection\";\nvar PAGER_PAGE_SEPARATOR_CLASS = \"dx-separator\";\nvar PAGER_PAGE_SIZES_CLASS = \"dx-page-sizes\";\nvar PAGER_PAGE_SIZE_CLASS = \"dx-page-size\";\nvar PAGER_PAGE_SIZE_CLASS_SELECTOR = \".\" + PAGER_PAGE_SIZE_CLASS;\nvar PAGER_NAVIGATE_BUTTON = \"dx-navigate-button\";\nvar PAGER_PREV_BUTTON_CLASS = \"dx-prev-button\";\nvar PAGER_NEXT_BUTTON_CLASS = \"dx-next-button\";\nvar PAGER_INFO_CLASS = \"dx-info\";\nvar PAGER_INFO_TEXT_CLASS = \"dx-info-text\";\nvar PAGER_BUTTON_DISABLE_CLASS = \"dx-button-disable\";\nvar Page = Class.inherit({\n  ctor: function (value, index) {\n    var that = this;\n    that.index = index;\n    that._$page = $(\"<div>\").text(value).addClass(PAGER_PAGE_CLASS);\n  },\n  value: function (_value) {\n    var that = this;\n\n    if (typeUtils.isDefined(_value)) {\n      that._$page.text(_value);\n    } else {\n      var text = that._$page.text();\n\n      if (typeUtils.isNumeric(text)) {\n        return parseInt(text);\n      } else {\n        return text;\n      }\n    }\n  },\n  element: function () {\n    return this._$page;\n  },\n  select: function (value) {\n    this._$page.toggleClass(PAGER_SELECTION_CLASS, value);\n  },\n  render: function (rootElement, rtlEnabled) {\n    rtlEnabled ? this._$page.prependTo(rootElement) : this._$page.appendTo(rootElement);\n  }\n});\nvar Pager = Widget.inherit({\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      visible: true,\n      pagesNavigatorVisible: \"auto\",\n      pageIndex: 1,\n      maxPagesCount: 10,\n      pageCount: 10,\n      totalCount: 0,\n      pageSize: 5,\n      showPageSizes: true,\n      pageSizes: [5, 10],\n      hasKnownLastPage: true,\n      showNavigationButtons: false,\n      showInfo: false,\n      infoText: messageLocalization.getFormatter(\"dxPager-infoText\"),\n      pagesCountText: messageLocalization.getFormatter(\"dxPager-pagesCountText\"),\n      rtlEnabled: false,\n      lightModeEnabled: false,\n      pageIndexChanged: commonUtils.noop,\n      pageSizeChanged: commonUtils.noop\n    });\n  },\n  _toggleVisibility: function (value) {\n    var $element = this.$element();\n\n    if ($element) {\n      $element.css(\"display\", value ? \"\" : \"none\");\n    }\n  },\n  _getPages: function (currentPage, count) {\n    var pages = [];\n    var showMoreButton = !this.option(\"hasKnownLastPage\");\n    var firstValue;\n    var i;\n\n    if (count > 0 || showMoreButton) {\n      if (count <= this.option(\"maxPagesCount\")) {\n        for (i = 1; i <= count; i++) {\n          pages.push(new Page(i, i - 1));\n        }\n\n        if (showMoreButton) {\n          pages.push(new Page(\">\", i - 1));\n        }\n      } else {\n        pages.push(new Page(1, 0));\n        firstValue = currentPage ? currentPage.value() - currentPage.index : 1;\n\n        for (i = 1; i <= PAGES_LIMITER; i++) {\n          pages.push(new Page(firstValue + i, i));\n        }\n\n        pages.push(new Page(count, PAGES_LIMITER + 1));\n\n        if (showMoreButton) {\n          pages.push(new Page(\">\", PAGES_LIMITER + 1));\n        }\n      }\n    }\n\n    return pages;\n  },\n  _getPageByValue: function (value) {\n    var that = this;\n    var page;\n    var i;\n\n    for (i = 0; i < that._pages.length; i++) {\n      page = that._pages[i];\n\n      if (page.value() === value) {\n        return page;\n      }\n    }\n  },\n  _processSelectedPage: function (maxPagesCount, pageIndex, pageCount) {\n    var that = this;\n    var isPageIndexValid = false;\n    var selectedPageIndex;\n\n    if (that._pages) {\n      each(that._pages, function (key, page) {\n        if (pageIndex === page.value()) {\n          isPageIndexValid = true;\n        }\n      });\n\n      if (!isPageIndexValid) {\n        that.selectedPage = null;\n      }\n    }\n\n    if (typeUtils.isDefined(that.selectedPage)) {\n      if (pageIndex === pageCount && pageCount > maxPagesCount && that.selectedPage.index !== PAGES_LIMITER + 1) {\n        that.selectedPage.index = PAGES_LIMITER + 1;\n      }\n    } else {\n      if (pageIndex > PAGES_LIMITER && pageIndex < pageCount) {\n        selectedPageIndex = pageCount - PAGES_LIMITER < pageIndex ? PAGES_LIMITER - (pageCount - pageIndex) + 1 : 2;\n        that.selectedPage = new Page(pageIndex, selectedPageIndex);\n      }\n    }\n  },\n  _selectPageByValue: function (value) {\n    var that = this;\n    var i;\n\n    var page = that._getPageByValue(value);\n\n    var pages = that._pages;\n    var pagesLength = pages.length;\n    var nextPage;\n    var morePage;\n\n    if (!typeUtils.isDefined(page)) {\n      return;\n    }\n\n    var prevPage = that._pages[page.index - 1];\n    nextPage = that._pages[page.index + 1];\n\n    if (nextPage && \">\" === nextPage.value()) {\n      morePage = nextPage;\n      nextPage = void 0;\n      pagesLength--;\n      pages.pop();\n    }\n\n    if (that.selectedPage) {\n      that.selectedPage.select(false);\n    }\n\n    page.select(true);\n    that.selectedPage = page;\n\n    if (nextPage && nextPage.value() - value > 1) {\n      if (0 !== page.index) {\n        prevPage.value(value + 1);\n\n        that._pages.splice(page.index, 1);\n\n        that._pages.splice(page.index - 1, 0, page);\n\n        that._pages[page.index].index = page.index;\n        page.index = page.index - 1;\n\n        for (i = page.index - 1; i > 0; i--) {\n          that._pages[i].value(that._pages[i + 1].value() - 1);\n        }\n      } else {\n        for (i = 0; i < pagesLength - 1; i++) {\n          that._pages[i].value(i + 1);\n        }\n      }\n    }\n\n    if (prevPage && value - prevPage.value() > 1) {\n      if (page.index !== pagesLength - 1) {\n        nextPage.value(value - 1);\n\n        that._pages.splice(page.index, 1);\n\n        that._pages.splice(page.index + 1, 0, page);\n\n        that._pages[page.index].index = page.index;\n        page.index = page.index + 1;\n\n        for (i = page.index + 1; i < pagesLength - 1; i++) {\n          that._pages[i].value(that._pages[i - 1].value() + 1);\n        }\n      } else {\n        for (i = 1; i <= pagesLength - 2; i++) {\n          that._pages[pagesLength - 1 - i].value(that._pages[pagesLength - 1].value() - i);\n        }\n      }\n    }\n\n    if (morePage) {\n      pages.push(morePage);\n    }\n  },\n  _updatePagesTabIndices: function () {\n    var _this = this;\n\n    var $selectedPage = this.selectedPage._$page;\n\n    var updatePageIndices = function updatePageIndices() {\n      var buttons = $(_this.element()).find(\"[role=button]:not(.dx-button-disable)\");\n      each(buttons, function (_, element) {\n        return $(element).attr(\"tabindex\", 0);\n      });\n      eventsEngine.off($selectedPage, \"focus\", updatePageIndices);\n    };\n\n    eventsEngine.on($selectedPage, \"focus\", updatePageIndices);\n  },\n  _nextPage: function (direction) {\n    var pageIndex = this.option(\"pageIndex\");\n    var pageCount = this.option(\"pageCount\");\n\n    if (typeUtils.isDefined(pageIndex)) {\n      pageIndex = \"next\" === direction ? ++pageIndex : --pageIndex;\n\n      if (pageIndex > 0 && pageIndex <= pageCount) {\n        this.option(\"pageIndex\", pageIndex);\n      }\n    }\n  },\n  _wrapClickAction: function (action) {\n    var _this2 = this;\n\n    return function (e) {\n      if (\"dxpointerup\" === e.type) {\n        _this2._pointerUpHappened = true;\n      } else {\n        if (_this2._pointerUpHappened) {\n          _this2._pointerUpHappened = false;\n          return;\n        }\n      }\n\n      action({\n        event: e\n      });\n    };\n  },\n  _renderPages: function (pages) {\n    var that = this;\n    var $separator;\n    var pagesLength = pages.length;\n\n    var clickPagesIndexAction = that._createAction(function (args) {\n      var e = args.event;\n      var pageNumber = $(e.target).text();\n      var pageIndex = \">\" === pageNumber ? that.option(\"pageCount\") + 1 : Number(pageNumber);\n      that.option(\"pageIndex\", pageIndex);\n    });\n\n    var page;\n\n    if (pagesLength > 1) {\n      that._pageClickHandler = this._wrapClickAction(clickPagesIndexAction);\n      eventsEngine.on(that._$pagesChooser, eventUtils.addNamespace([pointerEvents.up, clickEvent.name], that.Name + \"Pages\"), PAGER_PAGE_CLASS_SELECTOR, that._pageClickHandler);\n      accessibility.registerKeyboardAction(\"pager\", that, that._$pagesChooser, PAGER_PAGE_CLASS_SELECTOR, clickPagesIndexAction);\n    }\n\n    for (var i = 0; i < pagesLength; i++) {\n      page = pages[i];\n      page.render(that._$pagesChooser, that.option(\"rtlEnabled\"));\n      that.setAria({\n        role: \"button\",\n        label: \"Page \" + page.value()\n      }, page.element());\n      accessibility.setTabIndex(that, page.element());\n\n      if (pages[i + 1] && pages[i + 1].value() - page.value() > 1) {\n        $separator = $(\"<div>\").text(\". . .\").addClass(PAGER_PAGE_SEPARATOR_CLASS);\n        that.option(\"rtlEnabled\") ? $separator.prependTo(that._$pagesChooser) : $separator.appendTo(that._$pagesChooser);\n      }\n    }\n  },\n  _calculateLightPagesWidth: function ($pageIndex, pageCount) {\n    return Number($pageIndex.css(\"minWidth\").replace(\"px\", \"\")) + 10 * pageCount.toString().length;\n  },\n  _renderLightPages: function () {\n    var that = this;\n    var pageCount = this.option(\"pageCount\");\n    var pageIndex = this.option(\"pageIndex\");\n\n    var clickAction = that._createAction(function () {\n      that.option(\"pageIndex\", pageCount);\n    });\n\n    var pagesCountText = this.option(\"pagesCountText\");\n    var $container = $(\"<div>\").addClass(LIGHT_PAGES_CLASS).appendTo(this._$pagesChooser);\n    var $pageIndex = $(\"<div>\").addClass(PAGER_PAGE_INDEX_CLASS).appendTo($container);\n    that._pageIndexEditor = that._createComponent($pageIndex, NumberBox, {\n      value: pageIndex,\n      min: 1,\n      max: pageCount,\n      width: that._calculateLightPagesWidth($pageIndex, pageCount),\n      onValueChanged: function (e) {\n        that.option(\"pageIndex\", e.value);\n      }\n    });\n    $(\"<span>\").text(pagesCountText).addClass(PAGER_INFO_TEXT_CLASS + \" \" + PAGER_INFO_CLASS).appendTo($container);\n    var $pageCount = $(\"<span>\").addClass(PAGER_PAGES_COUNT_CLASS).text(pageCount);\n    eventsEngine.on($pageCount, eventUtils.addNamespace(clickEvent.name, that.Name + \"PagesCount\"), function (e) {\n      clickAction({\n        event: e\n      });\n    });\n    accessibility.registerKeyboardAction(\"pager\", that, $pageCount, void 0, clickAction);\n    $pageCount.appendTo($container);\n    that.setAria({\n      role: \"button\",\n      label: \"Navigates to the last page\"\n    }, $pageCount);\n  },\n  _renderPagesChooser: function () {\n    var that = this;\n    var lightModeEnabled = that.option(\"lightModeEnabled\");\n    var pagesNavigatorVisible = that.option(\"pagesNavigatorVisible\");\n    var $element = that.$element();\n    that._$pagesChooser && that._$pagesChooser.remove();\n\n    if (!pagesNavigatorVisible) {\n      return;\n    }\n\n    if (that._pages && 0 === that._pages.length) {\n      that.selectedPage = null;\n      return;\n    }\n\n    that._$pagesChooser = $(\"<div>\").addClass(PAGER_PAGES_CLASS).appendTo($element);\n\n    if (\"auto\" === pagesNavigatorVisible) {\n      that._$pagesChooser.css(\"visibility\", 1 === that.option(\"pageCount\") ? \"hidden\" : \"\");\n    }\n\n    if (!lightModeEnabled) {\n      that._renderInfo();\n    }\n\n    that._renderNavigateButton(\"prev\");\n\n    if (lightModeEnabled) {\n      that._renderLightPages();\n    } else {\n      that._renderPages(that._pages);\n    }\n\n    that._renderNavigateButton(\"next\");\n\n    that._updatePagesChooserWidth();\n  },\n  _renderPageSizes: function () {\n    var that = this;\n    var i;\n    var pageSizes = that.option(\"pageSizes\");\n    var pagesSizesLength = pageSizes && pageSizes.length;\n    var pageSizeValue;\n    var currentPageSize = that.option(\"pageSize\");\n    var $pageSize;\n\n    var clickPagesSizeAction = that._createAction(function (args) {\n      var e = args.event;\n      pageSizeValue = parseInt($(e.target).text());\n      that.option(\"pageSize\", pageSizeValue);\n    });\n\n    eventsEngine.on(that._$pagesSizeChooser, eventUtils.addNamespace(clickEvent.name, that.Name + \"PageSize\"), PAGER_PAGE_SIZE_CLASS_SELECTOR, function (e) {\n      clickPagesSizeAction({\n        event: e\n      });\n    });\n    accessibility.registerKeyboardAction(\"pager\", that, that._$pagesSizeChooser, PAGER_PAGE_SIZE_CLASS_SELECTOR, clickPagesSizeAction);\n\n    for (i = 0; i < pagesSizesLength; i++) {\n      $pageSize = $(\"<div>\").text(pageSizes[i]).addClass(PAGER_PAGE_SIZE_CLASS);\n      that.setAria({\n        role: \"button\",\n        label: \"Display \" + pageSizes[i] + \" items on page\"\n      }, $pageSize);\n      accessibility.setTabIndex(that, $pageSize);\n\n      if (currentPageSize === pageSizes[i]) {\n        $pageSize.addClass(PAGER_SELECTION_CLASS);\n      }\n\n      that._$pagesSizeChooser.append($pageSize);\n    }\n  },\n  _calculateLightPageSizesWidth: function (pageSizes) {\n    return Number(this._$pagesSizeChooser.css(\"minWidth\").replace(\"px\", \"\")) + 10 * Math.max.apply(Math, pageSizes).toString().length;\n  },\n  _renderLightPageSizes: function () {\n    var that = this;\n    var pageSizes = that.option(\"pageSizes\");\n    var $editor = $(\"<div>\").appendTo(that._$pagesSizeChooser);\n    that._pageSizeEditor = that._createComponent($editor, SelectBox, {\n      dataSource: pageSizes,\n      value: that.option(\"pageSize\"),\n      onSelectionChanged: function (e) {\n        that.option(\"pageSize\", e.selectedItem);\n      },\n      width: that._calculateLightPageSizesWidth(pageSizes)\n    });\n  },\n  _renderPagesSizeChooser: function () {\n    var that = this;\n    var pageSizes = that.option(\"pageSizes\");\n    var showPageSizes = that.option(\"showPageSizes\");\n    var pagesSizesLength = pageSizes && pageSizes.length;\n    var $element = that.$element();\n    that._$pagesSizeChooser && that._$pagesSizeChooser.remove();\n\n    if (!showPageSizes || !pagesSizesLength) {\n      return;\n    }\n\n    that._$pagesSizeChooser = $(\"<div>\").addClass(PAGER_PAGE_SIZES_CLASS).appendTo($element);\n\n    if (that.option(\"lightModeEnabled\")) {\n      that._renderLightPageSizes();\n    } else {\n      that._renderPageSizes();\n    }\n\n    that._pagesSizeChooserWidth = that._$pagesSizeChooser.width();\n  },\n  _renderInfo: function () {\n    var infoText = this.option(\"infoText\");\n\n    if (this.option(\"showInfo\") && typeUtils.isDefined(infoText)) {\n      this._$info = $(\"<div>\").css(\"display\", this._isInfoHide ? \"none\" : \"\").addClass(PAGER_INFO_CLASS).text(stringUtils.format(infoText, this.selectedPage && this.selectedPage.value(), this.option(\"pageCount\"), this.option(\"totalCount\"))).appendTo(this._$pagesChooser);\n\n      if (!this._isInfoHide) {\n        this._infoWidth = this._$info.outerWidth(true);\n      }\n    }\n  },\n  _renderNavigateButton: function (direction) {\n    var that = this;\n\n    var clickAction = that._createAction(function () {\n      that._nextPage(direction);\n    });\n\n    var $button;\n\n    if (that.option(\"showNavigationButtons\") || that.option(\"lightModeEnabled\")) {\n      $button = $(\"<div>\").addClass(PAGER_NAVIGATE_BUTTON);\n      eventsEngine.on($button, eventUtils.addNamespace([pointerEvents.up, clickEvent.name], that.Name + \"Pages\"), that._wrapClickAction(clickAction));\n      accessibility.registerKeyboardAction(\"pager\", that, $button, void 0, clickAction);\n      that.setAria({\n        role: \"button\",\n        label: \"prev\" === direction ? \"Previous page\" : \" Next page\"\n      }, $button);\n      accessibility.setTabIndex(that, $button);\n\n      if (that.option(\"rtlEnabled\")) {\n        $button.addClass(\"prev\" === direction ? PAGER_NEXT_BUTTON_CLASS : PAGER_PREV_BUTTON_CLASS);\n        $button.prependTo(this._$pagesChooser);\n      } else {\n        $button.addClass(\"prev\" === direction ? PAGER_PREV_BUTTON_CLASS : PAGER_NEXT_BUTTON_CLASS);\n        $button.appendTo(this._$pagesChooser);\n      }\n    }\n  },\n  _renderContentImpl: function () {\n    this.$element().toggleClass(LIGHT_MODE_CLASS, this.option(\"lightModeEnabled\"));\n\n    this._toggleVisibility(this.option(\"visible\"));\n\n    this._updatePageSizes(true);\n\n    this._updatePages(true);\n\n    accessibility.restoreFocus(this);\n  },\n  _initMarkup: function () {\n    var $element = this.$element();\n    $element.addClass(PAGER_CLASS);\n    var $pageSize = $(\"<div>\").addClass(PAGER_PAGE_CLASS);\n    this._$pagesChooser = $(\"<div>\").addClass(PAGER_PAGES_CLASS).append($pageSize).appendTo($element);\n  },\n  _render: function () {\n    this.option().lightModeEnabled = false;\n    this.callBase();\n\n    this._updateLightMode();\n  },\n  _updatePageSizes: function (forceRender) {\n    var lightModeEnabled = this.option(\"lightModeEnabled\");\n    var pageSize = this.option(\"pageSize\");\n    var pageSizes = this.option(\"pageSizes\");\n\n    if (lightModeEnabled) {\n      this._pageSizeEditor && this._pageSizeEditor.option({\n        value: pageSize,\n        dataSource: pageSizes,\n        width: this._calculateLightPageSizesWidth(pageSizes)\n      });\n    }\n\n    if (!lightModeEnabled || forceRender) {\n      this._renderPagesSizeChooser();\n    }\n  },\n  _updatePages: function (forceRender) {\n    var pageCount = this.option(\"pageCount\");\n    var pageIndex = this.option(\"pageIndex\");\n    var lightModeEnabled = this.option(\"lightModeEnabled\");\n\n    if (!lightModeEnabled) {\n      this._processSelectedPage(this.option(\"maxPagesCount\"), pageIndex, pageCount);\n\n      this._pages = this._getPages(this.selectedPage, pageCount);\n\n      this._selectPageByValue(pageIndex);\n    } else {\n      this._pageIndexEditor && this._pageIndexEditor.option({\n        value: pageIndex,\n        width: this._calculateLightPagesWidth(this._pageIndexEditor.$element(), pageCount)\n      });\n    }\n\n    if (!lightModeEnabled || forceRender) {\n      this._renderPagesChooser();\n    }\n\n    this._updateButtonsState(pageIndex);\n  },\n  _isPageIndexInvalid: function (direction, pageIndex) {\n    var isNextDirection = \"next\" === direction;\n    var rtlEnabled = this.option(\"rtlEnabled\");\n\n    if (rtlEnabled && isNextDirection || !rtlEnabled && !isNextDirection) {\n      return pageIndex <= 1;\n    }\n\n    return pageIndex >= this.option(\"pageCount\");\n  },\n  _updateButtonsState: function (pageIndex) {\n    var nextButton = this.$element().find(\".\" + PAGER_NEXT_BUTTON_CLASS);\n    var prevButton = this.$element().find(\".\" + PAGER_PREV_BUTTON_CLASS);\n    nextButton.toggleClass(PAGER_BUTTON_DISABLE_CLASS, this._isPageIndexInvalid(\"next\", pageIndex));\n    prevButton.toggleClass(PAGER_BUTTON_DISABLE_CLASS, this._isPageIndexInvalid(\"prev\", pageIndex));\n  },\n  _optionChanged: function (args) {\n    switch (args.name) {\n      case \"visible\":\n        this._toggleVisibility(args.value);\n\n        break;\n\n      case \"pageIndex\":\n        var pageIndexChanged = this.option(\"pageIndexChanged\");\n\n        if (pageIndexChanged) {\n          pageIndexChanged(args.value);\n        }\n\n        this._updatePages();\n\n        break;\n\n      case \"maxPagesCount\":\n      case \"pageCount\":\n      case \"totalCount\":\n      case \"hasKnownLastPage\":\n      case \"pagesNavigatorVisible\":\n      case \"showNavigationButtons\":\n        this._updatePages();\n\n        break;\n\n      case \"pageSize\":\n        var pageSizeChanged = this.option(\"pageSizeChanged\");\n\n        if (pageSizeChanged) {\n          pageSizeChanged(args.value);\n        }\n\n        this._updatePageSizes();\n\n        break;\n\n      case \"pageSizes\":\n        this._updatePageSizes();\n\n        break;\n\n      case \"lightModeEnabled\":\n        this._renderContentImpl();\n\n        !args.value && this._updateLightMode();\n        break;\n\n      default:\n        this._invalidate();\n\n    }\n  },\n  _clean: function () {\n    if (this._$pagesChooser) {\n      eventsEngine.off(this._$pagesChooser, eventUtils.addNamespace([pointerEvents.up, clickEvent.name], this.Name + \"Pages\"), PAGER_PAGE_CLASS_SELECTOR, this._pageClickHandler);\n      accessibility.registerKeyboardAction(\"pager\", this, this._$pagesChooser, PAGER_PAGE_CLASS_SELECTOR, this._pageKeyDownHandler);\n    }\n\n    this.callBase();\n  },\n  _getMinPagerWidth: function () {\n    var pagesChooserWidth = typeUtils.isDefined(this._pagesChooserWidth) ? this._pagesChooserWidth : 0;\n    var pagesSizeChooserWidth = typeUtils.isDefined(this._pagesSizeChooserWidth) ? this._pagesSizeChooserWidth : 0;\n    return pagesChooserWidth + pagesSizeChooserWidth;\n  },\n  _updatePagesChooserWidth: commonUtils.deferUpdater(function () {\n    var lastPageWidth = this._pages && this._pages.length > 0 ? this._pages[this._pages.length - 1]._$page.width() : 0;\n    this._pagesChooserWidth = this._$pagesChooser.width() + lastPageWidth;\n  }),\n  _updateLightMode: commonUtils.deferUpdater(function () {\n    var that = this;\n    var width = this.$element().width();\n    var infoWidth = typeUtils.isDefined(this._infoWidth) ? this._infoWidth : 0;\n    commonUtils.deferRender(function () {\n      if (that._isInfoHide && width > that._getMinPagerWidth() + infoWidth) {\n        that._$info.show();\n\n        that._updatePagesChooserWidth();\n\n        that._isInfoHide = false;\n      }\n\n      if (!that._isInfoHide && width > that._getMinPagerWidth() - infoWidth && width < that._getMinPagerWidth()) {\n        that._$info.hide();\n\n        that._updatePagesChooserWidth();\n\n        that._isInfoHide = true;\n      }\n\n      commonUtils.deferUpdate(function () {\n        commonUtils.deferRender(function () {\n          if (that.option(\"lightModeEnabled\") && width > that._previousWidth) {\n            that.option(\"lightModeEnabled\", false);\n          } else {\n            if (width < that._getMinPagerWidth()) {\n              that.option(\"lightModeEnabled\", true);\n            }\n          }\n\n          that._previousWidth = width;\n        });\n      });\n    });\n  }),\n  _dimensionChanged: function () {\n    this._updateLightMode();\n  },\n  getHeight: function () {\n    return this.option(\"visible\") ? this.$element().outerHeight() : 0;\n  }\n});\nmodule.exports = Pager;\nregisterComponent(\"dxPager\", Pager);","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/ticketSystem/frontend/node_modules/devextreme/ui/pager.js"],"names":["$","require","eventsEngine","Class","stringUtils","registerComponent","commonUtils","each","typeUtils","extend","clickEvent","pointerEvents","messageLocalization","Widget","SelectBox","NumberBox","eventUtils","accessibility","PAGES_LIMITER","PAGER_CLASS","PAGER_PAGE_CLASS","PAGER_PAGE_CLASS_SELECTOR","PAGER_PAGES_CLASS","LIGHT_MODE_CLASS","LIGHT_PAGES_CLASS","PAGER_PAGE_INDEX_CLASS","PAGER_PAGES_COUNT_CLASS","PAGER_SELECTION_CLASS","PAGER_PAGE_SEPARATOR_CLASS","PAGER_PAGE_SIZES_CLASS","PAGER_PAGE_SIZE_CLASS","PAGER_PAGE_SIZE_CLASS_SELECTOR","PAGER_NAVIGATE_BUTTON","PAGER_PREV_BUTTON_CLASS","PAGER_NEXT_BUTTON_CLASS","PAGER_INFO_CLASS","PAGER_INFO_TEXT_CLASS","PAGER_BUTTON_DISABLE_CLASS","Page","inherit","ctor","value","index","that","_$page","text","addClass","_value","isDefined","isNumeric","parseInt","element","select","toggleClass","render","rootElement","rtlEnabled","prependTo","appendTo","Pager","_getDefaultOptions","callBase","visible","pagesNavigatorVisible","pageIndex","maxPagesCount","pageCount","totalCount","pageSize","showPageSizes","pageSizes","hasKnownLastPage","showNavigationButtons","showInfo","infoText","getFormatter","pagesCountText","lightModeEnabled","pageIndexChanged","noop","pageSizeChanged","_toggleVisibility","$element","css","_getPages","currentPage","count","pages","showMoreButton","option","firstValue","i","push","_getPageByValue","page","_pages","length","_processSelectedPage","isPageIndexValid","selectedPageIndex","key","selectedPage","_selectPageByValue","pagesLength","nextPage","morePage","prevPage","pop","splice","_updatePagesTabIndices","_this","$selectedPage","updatePageIndices","buttons","find","_","attr","off","on","_nextPage","direction","_wrapClickAction","action","_this2","e","type","_pointerUpHappened","event","_renderPages","$separator","clickPagesIndexAction","_createAction","args","pageNumber","target","Number","_pageClickHandler","_$pagesChooser","addNamespace","up","name","Name","registerKeyboardAction","setAria","role","label","setTabIndex","_calculateLightPagesWidth","$pageIndex","replace","toString","_renderLightPages","clickAction","$container","_pageIndexEditor","_createComponent","min","max","width","onValueChanged","$pageCount","_renderPagesChooser","remove","_renderInfo","_renderNavigateButton","_updatePagesChooserWidth","_renderPageSizes","pagesSizesLength","pageSizeValue","currentPageSize","$pageSize","clickPagesSizeAction","_$pagesSizeChooser","append","_calculateLightPageSizesWidth","Math","apply","_renderLightPageSizes","$editor","_pageSizeEditor","dataSource","onSelectionChanged","selectedItem","_renderPagesSizeChooser","_pagesSizeChooserWidth","_$info","_isInfoHide","format","_infoWidth","outerWidth","$button","_renderContentImpl","_updatePageSizes","_updatePages","restoreFocus","_initMarkup","_render","_updateLightMode","forceRender","_updateButtonsState","_isPageIndexInvalid","isNextDirection","nextButton","prevButton","_optionChanged","_invalidate","_clean","_pageKeyDownHandler","_getMinPagerWidth","pagesChooserWidth","_pagesChooserWidth","pagesSizeChooserWidth","deferUpdater","lastPageWidth","infoWidth","deferRender","show","hide","deferUpdate","_previousWidth","_dimensionChanged","getHeight","outerHeight","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/pager.js)\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../core/renderer\");\r\nvar eventsEngine = require(\"../events/core/events_engine\");\r\nvar Class = require(\"../core/class\");\r\nvar stringUtils = require(\"../core/utils/string\");\r\nvar registerComponent = require(\"../core/component_registrator\");\r\nvar commonUtils = require(\"../core/utils/common\");\r\nvar each = require(\"../core/utils/iterator\").each;\r\nvar typeUtils = require(\"../core/utils/type\");\r\nvar extend = require(\"../core/utils/extend\").extend;\r\nvar clickEvent = require(\"../events/click\");\r\nvar pointerEvents = require(\"../events/pointer\");\r\nvar messageLocalization = require(\"../localization/message\");\r\nvar Widget = require(\"./widget/ui.widget\");\r\nvar SelectBox = require(\"./select_box\");\r\nvar NumberBox = require(\"./number_box\");\r\nvar eventUtils = require(\"../events/utils\");\r\nvar accessibility = require(\"./shared/accessibility\");\r\nvar PAGES_LIMITER = 4;\r\nvar PAGER_CLASS = \"dx-pager\";\r\nvar PAGER_PAGE_CLASS = \"dx-page\";\r\nvar PAGER_PAGE_CLASS_SELECTOR = \".\" + PAGER_PAGE_CLASS;\r\nvar PAGER_PAGES_CLASS = \"dx-pages\";\r\nvar LIGHT_MODE_CLASS = \"dx-light-mode\";\r\nvar LIGHT_PAGES_CLASS = \"dx-light-pages\";\r\nvar PAGER_PAGE_INDEX_CLASS = \"dx-page-index\";\r\nvar PAGER_PAGES_COUNT_CLASS = \"dx-pages-count\";\r\nvar PAGER_SELECTION_CLASS = \"dx-selection\";\r\nvar PAGER_PAGE_SEPARATOR_CLASS = \"dx-separator\";\r\nvar PAGER_PAGE_SIZES_CLASS = \"dx-page-sizes\";\r\nvar PAGER_PAGE_SIZE_CLASS = \"dx-page-size\";\r\nvar PAGER_PAGE_SIZE_CLASS_SELECTOR = \".\" + PAGER_PAGE_SIZE_CLASS;\r\nvar PAGER_NAVIGATE_BUTTON = \"dx-navigate-button\";\r\nvar PAGER_PREV_BUTTON_CLASS = \"dx-prev-button\";\r\nvar PAGER_NEXT_BUTTON_CLASS = \"dx-next-button\";\r\nvar PAGER_INFO_CLASS = \"dx-info\";\r\nvar PAGER_INFO_TEXT_CLASS = \"dx-info-text\";\r\nvar PAGER_BUTTON_DISABLE_CLASS = \"dx-button-disable\";\r\nvar Page = Class.inherit({\r\n    ctor: function(value, index) {\r\n        var that = this;\r\n        that.index = index;\r\n        that._$page = $(\"<div>\").text(value).addClass(PAGER_PAGE_CLASS)\r\n    },\r\n    value: function(_value) {\r\n        var that = this;\r\n        if (typeUtils.isDefined(_value)) {\r\n            that._$page.text(_value)\r\n        } else {\r\n            var text = that._$page.text();\r\n            if (typeUtils.isNumeric(text)) {\r\n                return parseInt(text)\r\n            } else {\r\n                return text\r\n            }\r\n        }\r\n    },\r\n    element: function() {\r\n        return this._$page\r\n    },\r\n    select: function(value) {\r\n        this._$page.toggleClass(PAGER_SELECTION_CLASS, value)\r\n    },\r\n    render: function(rootElement, rtlEnabled) {\r\n        rtlEnabled ? this._$page.prependTo(rootElement) : this._$page.appendTo(rootElement)\r\n    }\r\n});\r\nvar Pager = Widget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            visible: true,\r\n            pagesNavigatorVisible: \"auto\",\r\n            pageIndex: 1,\r\n            maxPagesCount: 10,\r\n            pageCount: 10,\r\n            totalCount: 0,\r\n            pageSize: 5,\r\n            showPageSizes: true,\r\n            pageSizes: [5, 10],\r\n            hasKnownLastPage: true,\r\n            showNavigationButtons: false,\r\n            showInfo: false,\r\n            infoText: messageLocalization.getFormatter(\"dxPager-infoText\"),\r\n            pagesCountText: messageLocalization.getFormatter(\"dxPager-pagesCountText\"),\r\n            rtlEnabled: false,\r\n            lightModeEnabled: false,\r\n            pageIndexChanged: commonUtils.noop,\r\n            pageSizeChanged: commonUtils.noop\r\n        })\r\n    },\r\n    _toggleVisibility: function(value) {\r\n        var $element = this.$element();\r\n        if ($element) {\r\n            $element.css(\"display\", value ? \"\" : \"none\")\r\n        }\r\n    },\r\n    _getPages: function(currentPage, count) {\r\n        var pages = [];\r\n        var showMoreButton = !this.option(\"hasKnownLastPage\");\r\n        var firstValue;\r\n        var i;\r\n        if (count > 0 || showMoreButton) {\r\n            if (count <= this.option(\"maxPagesCount\")) {\r\n                for (i = 1; i <= count; i++) {\r\n                    pages.push(new Page(i, i - 1))\r\n                }\r\n                if (showMoreButton) {\r\n                    pages.push(new Page(\">\", i - 1))\r\n                }\r\n            } else {\r\n                pages.push(new Page(1, 0));\r\n                firstValue = currentPage ? currentPage.value() - currentPage.index : 1;\r\n                for (i = 1; i <= PAGES_LIMITER; i++) {\r\n                    pages.push(new Page(firstValue + i, i))\r\n                }\r\n                pages.push(new Page(count, PAGES_LIMITER + 1));\r\n                if (showMoreButton) {\r\n                    pages.push(new Page(\">\", PAGES_LIMITER + 1))\r\n                }\r\n            }\r\n        }\r\n        return pages\r\n    },\r\n    _getPageByValue: function(value) {\r\n        var that = this;\r\n        var page;\r\n        var i;\r\n        for (i = 0; i < that._pages.length; i++) {\r\n            page = that._pages[i];\r\n            if (page.value() === value) {\r\n                return page\r\n            }\r\n        }\r\n    },\r\n    _processSelectedPage: function(maxPagesCount, pageIndex, pageCount) {\r\n        var that = this;\r\n        var isPageIndexValid = false;\r\n        var selectedPageIndex;\r\n        if (that._pages) {\r\n            each(that._pages, function(key, page) {\r\n                if (pageIndex === page.value()) {\r\n                    isPageIndexValid = true\r\n                }\r\n            });\r\n            if (!isPageIndexValid) {\r\n                that.selectedPage = null\r\n            }\r\n        }\r\n        if (typeUtils.isDefined(that.selectedPage)) {\r\n            if (pageIndex === pageCount && pageCount > maxPagesCount && that.selectedPage.index !== PAGES_LIMITER + 1) {\r\n                that.selectedPage.index = PAGES_LIMITER + 1\r\n            }\r\n        } else {\r\n            if (pageIndex > PAGES_LIMITER && pageIndex < pageCount) {\r\n                selectedPageIndex = pageCount - PAGES_LIMITER < pageIndex ? PAGES_LIMITER - (pageCount - pageIndex) + 1 : 2;\r\n                that.selectedPage = new Page(pageIndex, selectedPageIndex)\r\n            }\r\n        }\r\n    },\r\n    _selectPageByValue: function(value) {\r\n        var that = this;\r\n        var i;\r\n        var page = that._getPageByValue(value);\r\n        var pages = that._pages;\r\n        var pagesLength = pages.length;\r\n        var nextPage;\r\n        var morePage;\r\n        if (!typeUtils.isDefined(page)) {\r\n            return\r\n        }\r\n        var prevPage = that._pages[page.index - 1];\r\n        nextPage = that._pages[page.index + 1];\r\n        if (nextPage && \">\" === nextPage.value()) {\r\n            morePage = nextPage;\r\n            nextPage = void 0;\r\n            pagesLength--;\r\n            pages.pop()\r\n        }\r\n        if (that.selectedPage) {\r\n            that.selectedPage.select(false)\r\n        }\r\n        page.select(true);\r\n        that.selectedPage = page;\r\n        if (nextPage && nextPage.value() - value > 1) {\r\n            if (0 !== page.index) {\r\n                prevPage.value(value + 1);\r\n                that._pages.splice(page.index, 1);\r\n                that._pages.splice(page.index - 1, 0, page);\r\n                that._pages[page.index].index = page.index;\r\n                page.index = page.index - 1;\r\n                for (i = page.index - 1; i > 0; i--) {\r\n                    that._pages[i].value(that._pages[i + 1].value() - 1)\r\n                }\r\n            } else {\r\n                for (i = 0; i < pagesLength - 1; i++) {\r\n                    that._pages[i].value(i + 1)\r\n                }\r\n            }\r\n        }\r\n        if (prevPage && value - prevPage.value() > 1) {\r\n            if (page.index !== pagesLength - 1) {\r\n                nextPage.value(value - 1);\r\n                that._pages.splice(page.index, 1);\r\n                that._pages.splice(page.index + 1, 0, page);\r\n                that._pages[page.index].index = page.index;\r\n                page.index = page.index + 1;\r\n                for (i = page.index + 1; i < pagesLength - 1; i++) {\r\n                    that._pages[i].value(that._pages[i - 1].value() + 1)\r\n                }\r\n            } else {\r\n                for (i = 1; i <= pagesLength - 2; i++) {\r\n                    that._pages[pagesLength - 1 - i].value(that._pages[pagesLength - 1].value() - i)\r\n                }\r\n            }\r\n        }\r\n        if (morePage) {\r\n            pages.push(morePage)\r\n        }\r\n    },\r\n    _updatePagesTabIndices: function() {\r\n        var _this = this;\r\n        var $selectedPage = this.selectedPage._$page;\r\n        var updatePageIndices = function updatePageIndices() {\r\n            var buttons = $(_this.element()).find(\"[role=button]:not(.dx-button-disable)\");\r\n            each(buttons, function(_, element) {\r\n                return $(element).attr(\"tabindex\", 0)\r\n            });\r\n            eventsEngine.off($selectedPage, \"focus\", updatePageIndices)\r\n        };\r\n        eventsEngine.on($selectedPage, \"focus\", updatePageIndices)\r\n    },\r\n    _nextPage: function(direction) {\r\n        var pageIndex = this.option(\"pageIndex\");\r\n        var pageCount = this.option(\"pageCount\");\r\n        if (typeUtils.isDefined(pageIndex)) {\r\n            pageIndex = \"next\" === direction ? ++pageIndex : --pageIndex;\r\n            if (pageIndex > 0 && pageIndex <= pageCount) {\r\n                this.option(\"pageIndex\", pageIndex)\r\n            }\r\n        }\r\n    },\r\n    _wrapClickAction: function(action) {\r\n        var _this2 = this;\r\n        return function(e) {\r\n            if (\"dxpointerup\" === e.type) {\r\n                _this2._pointerUpHappened = true\r\n            } else {\r\n                if (_this2._pointerUpHappened) {\r\n                    _this2._pointerUpHappened = false;\r\n                    return\r\n                }\r\n            }\r\n            action({\r\n                event: e\r\n            })\r\n        }\r\n    },\r\n    _renderPages: function(pages) {\r\n        var that = this;\r\n        var $separator;\r\n        var pagesLength = pages.length;\r\n        var clickPagesIndexAction = that._createAction(function(args) {\r\n            var e = args.event;\r\n            var pageNumber = $(e.target).text();\r\n            var pageIndex = \">\" === pageNumber ? that.option(\"pageCount\") + 1 : Number(pageNumber);\r\n            that.option(\"pageIndex\", pageIndex)\r\n        });\r\n        var page;\r\n        if (pagesLength > 1) {\r\n            that._pageClickHandler = this._wrapClickAction(clickPagesIndexAction);\r\n            eventsEngine.on(that._$pagesChooser, eventUtils.addNamespace([pointerEvents.up, clickEvent.name], that.Name + \"Pages\"), PAGER_PAGE_CLASS_SELECTOR, that._pageClickHandler);\r\n            accessibility.registerKeyboardAction(\"pager\", that, that._$pagesChooser, PAGER_PAGE_CLASS_SELECTOR, clickPagesIndexAction)\r\n        }\r\n        for (var i = 0; i < pagesLength; i++) {\r\n            page = pages[i];\r\n            page.render(that._$pagesChooser, that.option(\"rtlEnabled\"));\r\n            that.setAria({\r\n                role: \"button\",\r\n                label: \"Page \" + page.value()\r\n            }, page.element());\r\n            accessibility.setTabIndex(that, page.element());\r\n            if (pages[i + 1] && pages[i + 1].value() - page.value() > 1) {\r\n                $separator = $(\"<div>\").text(\". . .\").addClass(PAGER_PAGE_SEPARATOR_CLASS);\r\n                that.option(\"rtlEnabled\") ? $separator.prependTo(that._$pagesChooser) : $separator.appendTo(that._$pagesChooser)\r\n            }\r\n        }\r\n    },\r\n    _calculateLightPagesWidth: function($pageIndex, pageCount) {\r\n        return Number($pageIndex.css(\"minWidth\").replace(\"px\", \"\")) + 10 * pageCount.toString().length\r\n    },\r\n    _renderLightPages: function() {\r\n        var that = this;\r\n        var pageCount = this.option(\"pageCount\");\r\n        var pageIndex = this.option(\"pageIndex\");\r\n        var clickAction = that._createAction(function() {\r\n            that.option(\"pageIndex\", pageCount)\r\n        });\r\n        var pagesCountText = this.option(\"pagesCountText\");\r\n        var $container = $(\"<div>\").addClass(LIGHT_PAGES_CLASS).appendTo(this._$pagesChooser);\r\n        var $pageIndex = $(\"<div>\").addClass(PAGER_PAGE_INDEX_CLASS).appendTo($container);\r\n        that._pageIndexEditor = that._createComponent($pageIndex, NumberBox, {\r\n            value: pageIndex,\r\n            min: 1,\r\n            max: pageCount,\r\n            width: that._calculateLightPagesWidth($pageIndex, pageCount),\r\n            onValueChanged: function(e) {\r\n                that.option(\"pageIndex\", e.value)\r\n            }\r\n        });\r\n        $(\"<span>\").text(pagesCountText).addClass(PAGER_INFO_TEXT_CLASS + \" \" + PAGER_INFO_CLASS).appendTo($container);\r\n        var $pageCount = $(\"<span>\").addClass(PAGER_PAGES_COUNT_CLASS).text(pageCount);\r\n        eventsEngine.on($pageCount, eventUtils.addNamespace(clickEvent.name, that.Name + \"PagesCount\"), function(e) {\r\n            clickAction({\r\n                event: e\r\n            })\r\n        });\r\n        accessibility.registerKeyboardAction(\"pager\", that, $pageCount, void 0, clickAction);\r\n        $pageCount.appendTo($container);\r\n        that.setAria({\r\n            role: \"button\",\r\n            label: \"Navigates to the last page\"\r\n        }, $pageCount)\r\n    },\r\n    _renderPagesChooser: function() {\r\n        var that = this;\r\n        var lightModeEnabled = that.option(\"lightModeEnabled\");\r\n        var pagesNavigatorVisible = that.option(\"pagesNavigatorVisible\");\r\n        var $element = that.$element();\r\n        that._$pagesChooser && that._$pagesChooser.remove();\r\n        if (!pagesNavigatorVisible) {\r\n            return\r\n        }\r\n        if (that._pages && 0 === that._pages.length) {\r\n            that.selectedPage = null;\r\n            return\r\n        }\r\n        that._$pagesChooser = $(\"<div>\").addClass(PAGER_PAGES_CLASS).appendTo($element);\r\n        if (\"auto\" === pagesNavigatorVisible) {\r\n            that._$pagesChooser.css(\"visibility\", 1 === that.option(\"pageCount\") ? \"hidden\" : \"\")\r\n        }\r\n        if (!lightModeEnabled) {\r\n            that._renderInfo()\r\n        }\r\n        that._renderNavigateButton(\"prev\");\r\n        if (lightModeEnabled) {\r\n            that._renderLightPages()\r\n        } else {\r\n            that._renderPages(that._pages)\r\n        }\r\n        that._renderNavigateButton(\"next\");\r\n        that._updatePagesChooserWidth()\r\n    },\r\n    _renderPageSizes: function() {\r\n        var that = this;\r\n        var i;\r\n        var pageSizes = that.option(\"pageSizes\");\r\n        var pagesSizesLength = pageSizes && pageSizes.length;\r\n        var pageSizeValue;\r\n        var currentPageSize = that.option(\"pageSize\");\r\n        var $pageSize;\r\n        var clickPagesSizeAction = that._createAction(function(args) {\r\n            var e = args.event;\r\n            pageSizeValue = parseInt($(e.target).text());\r\n            that.option(\"pageSize\", pageSizeValue)\r\n        });\r\n        eventsEngine.on(that._$pagesSizeChooser, eventUtils.addNamespace(clickEvent.name, that.Name + \"PageSize\"), PAGER_PAGE_SIZE_CLASS_SELECTOR, function(e) {\r\n            clickPagesSizeAction({\r\n                event: e\r\n            })\r\n        });\r\n        accessibility.registerKeyboardAction(\"pager\", that, that._$pagesSizeChooser, PAGER_PAGE_SIZE_CLASS_SELECTOR, clickPagesSizeAction);\r\n        for (i = 0; i < pagesSizesLength; i++) {\r\n            $pageSize = $(\"<div>\").text(pageSizes[i]).addClass(PAGER_PAGE_SIZE_CLASS);\r\n            that.setAria({\r\n                role: \"button\",\r\n                label: \"Display \" + pageSizes[i] + \" items on page\"\r\n            }, $pageSize);\r\n            accessibility.setTabIndex(that, $pageSize);\r\n            if (currentPageSize === pageSizes[i]) {\r\n                $pageSize.addClass(PAGER_SELECTION_CLASS)\r\n            }\r\n            that._$pagesSizeChooser.append($pageSize)\r\n        }\r\n    },\r\n    _calculateLightPageSizesWidth: function(pageSizes) {\r\n        return Number(this._$pagesSizeChooser.css(\"minWidth\").replace(\"px\", \"\")) + 10 * Math.max.apply(Math, pageSizes).toString().length\r\n    },\r\n    _renderLightPageSizes: function() {\r\n        var that = this;\r\n        var pageSizes = that.option(\"pageSizes\");\r\n        var $editor = $(\"<div>\").appendTo(that._$pagesSizeChooser);\r\n        that._pageSizeEditor = that._createComponent($editor, SelectBox, {\r\n            dataSource: pageSizes,\r\n            value: that.option(\"pageSize\"),\r\n            onSelectionChanged: function(e) {\r\n                that.option(\"pageSize\", e.selectedItem)\r\n            },\r\n            width: that._calculateLightPageSizesWidth(pageSizes)\r\n        })\r\n    },\r\n    _renderPagesSizeChooser: function() {\r\n        var that = this;\r\n        var pageSizes = that.option(\"pageSizes\");\r\n        var showPageSizes = that.option(\"showPageSizes\");\r\n        var pagesSizesLength = pageSizes && pageSizes.length;\r\n        var $element = that.$element();\r\n        that._$pagesSizeChooser && that._$pagesSizeChooser.remove();\r\n        if (!showPageSizes || !pagesSizesLength) {\r\n            return\r\n        }\r\n        that._$pagesSizeChooser = $(\"<div>\").addClass(PAGER_PAGE_SIZES_CLASS).appendTo($element);\r\n        if (that.option(\"lightModeEnabled\")) {\r\n            that._renderLightPageSizes()\r\n        } else {\r\n            that._renderPageSizes()\r\n        }\r\n        that._pagesSizeChooserWidth = that._$pagesSizeChooser.width()\r\n    },\r\n    _renderInfo: function() {\r\n        var infoText = this.option(\"infoText\");\r\n        if (this.option(\"showInfo\") && typeUtils.isDefined(infoText)) {\r\n            this._$info = $(\"<div>\").css(\"display\", this._isInfoHide ? \"none\" : \"\").addClass(PAGER_INFO_CLASS).text(stringUtils.format(infoText, this.selectedPage && this.selectedPage.value(), this.option(\"pageCount\"), this.option(\"totalCount\"))).appendTo(this._$pagesChooser);\r\n            if (!this._isInfoHide) {\r\n                this._infoWidth = this._$info.outerWidth(true)\r\n            }\r\n        }\r\n    },\r\n    _renderNavigateButton: function(direction) {\r\n        var that = this;\r\n        var clickAction = that._createAction(function() {\r\n            that._nextPage(direction)\r\n        });\r\n        var $button;\r\n        if (that.option(\"showNavigationButtons\") || that.option(\"lightModeEnabled\")) {\r\n            $button = $(\"<div>\").addClass(PAGER_NAVIGATE_BUTTON);\r\n            eventsEngine.on($button, eventUtils.addNamespace([pointerEvents.up, clickEvent.name], that.Name + \"Pages\"), that._wrapClickAction(clickAction));\r\n            accessibility.registerKeyboardAction(\"pager\", that, $button, void 0, clickAction);\r\n            that.setAria({\r\n                role: \"button\",\r\n                label: \"prev\" === direction ? \"Previous page\" : \" Next page\"\r\n            }, $button);\r\n            accessibility.setTabIndex(that, $button);\r\n            if (that.option(\"rtlEnabled\")) {\r\n                $button.addClass(\"prev\" === direction ? PAGER_NEXT_BUTTON_CLASS : PAGER_PREV_BUTTON_CLASS);\r\n                $button.prependTo(this._$pagesChooser)\r\n            } else {\r\n                $button.addClass(\"prev\" === direction ? PAGER_PREV_BUTTON_CLASS : PAGER_NEXT_BUTTON_CLASS);\r\n                $button.appendTo(this._$pagesChooser)\r\n            }\r\n        }\r\n    },\r\n    _renderContentImpl: function() {\r\n        this.$element().toggleClass(LIGHT_MODE_CLASS, this.option(\"lightModeEnabled\"));\r\n        this._toggleVisibility(this.option(\"visible\"));\r\n        this._updatePageSizes(true);\r\n        this._updatePages(true);\r\n        accessibility.restoreFocus(this)\r\n    },\r\n    _initMarkup: function() {\r\n        var $element = this.$element();\r\n        $element.addClass(PAGER_CLASS);\r\n        var $pageSize = $(\"<div>\").addClass(PAGER_PAGE_CLASS);\r\n        this._$pagesChooser = $(\"<div>\").addClass(PAGER_PAGES_CLASS).append($pageSize).appendTo($element)\r\n    },\r\n    _render: function() {\r\n        this.option().lightModeEnabled = false;\r\n        this.callBase();\r\n        this._updateLightMode()\r\n    },\r\n    _updatePageSizes: function(forceRender) {\r\n        var lightModeEnabled = this.option(\"lightModeEnabled\");\r\n        var pageSize = this.option(\"pageSize\");\r\n        var pageSizes = this.option(\"pageSizes\");\r\n        if (lightModeEnabled) {\r\n            this._pageSizeEditor && this._pageSizeEditor.option({\r\n                value: pageSize,\r\n                dataSource: pageSizes,\r\n                width: this._calculateLightPageSizesWidth(pageSizes)\r\n            })\r\n        }\r\n        if (!lightModeEnabled || forceRender) {\r\n            this._renderPagesSizeChooser()\r\n        }\r\n    },\r\n    _updatePages: function(forceRender) {\r\n        var pageCount = this.option(\"pageCount\");\r\n        var pageIndex = this.option(\"pageIndex\");\r\n        var lightModeEnabled = this.option(\"lightModeEnabled\");\r\n        if (!lightModeEnabled) {\r\n            this._processSelectedPage(this.option(\"maxPagesCount\"), pageIndex, pageCount);\r\n            this._pages = this._getPages(this.selectedPage, pageCount);\r\n            this._selectPageByValue(pageIndex)\r\n        } else {\r\n            this._pageIndexEditor && this._pageIndexEditor.option({\r\n                value: pageIndex,\r\n                width: this._calculateLightPagesWidth(this._pageIndexEditor.$element(), pageCount)\r\n            })\r\n        }\r\n        if (!lightModeEnabled || forceRender) {\r\n            this._renderPagesChooser()\r\n        }\r\n        this._updateButtonsState(pageIndex)\r\n    },\r\n    _isPageIndexInvalid: function(direction, pageIndex) {\r\n        var isNextDirection = \"next\" === direction;\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        if (rtlEnabled && isNextDirection || !rtlEnabled && !isNextDirection) {\r\n            return pageIndex <= 1\r\n        }\r\n        return pageIndex >= this.option(\"pageCount\")\r\n    },\r\n    _updateButtonsState: function(pageIndex) {\r\n        var nextButton = this.$element().find(\".\" + PAGER_NEXT_BUTTON_CLASS);\r\n        var prevButton = this.$element().find(\".\" + PAGER_PREV_BUTTON_CLASS);\r\n        nextButton.toggleClass(PAGER_BUTTON_DISABLE_CLASS, this._isPageIndexInvalid(\"next\", pageIndex));\r\n        prevButton.toggleClass(PAGER_BUTTON_DISABLE_CLASS, this._isPageIndexInvalid(\"prev\", pageIndex))\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"visible\":\r\n                this._toggleVisibility(args.value);\r\n                break;\r\n            case \"pageIndex\":\r\n                var pageIndexChanged = this.option(\"pageIndexChanged\");\r\n                if (pageIndexChanged) {\r\n                    pageIndexChanged(args.value)\r\n                }\r\n                this._updatePages();\r\n                break;\r\n            case \"maxPagesCount\":\r\n            case \"pageCount\":\r\n            case \"totalCount\":\r\n            case \"hasKnownLastPage\":\r\n            case \"pagesNavigatorVisible\":\r\n            case \"showNavigationButtons\":\r\n                this._updatePages();\r\n                break;\r\n            case \"pageSize\":\r\n                var pageSizeChanged = this.option(\"pageSizeChanged\");\r\n                if (pageSizeChanged) {\r\n                    pageSizeChanged(args.value)\r\n                }\r\n                this._updatePageSizes();\r\n                break;\r\n            case \"pageSizes\":\r\n                this._updatePageSizes();\r\n                break;\r\n            case \"lightModeEnabled\":\r\n                this._renderContentImpl();\r\n                !args.value && this._updateLightMode();\r\n                break;\r\n            default:\r\n                this._invalidate()\r\n        }\r\n    },\r\n    _clean: function() {\r\n        if (this._$pagesChooser) {\r\n            eventsEngine.off(this._$pagesChooser, eventUtils.addNamespace([pointerEvents.up, clickEvent.name], this.Name + \"Pages\"), PAGER_PAGE_CLASS_SELECTOR, this._pageClickHandler);\r\n            accessibility.registerKeyboardAction(\"pager\", this, this._$pagesChooser, PAGER_PAGE_CLASS_SELECTOR, this._pageKeyDownHandler)\r\n        }\r\n        this.callBase()\r\n    },\r\n    _getMinPagerWidth: function() {\r\n        var pagesChooserWidth = typeUtils.isDefined(this._pagesChooserWidth) ? this._pagesChooserWidth : 0;\r\n        var pagesSizeChooserWidth = typeUtils.isDefined(this._pagesSizeChooserWidth) ? this._pagesSizeChooserWidth : 0;\r\n        return pagesChooserWidth + pagesSizeChooserWidth\r\n    },\r\n    _updatePagesChooserWidth: commonUtils.deferUpdater(function() {\r\n        var lastPageWidth = this._pages && this._pages.length > 0 ? this._pages[this._pages.length - 1]._$page.width() : 0;\r\n        this._pagesChooserWidth = this._$pagesChooser.width() + lastPageWidth\r\n    }),\r\n    _updateLightMode: commonUtils.deferUpdater(function() {\r\n        var that = this;\r\n        var width = this.$element().width();\r\n        var infoWidth = typeUtils.isDefined(this._infoWidth) ? this._infoWidth : 0;\r\n        commonUtils.deferRender(function() {\r\n            if (that._isInfoHide && width > that._getMinPagerWidth() + infoWidth) {\r\n                that._$info.show();\r\n                that._updatePagesChooserWidth();\r\n                that._isInfoHide = false\r\n            }\r\n            if (!that._isInfoHide && width > that._getMinPagerWidth() - infoWidth && width < that._getMinPagerWidth()) {\r\n                that._$info.hide();\r\n                that._updatePagesChooserWidth();\r\n                that._isInfoHide = true\r\n            }\r\n            commonUtils.deferUpdate(function() {\r\n                commonUtils.deferRender(function() {\r\n                    if (that.option(\"lightModeEnabled\") && width > that._previousWidth) {\r\n                        that.option(\"lightModeEnabled\", false)\r\n                    } else {\r\n                        if (width < that._getMinPagerWidth()) {\r\n                            that.option(\"lightModeEnabled\", true)\r\n                        }\r\n                    }\r\n                    that._previousWidth = width\r\n                })\r\n            })\r\n        })\r\n    }),\r\n    _dimensionChanged: function() {\r\n        this._updateLightMode()\r\n    },\r\n    getHeight: function() {\r\n        return this.option(\"visible\") ? this.$element().outerHeight() : 0\r\n    }\r\n});\r\nmodule.exports = Pager;\r\nregisterComponent(\"dxPager\", Pager);\r\n"]},"metadata":{},"sourceType":"script"}