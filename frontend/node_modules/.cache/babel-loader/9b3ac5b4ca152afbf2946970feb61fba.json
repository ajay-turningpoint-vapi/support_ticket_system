{"ast":null,"code":"/**\r\n * DevExtreme (ui/data_grid/ui.data_grid.grouping.collapsed.js)\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _uiData_grid = require(\"./ui.data_grid.core\");\n\nvar _uiData_gridGrouping = require(\"./ui.data_grid.grouping.core\");\n\nvar _uiData_grid2 = require(\"./ui.data_grid.utils\");\n\nvar _ui = require(\"../widget/ui.errors\");\n\nvar _ui2 = _interopRequireDefault(_ui);\n\nvar _errors = require(\"../../data/errors\");\n\nvar _deferred = require(\"../../core/utils/deferred\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nexports.GroupingHelper = _uiData_gridGrouping.GroupingHelper.inherit(function () {\n  var foreachExpandedGroups = function (that, callback, updateGroups) {\n    return that.foreachGroups(function (groupInfo, parents) {\n      if (groupInfo.isExpanded) {\n        return callback(groupInfo, parents);\n      }\n    }, true, false, updateGroups, updateGroups);\n  };\n\n  var processGroupItems = function processGroupItems(that, items, groupsCount, expandedInfo, path, isCustomLoading, isLastGroupExpanded) {\n    var isExpanded;\n    expandedInfo.items = expandedInfo.items || [];\n    expandedInfo.paths = expandedInfo.paths || [];\n    expandedInfo.count = expandedInfo.count || 0;\n    expandedInfo.lastCount = expandedInfo.lastCount || 0;\n\n    if (!groupsCount) {\n      return;\n    }\n\n    for (var i = 0; i < items.length; i++) {\n      var item = items[i];\n\n      if (void 0 !== item.items) {\n        path.push(item.key);\n\n        if (isCustomLoading) {\n          isExpanded = true;\n        } else {\n          var groupInfo = that.findGroupInfo(path);\n          isExpanded = groupInfo && groupInfo.isExpanded;\n        }\n\n        if (!isExpanded) {\n          item.collapsedItems = item.items;\n          item.items = null;\n        } else {\n          if (item.items) {\n            processGroupItems(that, item.items, groupsCount - 1, expandedInfo, path, isCustomLoading, isLastGroupExpanded);\n          } else {\n            if (1 === groupsCount && item.count && (!isCustomLoading || isLastGroupExpanded)) {\n              expandedInfo.items.push(item);\n              expandedInfo.paths.push(path.slice(0));\n              expandedInfo.count += expandedInfo.lastCount;\n              expandedInfo.lastCount = item.count;\n            }\n          }\n        }\n\n        path.pop();\n      }\n    }\n  };\n\n  var updateGroupInfoItem = function (that, item, isLastGroupLevel, path, offset) {\n    var groupInfo = that.findGroupInfo(path);\n    var count;\n\n    if (!groupInfo) {\n      if (isLastGroupLevel) {\n        count = item.count > 0 ? item.count : item.items.length;\n      }\n\n      that.addGroupInfo({\n        isExpanded: that._isGroupExpanded(path.length - 1),\n        path: path.slice(0),\n        offset: offset,\n        count: count || 0\n      });\n    } else {\n      if (isLastGroupLevel) {\n        groupInfo.count = item.count > 0 ? item.count : item.items && item.items.length || 0;\n      } else {\n        item.count = groupInfo.count || item.count;\n      }\n\n      groupInfo.offset = offset;\n    }\n  };\n\n  var updateGroupInfos = function updateGroupInfos(that, options, items, loadedGroupCount, groupIndex, path, parentIndex) {\n    var groupCount = options.group ? options.group.length : 0;\n    var isLastGroupLevel = groupCount === loadedGroupCount;\n    var remotePaging = options.remoteOperations.paging;\n    var offset = 0;\n    var totalCount = 0;\n    var count;\n    groupIndex = groupIndex || 0;\n    path = path || [];\n\n    if (remotePaging && !parentIndex) {\n      offset = 0 === groupIndex ? options.skip || 0 : options.skips[groupIndex - 1] || 0;\n    }\n\n    if (groupIndex >= loadedGroupCount) {\n      return items.length;\n    }\n\n    for (var i = 0; i < items.length; i++) {\n      var item = items[i];\n\n      if (item) {\n        path.push(item.key);\n\n        if (!item.count && !item.items || void 0 === item.items) {\n          return -1;\n        }\n\n        updateGroupInfoItem(that, item, isLastGroupLevel, path, offset + i);\n        count = item.items ? updateGroupInfos(that, options, item.items, loadedGroupCount, groupIndex + 1, path, i) : item.count || -1;\n\n        if (count < 0) {\n          return -1;\n        }\n\n        totalCount += count;\n        path.pop();\n      }\n    }\n\n    return totalCount;\n  };\n\n  var isGroupExpanded = function (groups, groupIndex) {\n    return groups && groups.length && groups[groupIndex] && !!groups[groupIndex].isExpanded;\n  };\n\n  var getTotalOffset = function (groupInfos, pageSize, offset) {\n    var groupSize;\n    var totalOffset = offset;\n\n    for (var groupIndex = 0; groupIndex < groupInfos.length; groupIndex++) {\n      groupSize = groupInfos[groupIndex].offset + 1;\n\n      if (groupIndex > 0) {\n        groupSize += groupInfos[groupIndex - 1].childrenTotalCount;\n\n        if (pageSize) {\n          groupSize += getContinuationGroupCount(totalOffset, pageSize, groupSize, groupIndex - 1) * groupIndex;\n        }\n      }\n\n      totalOffset += groupSize;\n    }\n\n    return totalOffset;\n  };\n\n  function getContinuationGroupCount(groupOffset, pageSize, groupSize, groupIndex) {\n    groupIndex = groupIndex || 0;\n\n    if (pageSize > 1 && groupSize > 0) {\n      var pageOffset = groupOffset - Math.floor(groupOffset / pageSize) * pageSize || pageSize;\n      pageOffset += groupSize - groupIndex - 2;\n\n      if (pageOffset < 0) {\n        pageOffset += pageSize;\n      }\n\n      return Math.floor(pageOffset / (pageSize - groupIndex - 1));\n    }\n\n    return 0;\n  }\n\n  function applyContinuationToGroupItem(options, expandedInfo, groupLevel, expandedItemIndex) {\n    var item = expandedInfo.items[expandedItemIndex];\n    var skip = options.skips && options.skips[groupLevel];\n    var take = options.takes && options.takes[groupLevel];\n    var isLastExpandedItem = expandedItemIndex === expandedInfo.items.length - 1;\n    var isFirstExpandedItem = 0 === expandedItemIndex;\n    var lastExpandedItemSkip = isFirstExpandedItem && skip || 0;\n    var isItemsTruncatedByTake = item.count > take + lastExpandedItemSkip;\n\n    if (isFirstExpandedItem && void 0 !== skip) {\n      item.isContinuation = true;\n    }\n\n    if (isLastExpandedItem && void 0 !== take && isItemsTruncatedByTake) {\n      item.isContinuationOnNextPage = true;\n    }\n  }\n\n  function fillSkipTakeInExpandedInfo(options, expandedInfo, currentGroupCount) {\n    var currentGroupIndex = currentGroupCount - 1;\n    var groupCount = options.group ? options.group.length : 0;\n    expandedInfo.skip = options.skips && options.skips[currentGroupIndex];\n\n    if (options.takes && void 0 !== options.takes[currentGroupIndex]) {\n      if (groupCount === currentGroupCount) {\n        expandedInfo.take = expandedInfo.count ? expandedInfo.count - (expandedInfo.skip || 0) : 0;\n      } else {\n        expandedInfo.take = 0;\n      }\n\n      expandedInfo.take += options.takes[currentGroupIndex];\n    }\n  }\n\n  function isDataDeferred(data) {\n    return !Array.isArray(data);\n  }\n\n  function makeDataDeferred(options) {\n    if (!isDataDeferred(options.data)) {\n      options.data = new _deferred.Deferred();\n    }\n  }\n\n  function loadGroupItems(that, options, loadedGroupCount, expandedInfo, groupLevel, data) {\n    if (!options.isCustomLoading) {\n      expandedInfo = {};\n      processGroupItems(that, data, loadedGroupCount, expandedInfo, []);\n      fillSkipTakeInExpandedInfo(options, expandedInfo, loadedGroupCount);\n    }\n\n    var groupCount = options.group ? options.group.length : 0;\n\n    if (expandedInfo.paths.length && groupCount - loadedGroupCount > 0) {\n      makeDataDeferred(options);\n      loadExpandedGroups(that, options, expandedInfo, loadedGroupCount, groupLevel, data);\n    } else {\n      if (expandedInfo.paths.length && options.storeLoadOptions.group) {\n        makeDataDeferred(options);\n        loadLastLevelGroupItems(that, options, expandedInfo, data);\n      } else {\n        if (isDataDeferred(options.data)) {\n          options.data.resolve(data);\n        }\n      }\n    }\n  }\n\n  function loadExpandedGroups(that, options, expandedInfo, loadedGroupCount, groupLevel, data) {\n    var groups = options.group || [];\n    var currentGroup = groups[groupLevel + 1];\n    var deferreds = [];\n    (0, _iterator.each)(expandedInfo.paths, function (expandedItemIndex) {\n      var loadOptions = {\n        requireTotalCount: false,\n        requireGroupCount: true,\n        group: [currentGroup],\n        groupSummary: options.storeLoadOptions.groupSummary,\n        filter: (0, _uiData_grid2.createGroupFilter)(expandedInfo.paths[expandedItemIndex], {\n          filter: options.storeLoadOptions.filter,\n          group: groups\n        }),\n        select: options.storeLoadOptions.select\n      };\n\n      if (0 === expandedItemIndex) {\n        loadOptions.skip = expandedInfo.skip || 0;\n      }\n\n      if (expandedItemIndex === expandedInfo.paths.length - 1) {\n        loadOptions.take = expandedInfo.take;\n      }\n\n      var loadResult = 0 === loadOptions.take ? [] : that._dataSource.loadFromStore(loadOptions);\n      (0, _deferred.when)(loadResult).done(function (data) {\n        var item = expandedInfo.items[expandedItemIndex];\n        applyContinuationToGroupItem(options, expandedInfo, groupLevel, expandedItemIndex);\n        item.items = data;\n      });\n      deferreds.push(loadResult);\n    });\n\n    _deferred.when.apply(null, deferreds).done(function () {\n      updateGroupInfos(that, options, data, loadedGroupCount + 1);\n      loadGroupItems(that, options, loadedGroupCount + 1, expandedInfo, groupLevel + 1, data);\n    });\n  }\n\n  function loadLastLevelGroupItems(that, options, expandedInfo, data) {\n    var expandedFilters = [];\n    var groups = options.group || [];\n    (0, _iterator.each)(expandedInfo.paths, function (_, expandedPath) {\n      expandedFilters.push((0, _uiData_grid2.createGroupFilter)(expandedPath, {\n        group: options.isCustomLoading ? options.storeLoadOptions.group : groups\n      }));\n    });\n    var filter = options.storeLoadOptions.filter;\n\n    if (!options.storeLoadOptions.isLoadingAll) {\n      filter = (0, _uiData_grid.combineFilters)([filter, (0, _uiData_grid.combineFilters)(expandedFilters, \"or\")]);\n    }\n\n    var loadOptions = (0, _extend.extend)({}, options.storeLoadOptions, {\n      requireTotalCount: false,\n      requireGroupCount: false,\n      group: null,\n      sort: groups.concat((0, _uiData_grid.normalizeSortingInfo)(options.storeLoadOptions.sort || [])),\n      filter: filter\n    });\n\n    var isPagingLocal = that._dataSource.isLastLevelGroupItemsPagingLocal();\n\n    if (!isPagingLocal) {\n      loadOptions.skip = expandedInfo.skip;\n      loadOptions.take = expandedInfo.take;\n    }\n\n    (0, _deferred.when)(0 === expandedInfo.take ? [] : that._dataSource.loadFromStore(loadOptions)).done(function (items, extra) {\n      if (isPagingLocal) {\n        items = that._dataSource.sortLastLevelGroupItems(items, groups, expandedInfo.paths);\n        items = expandedInfo.skip ? items.slice(expandedInfo.skip) : items;\n        items = expandedInfo.take ? items.slice(0, expandedInfo.take) : items;\n      }\n\n      (0, _iterator.each)(expandedInfo.items, function (index, item) {\n        var itemCount = item.count - (0 === index && expandedInfo.skip || 0);\n        var expandedItems = items.splice(0, itemCount);\n        applyContinuationToGroupItem(options, expandedInfo, groups.length - 1, index);\n        item.items = expandedItems;\n      });\n      options.data.resolve(data);\n    }).fail(options.data.reject);\n  }\n\n  var loadGroupTotalCount = function (dataSource, options) {\n    var d = new _deferred.Deferred();\n    var isGrouping = !!(options.group && options.group.length);\n    var loadOptions = (0, _extend.extend)({\n      skip: 0,\n      take: 1,\n      requireGroupCount: isGrouping,\n      requireTotalCount: !isGrouping\n    }, options, {\n      group: isGrouping ? options.group : null\n    });\n    dataSource.load(loadOptions).done(function (data, extra) {\n      var count = extra && (isGrouping ? extra.groupCount : extra.totalCount);\n\n      if (!isFinite(count)) {\n        d.reject(_errors.errors.Error(isGrouping ? \"E4022\" : \"E4021\"));\n        return;\n      }\n\n      d.resolve(count);\n    }).fail(d.reject.bind(d));\n    return d;\n  };\n\n  return {\n    updateTotalItemsCount: function (options) {\n      var totalItemsCount = 0;\n      var totalCount = options.extra && options.extra.totalCount || 0;\n      var groupCount = options.extra && options.extra.groupCount || 0;\n\n      var pageSize = this._dataSource.pageSize();\n\n      var isVirtualPaging = this._isVirtualPaging();\n\n      foreachExpandedGroups(this, function (groupInfo) {\n        groupInfo.childrenTotalCount = 0;\n      });\n      foreachExpandedGroups(this, function (groupInfo, parents) {\n        var totalOffset = getTotalOffset(parents, isVirtualPaging ? 0 : pageSize, totalItemsCount);\n        var count = groupInfo.count + groupInfo.childrenTotalCount;\n\n        if (!isVirtualPaging) {\n          count += getContinuationGroupCount(totalOffset, pageSize, count, parents.length - 1);\n        }\n\n        if (parents[parents.length - 2]) {\n          parents[parents.length - 2].childrenTotalCount += count;\n        } else {\n          totalItemsCount += count;\n        }\n      });\n      this.callBase(totalItemsCount - totalCount + groupCount);\n    },\n    _isGroupExpanded: function (groupIndex) {\n      var groups = this._dataSource.group();\n\n      return isGroupExpanded(groups, groupIndex);\n    },\n    _updatePagingOptions: function (options, callback) {\n      var that = this;\n\n      var isVirtualPaging = that._isVirtualPaging();\n\n      var pageSize = that._dataSource.pageSize();\n\n      var skips = [];\n      var takes = [];\n      var skipChildrenTotalCount = 0;\n      var childrenTotalCount = 0;\n\n      if (options.take) {\n        foreachExpandedGroups(this, function (groupInfo) {\n          groupInfo.childrenTotalCount = 0;\n          groupInfo.skipChildrenTotalCount = 0;\n        });\n        foreachExpandedGroups(that, function (groupInfo, parents) {\n          var take;\n          var takeCorrection = 0;\n          var parentTakeCorrection = 0;\n          var totalOffset = getTotalOffset(parents, isVirtualPaging ? 0 : pageSize, childrenTotalCount);\n          var continuationGroupCount = 0;\n          var skipContinuationGroupCount = 0;\n          var groupInfoCount = groupInfo.count + groupInfo.childrenTotalCount;\n          var childrenGroupInfoCount = groupInfoCount;\n          callback && callback(groupInfo, totalOffset);\n          var skip = options.skip - totalOffset;\n\n          if (totalOffset <= options.skip + options.take && groupInfoCount) {\n            take = options.take;\n\n            if (!isVirtualPaging) {\n              continuationGroupCount = getContinuationGroupCount(totalOffset, pageSize, groupInfoCount, parents.length - 1);\n              groupInfoCount += continuationGroupCount * parents.length;\n              childrenGroupInfoCount += continuationGroupCount;\n\n              if (pageSize && skip >= 0) {\n                takeCorrection = parents.length;\n                parentTakeCorrection = parents.length - 1;\n                skipContinuationGroupCount = Math.floor(skip / pageSize);\n              }\n            }\n\n            if (skip >= 0) {\n              if (totalOffset + groupInfoCount > options.skip) {\n                skips.unshift(skip - skipContinuationGroupCount * takeCorrection - groupInfo.skipChildrenTotalCount);\n              }\n\n              if (totalOffset + groupInfoCount >= options.skip + take) {\n                takes.unshift(take - takeCorrection - groupInfo.childrenTotalCount + groupInfo.skipChildrenTotalCount);\n              }\n            } else {\n              if (totalOffset + groupInfoCount >= options.skip + take) {\n                takes.unshift(take + skip - groupInfo.childrenTotalCount);\n              }\n            }\n          }\n\n          if (totalOffset <= options.skip) {\n            if (parents[parents.length - 2]) {\n              parents[parents.length - 2].skipChildrenTotalCount += Math.min(childrenGroupInfoCount, skip + 1 - skipContinuationGroupCount * parentTakeCorrection);\n            } else {\n              skipChildrenTotalCount += Math.min(childrenGroupInfoCount, skip + 1);\n            }\n          }\n\n          if (totalOffset <= options.skip + take) {\n            groupInfoCount = Math.min(childrenGroupInfoCount, skip + take - (skipContinuationGroupCount + 1) * parentTakeCorrection);\n\n            if (parents[parents.length - 2]) {\n              parents[parents.length - 2].childrenTotalCount += groupInfoCount;\n            } else {\n              childrenTotalCount += groupInfoCount;\n            }\n          }\n        });\n        options.skip -= skipChildrenTotalCount;\n        options.take -= childrenTotalCount - skipChildrenTotalCount;\n      }\n\n      options.skips = skips;\n      options.takes = takes;\n    },\n    changeRowExpand: function (path) {\n      var that = this;\n      var groupInfo = that.findGroupInfo(path);\n      var dataSource = that._dataSource;\n      var remoteGroupPaging = dataSource.remoteOperations().groupPaging;\n      var groups = (0, _uiData_grid.normalizeSortingInfo)(dataSource.group());\n\n      if (groupInfo) {\n        groupInfo.isExpanded = !groupInfo.isExpanded;\n\n        if (remoteGroupPaging && groupInfo.isExpanded && path.length < groups.length) {\n          return loadGroupTotalCount(dataSource, {\n            filter: (0, _uiData_grid2.createGroupFilter)(path, {\n              filter: dataSource.lastLoadOptions().filter,\n              group: dataSource.group()\n            }),\n            group: [groups[path.length]],\n            select: dataSource.select()\n          }).done(function (groupCount) {\n            groupInfo.count = groupCount;\n          });\n        }\n\n        return new _deferred.Deferred().resolve();\n      }\n\n      return new _deferred.Deferred().reject();\n    },\n    handleDataLoading: function (options) {\n      var that = this;\n      var storeLoadOptions = options.storeLoadOptions;\n      var groups = (0, _uiData_grid.normalizeSortingInfo)(storeLoadOptions.group || options.loadOptions.group);\n\n      if (options.isCustomLoading || !groups.length) {\n        return;\n      }\n\n      if (options.remoteOperations.grouping) {\n        var remotePaging = that._dataSource.remoteOperations().paging;\n\n        storeLoadOptions.group = (0, _uiData_grid.normalizeSortingInfo)(storeLoadOptions.group);\n        storeLoadOptions.group.forEach(function (group, index) {\n          var isLastGroup = index === storeLoadOptions.group.length - 1;\n          group.isExpanded = !remotePaging || !isLastGroup;\n        });\n      }\n\n      options.group = options.group || groups;\n\n      if (options.remoteOperations.paging) {\n        options.skip = storeLoadOptions.skip;\n        options.take = storeLoadOptions.take;\n        storeLoadOptions.requireGroupCount = true;\n        storeLoadOptions.group = groups.slice(0, 1);\n\n        that._updatePagingOptions(options);\n\n        storeLoadOptions.skip = options.skip;\n        storeLoadOptions.take = options.take;\n      } else {\n        that.foreachGroups(function (groupInfo) {\n          groupInfo.count = 0;\n        });\n      }\n    },\n    handleDataLoadedCore: function (options, callBase) {\n      var that = this;\n      var loadedGroupCount = (0, _uiData_grid.normalizeSortingInfo)(options.storeLoadOptions.group || options.loadOptions.group).length;\n      var groupCount = options.group ? options.group.length : 0;\n      var totalCount;\n      var expandedInfo = {};\n\n      if (options.isCustomLoading) {\n        callBase(options);\n        processGroupItems(that, options.data, loadedGroupCount, expandedInfo, [], options.isCustomLoading, options.storeLoadOptions.isLoadingAll);\n      } else {\n        totalCount = updateGroupInfos(that, options, options.data, loadedGroupCount);\n\n        if (totalCount < 0) {\n          options.data = new _deferred.Deferred().reject(_ui2.default.Error(\"E1037\"));\n          return;\n        }\n\n        if (!options.remoteOperations.paging) {\n          if (loadedGroupCount && options.extra && options.loadOptions.requireTotalCount) {\n            options.extra.totalCount = totalCount;\n            options.extra.groupCount = options.data.length;\n          }\n        }\n\n        if (groupCount && options.storeLoadOptions.requireGroupCount && !isFinite(options.extra.groupCount)) {\n          options.data = new _deferred.Deferred().reject(_errors.errors.Error(\"E4022\"));\n          return;\n        }\n\n        that.updateTotalItemsCount(options);\n\n        if (!options.remoteOperations.paging) {\n          that._updatePagingOptions(options);\n        }\n\n        callBase(options);\n\n        if (!options.remoteOperations.paging) {\n          that._processPaging(options, loadedGroupCount);\n        }\n      }\n\n      loadGroupItems(that, options, loadedGroupCount, expandedInfo, 0, options.data);\n    },\n    _processSkips: function (items, skips, groupCount) {\n      if (!groupCount) {\n        return;\n      }\n\n      var firstItem = items[0];\n      var skip = skips[0];\n      var children = firstItem && firstItem.items;\n\n      if (void 0 !== skip) {\n        firstItem.isContinuation = true;\n\n        if (children) {\n          firstItem.items = children.slice(skip);\n\n          this._processSkips(firstItem.items, skips.slice(1), groupCount - 1);\n        }\n      }\n    },\n    _processTakes: function (items, skips, takes, groupCount, parents) {\n      if (!groupCount || !items) {\n        return;\n      }\n\n      parents = parents || [];\n      var lastItem = items[items.length - 1];\n      var children = lastItem && lastItem.items;\n      var take = takes[0];\n      var skip = skips[0];\n\n      if (lastItem) {\n        var maxTakeCount = lastItem.count - (lastItem.isContinuation && skip || 0) || children.length;\n\n        if (void 0 !== take && maxTakeCount > take) {\n          lastItem.isContinuationOnNextPage = true;\n          parents.forEach(function (parent) {\n            parent.isContinuationOnNextPage = true;\n          });\n\n          if (children) {\n            children = children.slice(0, take);\n            lastItem.items = children;\n          }\n        }\n\n        parents.push(lastItem);\n\n        this._processTakes(children, skips.slice(1), takes.slice(1), groupCount - 1, parents);\n      }\n    },\n    _processPaging: function (options, groupCount) {\n      this._processSkips(options.data, options.skips, groupCount);\n\n      this._processTakes(options.data, options.skips, options.takes, groupCount);\n    },\n    isLastLevelGroupItemsPagingLocal: function () {\n      return false;\n    },\n    sortLastLevelGroupItems: function (items) {\n      return items;\n    },\n    refresh: function (options, operationTypes) {\n      var that = this;\n      var dataSource = that._dataSource;\n      var storeLoadOptions = options.storeLoadOptions;\n      var group = options.group || options.storeLoadOptions.group;\n      var oldGroups = (0, _uiData_grid.normalizeSortingInfo)(that._group);\n      var isExpanded;\n      var groupIndex;\n\n      function handleGroup(groupInfo, parents) {\n        if (parents.length === groupIndex + 1) {\n          groupInfo.isExpanded = isExpanded;\n        }\n      }\n\n      for (groupIndex = 0; groupIndex < oldGroups.length; groupIndex++) {\n        isExpanded = isGroupExpanded(group, groupIndex);\n\n        if (isGroupExpanded(that._group, groupIndex) !== isExpanded) {\n          that.foreachGroups(handleGroup);\n        }\n      }\n\n      that.callBase.apply(this, arguments);\n\n      if (group && options.remoteOperations.paging && operationTypes.reload) {\n        return foreachExpandedGroups(that, function (groupInfo) {\n          var groupCountQuery = loadGroupTotalCount(dataSource, {\n            filter: (0, _uiData_grid2.createGroupFilter)(groupInfo.path, {\n              filter: storeLoadOptions.filter,\n              group: group\n            }),\n            group: group.slice(groupInfo.path.length),\n            select: storeLoadOptions.select\n          });\n          var groupOffsetQuery = loadGroupTotalCount(dataSource, {\n            filter: (0, _uiData_gridGrouping.createOffsetFilter)(groupInfo.path, {\n              filter: storeLoadOptions.filter,\n              group: group\n            }),\n            group: group.slice(groupInfo.path.length - 1, groupInfo.path.length),\n            select: storeLoadOptions.select\n          });\n          return (0, _deferred.when)(groupOffsetQuery, groupCountQuery).done(function (offset, count) {\n            offset = parseInt(offset.length ? offset[0] : offset);\n            count = parseInt(count.length ? count[0] : count);\n            groupInfo.offset = offset;\n\n            if (groupInfo.count !== count) {\n              groupInfo.count = count;\n              that.updateTotalItemsCount(options);\n            }\n          });\n        }, true);\n      }\n    }\n  };\n}());","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/ticketSystem/frontend/node_modules/devextreme/ui/data_grid/ui.data_grid.grouping.collapsed.js"],"names":["_extend","require","_iterator","_uiData_grid","_uiData_gridGrouping","_uiData_grid2","_ui","_ui2","_interopRequireDefault","_errors","_deferred","obj","__esModule","exports","GroupingHelper","inherit","foreachExpandedGroups","that","callback","updateGroups","foreachGroups","groupInfo","parents","isExpanded","processGroupItems","items","groupsCount","expandedInfo","path","isCustomLoading","isLastGroupExpanded","paths","count","lastCount","i","length","item","push","key","findGroupInfo","collapsedItems","slice","pop","updateGroupInfoItem","isLastGroupLevel","offset","addGroupInfo","_isGroupExpanded","updateGroupInfos","options","loadedGroupCount","groupIndex","parentIndex","groupCount","group","remotePaging","remoteOperations","paging","totalCount","skip","skips","isGroupExpanded","groups","getTotalOffset","groupInfos","pageSize","groupSize","totalOffset","childrenTotalCount","getContinuationGroupCount","groupOffset","pageOffset","Math","floor","applyContinuationToGroupItem","groupLevel","expandedItemIndex","take","takes","isLastExpandedItem","isFirstExpandedItem","lastExpandedItemSkip","isItemsTruncatedByTake","isContinuation","isContinuationOnNextPage","fillSkipTakeInExpandedInfo","currentGroupCount","currentGroupIndex","isDataDeferred","data","Array","isArray","makeDataDeferred","Deferred","loadGroupItems","loadExpandedGroups","storeLoadOptions","loadLastLevelGroupItems","resolve","currentGroup","deferreds","each","loadOptions","requireTotalCount","requireGroupCount","groupSummary","filter","createGroupFilter","select","loadResult","_dataSource","loadFromStore","when","done","apply","expandedFilters","_","expandedPath","isLoadingAll","combineFilters","extend","sort","concat","normalizeSortingInfo","isPagingLocal","isLastLevelGroupItemsPagingLocal","extra","sortLastLevelGroupItems","index","itemCount","expandedItems","splice","fail","reject","loadGroupTotalCount","dataSource","d","isGrouping","load","isFinite","errors","Error","bind","updateTotalItemsCount","totalItemsCount","isVirtualPaging","_isVirtualPaging","callBase","_updatePagingOptions","skipChildrenTotalCount","takeCorrection","parentTakeCorrection","continuationGroupCount","skipContinuationGroupCount","groupInfoCount","childrenGroupInfoCount","unshift","min","changeRowExpand","remoteGroupPaging","groupPaging","lastLoadOptions","handleDataLoading","grouping","forEach","isLastGroup","handleDataLoadedCore","default","_processPaging","_processSkips","firstItem","children","_processTakes","lastItem","maxTakeCount","parent","refresh","operationTypes","oldGroups","_group","handleGroup","arguments","reload","groupCountQuery","groupOffsetQuery","createOffsetFilter","parseInt"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/data_grid/ui.data_grid.grouping.collapsed.js)\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _uiData_grid = require(\"./ui.data_grid.core\");\r\nvar _uiData_gridGrouping = require(\"./ui.data_grid.grouping.core\");\r\nvar _uiData_grid2 = require(\"./ui.data_grid.utils\");\r\nvar _ui = require(\"../widget/ui.errors\");\r\nvar _ui2 = _interopRequireDefault(_ui);\r\nvar _errors = require(\"../../data/errors\");\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nexports.GroupingHelper = _uiData_gridGrouping.GroupingHelper.inherit(function() {\r\n    var foreachExpandedGroups = function(that, callback, updateGroups) {\r\n        return that.foreachGroups(function(groupInfo, parents) {\r\n            if (groupInfo.isExpanded) {\r\n                return callback(groupInfo, parents)\r\n            }\r\n        }, true, false, updateGroups, updateGroups)\r\n    };\r\n    var processGroupItems = function processGroupItems(that, items, groupsCount, expandedInfo, path, isCustomLoading, isLastGroupExpanded) {\r\n        var isExpanded;\r\n        expandedInfo.items = expandedInfo.items || [];\r\n        expandedInfo.paths = expandedInfo.paths || [];\r\n        expandedInfo.count = expandedInfo.count || 0;\r\n        expandedInfo.lastCount = expandedInfo.lastCount || 0;\r\n        if (!groupsCount) {\r\n            return\r\n        }\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            if (void 0 !== item.items) {\r\n                path.push(item.key);\r\n                if (isCustomLoading) {\r\n                    isExpanded = true\r\n                } else {\r\n                    var groupInfo = that.findGroupInfo(path);\r\n                    isExpanded = groupInfo && groupInfo.isExpanded\r\n                }\r\n                if (!isExpanded) {\r\n                    item.collapsedItems = item.items;\r\n                    item.items = null\r\n                } else {\r\n                    if (item.items) {\r\n                        processGroupItems(that, item.items, groupsCount - 1, expandedInfo, path, isCustomLoading, isLastGroupExpanded)\r\n                    } else {\r\n                        if (1 === groupsCount && item.count && (!isCustomLoading || isLastGroupExpanded)) {\r\n                            expandedInfo.items.push(item);\r\n                            expandedInfo.paths.push(path.slice(0));\r\n                            expandedInfo.count += expandedInfo.lastCount;\r\n                            expandedInfo.lastCount = item.count\r\n                        }\r\n                    }\r\n                }\r\n                path.pop()\r\n            }\r\n        }\r\n    };\r\n    var updateGroupInfoItem = function(that, item, isLastGroupLevel, path, offset) {\r\n        var groupInfo = that.findGroupInfo(path);\r\n        var count;\r\n        if (!groupInfo) {\r\n            if (isLastGroupLevel) {\r\n                count = item.count > 0 ? item.count : item.items.length\r\n            }\r\n            that.addGroupInfo({\r\n                isExpanded: that._isGroupExpanded(path.length - 1),\r\n                path: path.slice(0),\r\n                offset: offset,\r\n                count: count || 0\r\n            })\r\n        } else {\r\n            if (isLastGroupLevel) {\r\n                groupInfo.count = item.count > 0 ? item.count : item.items && item.items.length || 0\r\n            } else {\r\n                item.count = groupInfo.count || item.count\r\n            }\r\n            groupInfo.offset = offset\r\n        }\r\n    };\r\n    var updateGroupInfos = function updateGroupInfos(that, options, items, loadedGroupCount, groupIndex, path, parentIndex) {\r\n        var groupCount = options.group ? options.group.length : 0;\r\n        var isLastGroupLevel = groupCount === loadedGroupCount;\r\n        var remotePaging = options.remoteOperations.paging;\r\n        var offset = 0;\r\n        var totalCount = 0;\r\n        var count;\r\n        groupIndex = groupIndex || 0;\r\n        path = path || [];\r\n        if (remotePaging && !parentIndex) {\r\n            offset = 0 === groupIndex ? options.skip || 0 : options.skips[groupIndex - 1] || 0\r\n        }\r\n        if (groupIndex >= loadedGroupCount) {\r\n            return items.length\r\n        }\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            if (item) {\r\n                path.push(item.key);\r\n                if (!item.count && !item.items || void 0 === item.items) {\r\n                    return -1\r\n                }\r\n                updateGroupInfoItem(that, item, isLastGroupLevel, path, offset + i);\r\n                count = item.items ? updateGroupInfos(that, options, item.items, loadedGroupCount, groupIndex + 1, path, i) : item.count || -1;\r\n                if (count < 0) {\r\n                    return -1\r\n                }\r\n                totalCount += count;\r\n                path.pop()\r\n            }\r\n        }\r\n        return totalCount\r\n    };\r\n    var isGroupExpanded = function(groups, groupIndex) {\r\n        return groups && groups.length && groups[groupIndex] && !!groups[groupIndex].isExpanded\r\n    };\r\n    var getTotalOffset = function(groupInfos, pageSize, offset) {\r\n        var groupSize;\r\n        var totalOffset = offset;\r\n        for (var groupIndex = 0; groupIndex < groupInfos.length; groupIndex++) {\r\n            groupSize = groupInfos[groupIndex].offset + 1;\r\n            if (groupIndex > 0) {\r\n                groupSize += groupInfos[groupIndex - 1].childrenTotalCount;\r\n                if (pageSize) {\r\n                    groupSize += getContinuationGroupCount(totalOffset, pageSize, groupSize, groupIndex - 1) * groupIndex\r\n                }\r\n            }\r\n            totalOffset += groupSize\r\n        }\r\n        return totalOffset\r\n    };\r\n\r\n    function getContinuationGroupCount(groupOffset, pageSize, groupSize, groupIndex) {\r\n        groupIndex = groupIndex || 0;\r\n        if (pageSize > 1 && groupSize > 0) {\r\n            var pageOffset = groupOffset - Math.floor(groupOffset / pageSize) * pageSize || pageSize;\r\n            pageOffset += groupSize - groupIndex - 2;\r\n            if (pageOffset < 0) {\r\n                pageOffset += pageSize\r\n            }\r\n            return Math.floor(pageOffset / (pageSize - groupIndex - 1))\r\n        }\r\n        return 0\r\n    }\r\n\r\n    function applyContinuationToGroupItem(options, expandedInfo, groupLevel, expandedItemIndex) {\r\n        var item = expandedInfo.items[expandedItemIndex];\r\n        var skip = options.skips && options.skips[groupLevel];\r\n        var take = options.takes && options.takes[groupLevel];\r\n        var isLastExpandedItem = expandedItemIndex === expandedInfo.items.length - 1;\r\n        var isFirstExpandedItem = 0 === expandedItemIndex;\r\n        var lastExpandedItemSkip = isFirstExpandedItem && skip || 0;\r\n        var isItemsTruncatedByTake = item.count > take + lastExpandedItemSkip;\r\n        if (isFirstExpandedItem && void 0 !== skip) {\r\n            item.isContinuation = true\r\n        }\r\n        if (isLastExpandedItem && void 0 !== take && isItemsTruncatedByTake) {\r\n            item.isContinuationOnNextPage = true\r\n        }\r\n    }\r\n\r\n    function fillSkipTakeInExpandedInfo(options, expandedInfo, currentGroupCount) {\r\n        var currentGroupIndex = currentGroupCount - 1;\r\n        var groupCount = options.group ? options.group.length : 0;\r\n        expandedInfo.skip = options.skips && options.skips[currentGroupIndex];\r\n        if (options.takes && void 0 !== options.takes[currentGroupIndex]) {\r\n            if (groupCount === currentGroupCount) {\r\n                expandedInfo.take = expandedInfo.count ? expandedInfo.count - (expandedInfo.skip || 0) : 0\r\n            } else {\r\n                expandedInfo.take = 0\r\n            }\r\n            expandedInfo.take += options.takes[currentGroupIndex]\r\n        }\r\n    }\r\n\r\n    function isDataDeferred(data) {\r\n        return !Array.isArray(data)\r\n    }\r\n\r\n    function makeDataDeferred(options) {\r\n        if (!isDataDeferred(options.data)) {\r\n            options.data = new _deferred.Deferred\r\n        }\r\n    }\r\n\r\n    function loadGroupItems(that, options, loadedGroupCount, expandedInfo, groupLevel, data) {\r\n        if (!options.isCustomLoading) {\r\n            expandedInfo = {};\r\n            processGroupItems(that, data, loadedGroupCount, expandedInfo, []);\r\n            fillSkipTakeInExpandedInfo(options, expandedInfo, loadedGroupCount)\r\n        }\r\n        var groupCount = options.group ? options.group.length : 0;\r\n        if (expandedInfo.paths.length && groupCount - loadedGroupCount > 0) {\r\n            makeDataDeferred(options);\r\n            loadExpandedGroups(that, options, expandedInfo, loadedGroupCount, groupLevel, data)\r\n        } else {\r\n            if (expandedInfo.paths.length && options.storeLoadOptions.group) {\r\n                makeDataDeferred(options);\r\n                loadLastLevelGroupItems(that, options, expandedInfo, data)\r\n            } else {\r\n                if (isDataDeferred(options.data)) {\r\n                    options.data.resolve(data)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function loadExpandedGroups(that, options, expandedInfo, loadedGroupCount, groupLevel, data) {\r\n        var groups = options.group || [];\r\n        var currentGroup = groups[groupLevel + 1];\r\n        var deferreds = [];\r\n        (0, _iterator.each)(expandedInfo.paths, function(expandedItemIndex) {\r\n            var loadOptions = {\r\n                requireTotalCount: false,\r\n                requireGroupCount: true,\r\n                group: [currentGroup],\r\n                groupSummary: options.storeLoadOptions.groupSummary,\r\n                filter: (0, _uiData_grid2.createGroupFilter)(expandedInfo.paths[expandedItemIndex], {\r\n                    filter: options.storeLoadOptions.filter,\r\n                    group: groups\r\n                }),\r\n                select: options.storeLoadOptions.select\r\n            };\r\n            if (0 === expandedItemIndex) {\r\n                loadOptions.skip = expandedInfo.skip || 0\r\n            }\r\n            if (expandedItemIndex === expandedInfo.paths.length - 1) {\r\n                loadOptions.take = expandedInfo.take\r\n            }\r\n            var loadResult = 0 === loadOptions.take ? [] : that._dataSource.loadFromStore(loadOptions);\r\n            (0, _deferred.when)(loadResult).done(function(data) {\r\n                var item = expandedInfo.items[expandedItemIndex];\r\n                applyContinuationToGroupItem(options, expandedInfo, groupLevel, expandedItemIndex);\r\n                item.items = data\r\n            });\r\n            deferreds.push(loadResult)\r\n        });\r\n        _deferred.when.apply(null, deferreds).done(function() {\r\n            updateGroupInfos(that, options, data, loadedGroupCount + 1);\r\n            loadGroupItems(that, options, loadedGroupCount + 1, expandedInfo, groupLevel + 1, data)\r\n        })\r\n    }\r\n\r\n    function loadLastLevelGroupItems(that, options, expandedInfo, data) {\r\n        var expandedFilters = [];\r\n        var groups = options.group || [];\r\n        (0, _iterator.each)(expandedInfo.paths, function(_, expandedPath) {\r\n            expandedFilters.push((0, _uiData_grid2.createGroupFilter)(expandedPath, {\r\n                group: options.isCustomLoading ? options.storeLoadOptions.group : groups\r\n            }))\r\n        });\r\n        var filter = options.storeLoadOptions.filter;\r\n        if (!options.storeLoadOptions.isLoadingAll) {\r\n            filter = (0, _uiData_grid.combineFilters)([filter, (0, _uiData_grid.combineFilters)(expandedFilters, \"or\")])\r\n        }\r\n        var loadOptions = (0, _extend.extend)({}, options.storeLoadOptions, {\r\n            requireTotalCount: false,\r\n            requireGroupCount: false,\r\n            group: null,\r\n            sort: groups.concat((0, _uiData_grid.normalizeSortingInfo)(options.storeLoadOptions.sort || [])),\r\n            filter: filter\r\n        });\r\n        var isPagingLocal = that._dataSource.isLastLevelGroupItemsPagingLocal();\r\n        if (!isPagingLocal) {\r\n            loadOptions.skip = expandedInfo.skip;\r\n            loadOptions.take = expandedInfo.take\r\n        }(0, _deferred.when)(0 === expandedInfo.take ? [] : that._dataSource.loadFromStore(loadOptions)).done(function(items, extra) {\r\n            if (isPagingLocal) {\r\n                items = that._dataSource.sortLastLevelGroupItems(items, groups, expandedInfo.paths);\r\n                items = expandedInfo.skip ? items.slice(expandedInfo.skip) : items;\r\n                items = expandedInfo.take ? items.slice(0, expandedInfo.take) : items\r\n            }(0, _iterator.each)(expandedInfo.items, function(index, item) {\r\n                var itemCount = item.count - (0 === index && expandedInfo.skip || 0);\r\n                var expandedItems = items.splice(0, itemCount);\r\n                applyContinuationToGroupItem(options, expandedInfo, groups.length - 1, index);\r\n                item.items = expandedItems\r\n            });\r\n            options.data.resolve(data)\r\n        }).fail(options.data.reject)\r\n    }\r\n    var loadGroupTotalCount = function(dataSource, options) {\r\n        var d = new _deferred.Deferred;\r\n        var isGrouping = !!(options.group && options.group.length);\r\n        var loadOptions = (0, _extend.extend)({\r\n            skip: 0,\r\n            take: 1,\r\n            requireGroupCount: isGrouping,\r\n            requireTotalCount: !isGrouping\r\n        }, options, {\r\n            group: isGrouping ? options.group : null\r\n        });\r\n        dataSource.load(loadOptions).done(function(data, extra) {\r\n            var count = extra && (isGrouping ? extra.groupCount : extra.totalCount);\r\n            if (!isFinite(count)) {\r\n                d.reject(_errors.errors.Error(isGrouping ? \"E4022\" : \"E4021\"));\r\n                return\r\n            }\r\n            d.resolve(count)\r\n        }).fail(d.reject.bind(d));\r\n        return d\r\n    };\r\n    return {\r\n        updateTotalItemsCount: function(options) {\r\n            var totalItemsCount = 0;\r\n            var totalCount = options.extra && options.extra.totalCount || 0;\r\n            var groupCount = options.extra && options.extra.groupCount || 0;\r\n            var pageSize = this._dataSource.pageSize();\r\n            var isVirtualPaging = this._isVirtualPaging();\r\n            foreachExpandedGroups(this, function(groupInfo) {\r\n                groupInfo.childrenTotalCount = 0\r\n            });\r\n            foreachExpandedGroups(this, function(groupInfo, parents) {\r\n                var totalOffset = getTotalOffset(parents, isVirtualPaging ? 0 : pageSize, totalItemsCount);\r\n                var count = groupInfo.count + groupInfo.childrenTotalCount;\r\n                if (!isVirtualPaging) {\r\n                    count += getContinuationGroupCount(totalOffset, pageSize, count, parents.length - 1)\r\n                }\r\n                if (parents[parents.length - 2]) {\r\n                    parents[parents.length - 2].childrenTotalCount += count\r\n                } else {\r\n                    totalItemsCount += count\r\n                }\r\n            });\r\n            this.callBase(totalItemsCount - totalCount + groupCount)\r\n        },\r\n        _isGroupExpanded: function(groupIndex) {\r\n            var groups = this._dataSource.group();\r\n            return isGroupExpanded(groups, groupIndex)\r\n        },\r\n        _updatePagingOptions: function(options, callback) {\r\n            var that = this;\r\n            var isVirtualPaging = that._isVirtualPaging();\r\n            var pageSize = that._dataSource.pageSize();\r\n            var skips = [];\r\n            var takes = [];\r\n            var skipChildrenTotalCount = 0;\r\n            var childrenTotalCount = 0;\r\n            if (options.take) {\r\n                foreachExpandedGroups(this, function(groupInfo) {\r\n                    groupInfo.childrenTotalCount = 0;\r\n                    groupInfo.skipChildrenTotalCount = 0\r\n                });\r\n                foreachExpandedGroups(that, function(groupInfo, parents) {\r\n                    var take;\r\n                    var takeCorrection = 0;\r\n                    var parentTakeCorrection = 0;\r\n                    var totalOffset = getTotalOffset(parents, isVirtualPaging ? 0 : pageSize, childrenTotalCount);\r\n                    var continuationGroupCount = 0;\r\n                    var skipContinuationGroupCount = 0;\r\n                    var groupInfoCount = groupInfo.count + groupInfo.childrenTotalCount;\r\n                    var childrenGroupInfoCount = groupInfoCount;\r\n                    callback && callback(groupInfo, totalOffset);\r\n                    var skip = options.skip - totalOffset;\r\n                    if (totalOffset <= options.skip + options.take && groupInfoCount) {\r\n                        take = options.take;\r\n                        if (!isVirtualPaging) {\r\n                            continuationGroupCount = getContinuationGroupCount(totalOffset, pageSize, groupInfoCount, parents.length - 1);\r\n                            groupInfoCount += continuationGroupCount * parents.length;\r\n                            childrenGroupInfoCount += continuationGroupCount;\r\n                            if (pageSize && skip >= 0) {\r\n                                takeCorrection = parents.length;\r\n                                parentTakeCorrection = parents.length - 1;\r\n                                skipContinuationGroupCount = Math.floor(skip / pageSize)\r\n                            }\r\n                        }\r\n                        if (skip >= 0) {\r\n                            if (totalOffset + groupInfoCount > options.skip) {\r\n                                skips.unshift(skip - skipContinuationGroupCount * takeCorrection - groupInfo.skipChildrenTotalCount)\r\n                            }\r\n                            if (totalOffset + groupInfoCount >= options.skip + take) {\r\n                                takes.unshift(take - takeCorrection - groupInfo.childrenTotalCount + groupInfo.skipChildrenTotalCount)\r\n                            }\r\n                        } else {\r\n                            if (totalOffset + groupInfoCount >= options.skip + take) {\r\n                                takes.unshift(take + skip - groupInfo.childrenTotalCount)\r\n                            }\r\n                        }\r\n                    }\r\n                    if (totalOffset <= options.skip) {\r\n                        if (parents[parents.length - 2]) {\r\n                            parents[parents.length - 2].skipChildrenTotalCount += Math.min(childrenGroupInfoCount, skip + 1 - skipContinuationGroupCount * parentTakeCorrection)\r\n                        } else {\r\n                            skipChildrenTotalCount += Math.min(childrenGroupInfoCount, skip + 1)\r\n                        }\r\n                    }\r\n                    if (totalOffset <= options.skip + take) {\r\n                        groupInfoCount = Math.min(childrenGroupInfoCount, skip + take - (skipContinuationGroupCount + 1) * parentTakeCorrection);\r\n                        if (parents[parents.length - 2]) {\r\n                            parents[parents.length - 2].childrenTotalCount += groupInfoCount\r\n                        } else {\r\n                            childrenTotalCount += groupInfoCount\r\n                        }\r\n                    }\r\n                });\r\n                options.skip -= skipChildrenTotalCount;\r\n                options.take -= childrenTotalCount - skipChildrenTotalCount\r\n            }\r\n            options.skips = skips;\r\n            options.takes = takes\r\n        },\r\n        changeRowExpand: function(path) {\r\n            var that = this;\r\n            var groupInfo = that.findGroupInfo(path);\r\n            var dataSource = that._dataSource;\r\n            var remoteGroupPaging = dataSource.remoteOperations().groupPaging;\r\n            var groups = (0, _uiData_grid.normalizeSortingInfo)(dataSource.group());\r\n            if (groupInfo) {\r\n                groupInfo.isExpanded = !groupInfo.isExpanded;\r\n                if (remoteGroupPaging && groupInfo.isExpanded && path.length < groups.length) {\r\n                    return loadGroupTotalCount(dataSource, {\r\n                        filter: (0, _uiData_grid2.createGroupFilter)(path, {\r\n                            filter: dataSource.lastLoadOptions().filter,\r\n                            group: dataSource.group()\r\n                        }),\r\n                        group: [groups[path.length]],\r\n                        select: dataSource.select()\r\n                    }).done(function(groupCount) {\r\n                        groupInfo.count = groupCount\r\n                    })\r\n                }\r\n                return (new _deferred.Deferred).resolve()\r\n            }\r\n            return (new _deferred.Deferred).reject()\r\n        },\r\n        handleDataLoading: function(options) {\r\n            var that = this;\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var groups = (0, _uiData_grid.normalizeSortingInfo)(storeLoadOptions.group || options.loadOptions.group);\r\n            if (options.isCustomLoading || !groups.length) {\r\n                return\r\n            }\r\n            if (options.remoteOperations.grouping) {\r\n                var remotePaging = that._dataSource.remoteOperations().paging;\r\n                storeLoadOptions.group = (0, _uiData_grid.normalizeSortingInfo)(storeLoadOptions.group);\r\n                storeLoadOptions.group.forEach(function(group, index) {\r\n                    var isLastGroup = index === storeLoadOptions.group.length - 1;\r\n                    group.isExpanded = !remotePaging || !isLastGroup\r\n                })\r\n            }\r\n            options.group = options.group || groups;\r\n            if (options.remoteOperations.paging) {\r\n                options.skip = storeLoadOptions.skip;\r\n                options.take = storeLoadOptions.take;\r\n                storeLoadOptions.requireGroupCount = true;\r\n                storeLoadOptions.group = groups.slice(0, 1);\r\n                that._updatePagingOptions(options);\r\n                storeLoadOptions.skip = options.skip;\r\n                storeLoadOptions.take = options.take\r\n            } else {\r\n                that.foreachGroups(function(groupInfo) {\r\n                    groupInfo.count = 0\r\n                })\r\n            }\r\n        },\r\n        handleDataLoadedCore: function(options, callBase) {\r\n            var that = this;\r\n            var loadedGroupCount = (0, _uiData_grid.normalizeSortingInfo)(options.storeLoadOptions.group || options.loadOptions.group).length;\r\n            var groupCount = options.group ? options.group.length : 0;\r\n            var totalCount;\r\n            var expandedInfo = {};\r\n            if (options.isCustomLoading) {\r\n                callBase(options);\r\n                processGroupItems(that, options.data, loadedGroupCount, expandedInfo, [], options.isCustomLoading, options.storeLoadOptions.isLoadingAll)\r\n            } else {\r\n                totalCount = updateGroupInfos(that, options, options.data, loadedGroupCount);\r\n                if (totalCount < 0) {\r\n                    options.data = (new _deferred.Deferred).reject(_ui2.default.Error(\"E1037\"));\r\n                    return\r\n                }\r\n                if (!options.remoteOperations.paging) {\r\n                    if (loadedGroupCount && options.extra && options.loadOptions.requireTotalCount) {\r\n                        options.extra.totalCount = totalCount;\r\n                        options.extra.groupCount = options.data.length\r\n                    }\r\n                }\r\n                if (groupCount && options.storeLoadOptions.requireGroupCount && !isFinite(options.extra.groupCount)) {\r\n                    options.data = (new _deferred.Deferred).reject(_errors.errors.Error(\"E4022\"));\r\n                    return\r\n                }\r\n                that.updateTotalItemsCount(options);\r\n                if (!options.remoteOperations.paging) {\r\n                    that._updatePagingOptions(options)\r\n                }\r\n                callBase(options);\r\n                if (!options.remoteOperations.paging) {\r\n                    that._processPaging(options, loadedGroupCount)\r\n                }\r\n            }\r\n            loadGroupItems(that, options, loadedGroupCount, expandedInfo, 0, options.data)\r\n        },\r\n        _processSkips: function(items, skips, groupCount) {\r\n            if (!groupCount) {\r\n                return\r\n            }\r\n            var firstItem = items[0];\r\n            var skip = skips[0];\r\n            var children = firstItem && firstItem.items;\r\n            if (void 0 !== skip) {\r\n                firstItem.isContinuation = true;\r\n                if (children) {\r\n                    firstItem.items = children.slice(skip);\r\n                    this._processSkips(firstItem.items, skips.slice(1), groupCount - 1)\r\n                }\r\n            }\r\n        },\r\n        _processTakes: function(items, skips, takes, groupCount, parents) {\r\n            if (!groupCount || !items) {\r\n                return\r\n            }\r\n            parents = parents || [];\r\n            var lastItem = items[items.length - 1];\r\n            var children = lastItem && lastItem.items;\r\n            var take = takes[0];\r\n            var skip = skips[0];\r\n            if (lastItem) {\r\n                var maxTakeCount = lastItem.count - (lastItem.isContinuation && skip || 0) || children.length;\r\n                if (void 0 !== take && maxTakeCount > take) {\r\n                    lastItem.isContinuationOnNextPage = true;\r\n                    parents.forEach(function(parent) {\r\n                        parent.isContinuationOnNextPage = true\r\n                    });\r\n                    if (children) {\r\n                        children = children.slice(0, take);\r\n                        lastItem.items = children\r\n                    }\r\n                }\r\n                parents.push(lastItem);\r\n                this._processTakes(children, skips.slice(1), takes.slice(1), groupCount - 1, parents)\r\n            }\r\n        },\r\n        _processPaging: function(options, groupCount) {\r\n            this._processSkips(options.data, options.skips, groupCount);\r\n            this._processTakes(options.data, options.skips, options.takes, groupCount)\r\n        },\r\n        isLastLevelGroupItemsPagingLocal: function() {\r\n            return false\r\n        },\r\n        sortLastLevelGroupItems: function(items) {\r\n            return items\r\n        },\r\n        refresh: function(options, operationTypes) {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var group = options.group || options.storeLoadOptions.group;\r\n            var oldGroups = (0, _uiData_grid.normalizeSortingInfo)(that._group);\r\n            var isExpanded;\r\n            var groupIndex;\r\n\r\n            function handleGroup(groupInfo, parents) {\r\n                if (parents.length === groupIndex + 1) {\r\n                    groupInfo.isExpanded = isExpanded\r\n                }\r\n            }\r\n            for (groupIndex = 0; groupIndex < oldGroups.length; groupIndex++) {\r\n                isExpanded = isGroupExpanded(group, groupIndex);\r\n                if (isGroupExpanded(that._group, groupIndex) !== isExpanded) {\r\n                    that.foreachGroups(handleGroup)\r\n                }\r\n            }\r\n            that.callBase.apply(this, arguments);\r\n            if (group && options.remoteOperations.paging && operationTypes.reload) {\r\n                return foreachExpandedGroups(that, function(groupInfo) {\r\n                    var groupCountQuery = loadGroupTotalCount(dataSource, {\r\n                        filter: (0, _uiData_grid2.createGroupFilter)(groupInfo.path, {\r\n                            filter: storeLoadOptions.filter,\r\n                            group: group\r\n                        }),\r\n                        group: group.slice(groupInfo.path.length),\r\n                        select: storeLoadOptions.select\r\n                    });\r\n                    var groupOffsetQuery = loadGroupTotalCount(dataSource, {\r\n                        filter: (0, _uiData_gridGrouping.createOffsetFilter)(groupInfo.path, {\r\n                            filter: storeLoadOptions.filter,\r\n                            group: group\r\n                        }),\r\n                        group: group.slice(groupInfo.path.length - 1, groupInfo.path.length),\r\n                        select: storeLoadOptions.select\r\n                    });\r\n                    return (0, _deferred.when)(groupOffsetQuery, groupCountQuery).done(function(offset, count) {\r\n                        offset = parseInt(offset.length ? offset[0] : offset);\r\n                        count = parseInt(count.length ? count[0] : count);\r\n                        groupInfo.offset = offset;\r\n                        if (groupInfo.count !== count) {\r\n                            groupInfo.count = count;\r\n                            that.updateTotalItemsCount(options)\r\n                        }\r\n                    })\r\n                }, true)\r\n            }\r\n        }\r\n    }\r\n}());\r\n"]},"metadata":{},"sourceType":"script"}