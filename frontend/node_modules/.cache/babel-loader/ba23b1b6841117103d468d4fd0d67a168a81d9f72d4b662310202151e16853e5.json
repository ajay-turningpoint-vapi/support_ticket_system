{"ast":null,"code":"import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport ownerDocument from '../utils/ownerDocument';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport { elementAcceptingRef, exactProp } from '@material-ui/utils';\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\nfunction clickedRootScrollbar(event) {\n  return document.documentElement.clientWidth < event.clientX || document.documentElement.clientHeight < event.clientY;\n}\n/**\r\n * Listen for click events that occur somewhere in the document, outside of the element itself.\r\n * For instance, if you need to hide a menu when people click anywhere else on your page.\r\n */\n\nfunction ClickAwayListener(props) {\n  var children = props.children,\n    _props$disableReactTr = props.disableReactTree,\n    disableReactTree = _props$disableReactTr === void 0 ? false : _props$disableReactTr,\n    _props$mouseEvent = props.mouseEvent,\n    mouseEvent = _props$mouseEvent === void 0 ? 'onClick' : _props$mouseEvent,\n    onClickAway = props.onClickAway,\n    _props$touchEvent = props.touchEvent,\n    touchEvent = _props$touchEvent === void 0 ? 'onTouchEnd' : _props$touchEvent;\n  var movedRef = React.useRef(false);\n  var nodeRef = React.useRef(null);\n  var mountedRef = React.useRef(false);\n  var syntheticEventRef = React.useRef(false);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    return function () {\n      mountedRef.current = false;\n    };\n  }, []); // can be removed once we drop support for non ref forwarding class components\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    nodeRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(children.ref, handleOwnRef); // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviours like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n\n  var handleClickAway = useEventCallback(function (event) {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    var insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false; // 1. IE 11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n\n    if (!mountedRef.current || !nodeRef.current || clickedRootScrollbar(event)) {\n      return;\n    } // Do not act if user performed touchmove\n\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n    var insideDOM; // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      // TODO v6 remove dead logic https://caniuse.com/#search=composedPath.\n      var doc = ownerDocument(nodeRef.current);\n      insideDOM = !doc.documentElement.contains(event.target) || nodeRef.current.contains(event.target);\n    }\n    if (!insideDOM && (disableReactTree || !insideReactTree)) {\n      onClickAway(event);\n    }\n  }); // Keep track of mouse/touch events that bubbled up through the portal.\n\n  var createHandleSynthetic = function createHandleSynthetic(handlerName) {\n    return function (event) {\n      syntheticEventRef.current = true;\n      var childrenPropsHandler = children.props[handlerName];\n      if (childrenPropsHandler) {\n        childrenPropsHandler(event);\n      }\n    };\n  };\n  var childrenProps = {\n    ref: handleRef\n  };\n  if (touchEvent !== false) {\n    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);\n  }\n  React.useEffect(function () {\n    if (touchEvent !== false) {\n      var mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      var doc = ownerDocument(nodeRef.current);\n      var handleTouchMove = function handleTouchMove() {\n        movedRef.current = true;\n      };\n      doc.addEventListener(mappedTouchEvent, handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return function () {\n        doc.removeEventListener(mappedTouchEvent, handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, touchEvent]);\n  if (mouseEvent !== false) {\n    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);\n  }\n  React.useEffect(function () {\n    if (mouseEvent !== false) {\n      var mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      var doc = ownerDocument(nodeRef.current);\n      doc.addEventListener(mappedMouseEvent, handleClickAway);\n      return function () {\n        doc.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.cloneElement(children, childrenProps));\n}\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The wrapped element.\r\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\r\n   * If `true`, the React tree is ignored and only the DOM tree is considered.\r\n   * This prop changes how portaled elements are handled.\r\n   */\n  disableReactTree: PropTypes.bool,\n  /**\r\n   * The mouse event to listen to. You can disable the listener by providing `false`.\r\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', false]),\n  /**\r\n   * Callback fired when a \"click away\" event is detected.\r\n   */\n  onClickAway: PropTypes.func.isRequired,\n  /**\r\n   * The touch event to listen to. You can disable the listener by providing `false`.\r\n   */\n  touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\nexport default ClickAwayListener;","map":{"version":3,"names":["React","ReactDOM","PropTypes","ownerDocument","useForkRef","useEventCallback","elementAcceptingRef","exactProp","mapEventPropToEvent","eventProp","substring","toLowerCase","clickedRootScrollbar","event","document","documentElement","clientWidth","clientX","clientHeight","clientY","ClickAwayListener","props","children","_props$disableReactTr","disableReactTree","_props$mouseEvent","mouseEvent","onClickAway","_props$touchEvent","touchEvent","movedRef","useRef","nodeRef","mountedRef","syntheticEventRef","useEffect","current","handleOwnRef","useCallback","instance","findDOMNode","handleRef","ref","handleClickAway","insideReactTree","insideDOM","composedPath","indexOf","doc","contains","target","createHandleSynthetic","handlerName","childrenPropsHandler","childrenProps","mappedTouchEvent","handleTouchMove","addEventListener","removeEventListener","undefined","mappedMouseEvent","createElement","Fragment","cloneElement","process","env","NODE_ENV","propTypes","isRequired","bool","oneOf","func"],"sources":["D:/TurningPoint Project/support_ticket_system/frontend/node_modules/@material-ui/core/esm/ClickAwayListener/ClickAwayListener.js"],"sourcesContent":["import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport ownerDocument from '../utils/ownerDocument';\r\nimport useForkRef from '../utils/useForkRef';\r\nimport useEventCallback from '../utils/useEventCallback';\r\nimport { elementAcceptingRef, exactProp } from '@material-ui/utils';\r\n\r\nfunction mapEventPropToEvent(eventProp) {\r\n  return eventProp.substring(2).toLowerCase();\r\n}\r\n\r\nfunction clickedRootScrollbar(event) {\r\n  return document.documentElement.clientWidth < event.clientX || document.documentElement.clientHeight < event.clientY;\r\n}\r\n/**\r\n * Listen for click events that occur somewhere in the document, outside of the element itself.\r\n * For instance, if you need to hide a menu when people click anywhere else on your page.\r\n */\r\n\r\n\r\nfunction ClickAwayListener(props) {\r\n  var children = props.children,\r\n      _props$disableReactTr = props.disableReactTree,\r\n      disableReactTree = _props$disableReactTr === void 0 ? false : _props$disableReactTr,\r\n      _props$mouseEvent = props.mouseEvent,\r\n      mouseEvent = _props$mouseEvent === void 0 ? 'onClick' : _props$mouseEvent,\r\n      onClickAway = props.onClickAway,\r\n      _props$touchEvent = props.touchEvent,\r\n      touchEvent = _props$touchEvent === void 0 ? 'onTouchEnd' : _props$touchEvent;\r\n  var movedRef = React.useRef(false);\r\n  var nodeRef = React.useRef(null);\r\n  var mountedRef = React.useRef(false);\r\n  var syntheticEventRef = React.useRef(false);\r\n  React.useEffect(function () {\r\n    mountedRef.current = true;\r\n    return function () {\r\n      mountedRef.current = false;\r\n    };\r\n  }, []); // can be removed once we drop support for non ref forwarding class components\r\n\r\n  var handleOwnRef = React.useCallback(function (instance) {\r\n    // #StrictMode ready\r\n    nodeRef.current = ReactDOM.findDOMNode(instance);\r\n  }, []);\r\n  var handleRef = useForkRef(children.ref, handleOwnRef); // The handler doesn't take event.defaultPrevented into account:\r\n  //\r\n  // event.preventDefault() is meant to stop default behaviours like\r\n  // clicking a checkbox to check it, hitting a button to submit a form,\r\n  // and hitting left arrow to move the cursor in a text input etc.\r\n  // Only special HTML elements have these default behaviors.\r\n\r\n  var handleClickAway = useEventCallback(function (event) {\r\n    // Given developers can stop the propagation of the synthetic event,\r\n    // we can only be confident with a positive value.\r\n    var insideReactTree = syntheticEventRef.current;\r\n    syntheticEventRef.current = false; // 1. IE 11 support, which trigger the handleClickAway even after the unbind\r\n    // 2. The child might render null.\r\n    // 3. Behave like a blur listener.\r\n\r\n    if (!mountedRef.current || !nodeRef.current || clickedRootScrollbar(event)) {\r\n      return;\r\n    } // Do not act if user performed touchmove\r\n\r\n\r\n    if (movedRef.current) {\r\n      movedRef.current = false;\r\n      return;\r\n    }\r\n\r\n    var insideDOM; // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\r\n\r\n    if (event.composedPath) {\r\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\r\n    } else {\r\n      // TODO v6 remove dead logic https://caniuse.com/#search=composedPath.\r\n      var doc = ownerDocument(nodeRef.current);\r\n      insideDOM = !doc.documentElement.contains(event.target) || nodeRef.current.contains(event.target);\r\n    }\r\n\r\n    if (!insideDOM && (disableReactTree || !insideReactTree)) {\r\n      onClickAway(event);\r\n    }\r\n  }); // Keep track of mouse/touch events that bubbled up through the portal.\r\n\r\n  var createHandleSynthetic = function createHandleSynthetic(handlerName) {\r\n    return function (event) {\r\n      syntheticEventRef.current = true;\r\n      var childrenPropsHandler = children.props[handlerName];\r\n\r\n      if (childrenPropsHandler) {\r\n        childrenPropsHandler(event);\r\n      }\r\n    };\r\n  };\r\n\r\n  var childrenProps = {\r\n    ref: handleRef\r\n  };\r\n\r\n  if (touchEvent !== false) {\r\n    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);\r\n  }\r\n\r\n  React.useEffect(function () {\r\n    if (touchEvent !== false) {\r\n      var mappedTouchEvent = mapEventPropToEvent(touchEvent);\r\n      var doc = ownerDocument(nodeRef.current);\r\n\r\n      var handleTouchMove = function handleTouchMove() {\r\n        movedRef.current = true;\r\n      };\r\n\r\n      doc.addEventListener(mappedTouchEvent, handleClickAway);\r\n      doc.addEventListener('touchmove', handleTouchMove);\r\n      return function () {\r\n        doc.removeEventListener(mappedTouchEvent, handleClickAway);\r\n        doc.removeEventListener('touchmove', handleTouchMove);\r\n      };\r\n    }\r\n\r\n    return undefined;\r\n  }, [handleClickAway, touchEvent]);\r\n\r\n  if (mouseEvent !== false) {\r\n    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);\r\n  }\r\n\r\n  React.useEffect(function () {\r\n    if (mouseEvent !== false) {\r\n      var mappedMouseEvent = mapEventPropToEvent(mouseEvent);\r\n      var doc = ownerDocument(nodeRef.current);\r\n      doc.addEventListener(mappedMouseEvent, handleClickAway);\r\n      return function () {\r\n        doc.removeEventListener(mappedMouseEvent, handleClickAway);\r\n      };\r\n    }\r\n\r\n    return undefined;\r\n  }, [handleClickAway, mouseEvent]);\r\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.cloneElement(children, childrenProps));\r\n}\r\n\r\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * The wrapped element.\r\n   */\r\n  children: elementAcceptingRef.isRequired,\r\n\r\n  /**\r\n   * If `true`, the React tree is ignored and only the DOM tree is considered.\r\n   * This prop changes how portaled elements are handled.\r\n   */\r\n  disableReactTree: PropTypes.bool,\r\n\r\n  /**\r\n   * The mouse event to listen to. You can disable the listener by providing `false`.\r\n   */\r\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', false]),\r\n\r\n  /**\r\n   * Callback fired when a \"click away\" event is detected.\r\n   */\r\n  onClickAway: PropTypes.func.isRequired,\r\n\r\n  /**\r\n   * The touch event to listen to. You can disable the listener by providing `false`.\r\n   */\r\n  touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\r\n} : void 0;\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  // eslint-disable-next-line\r\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\r\n}\r\n\r\nexport default ClickAwayListener;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}